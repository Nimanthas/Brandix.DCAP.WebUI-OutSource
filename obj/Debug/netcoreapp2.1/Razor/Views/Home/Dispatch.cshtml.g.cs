#pragma checksum "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "07c9e5bd419ec23b59addeb15424ac08df0812be"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Dispatch), @"mvc.1.0.view", @"/Views/Home/Dispatch.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Dispatch.cshtml", typeof(AspNetCore.Views_Home_Dispatch))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI;

#line default
#line hidden
#line 2 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"07c9e5bd419ec23b59addeb15424ac08df0812be", @"/Views/Home/Dispatch.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d6ac14fb493c2990ba4a5667bd32d8705427078c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Dispatch : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "size-a4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "size-letter", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "size-executive", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(32, 5354, true);
            WriteLiteral(@"

<script type=""text/javascript"">
    var selectedDate = null;
    var fromdatePicker = null;
    var todatePicker = null;
    var scheduleObject = null;
    var operationList = null;
    var todayDate = null;
    var scrapItems = [];
    var SoberSheetMode = false;
    var SSheetSCHNo = null;
    var SSheetSCHId = null;
    var SSAlreadySaved = false;

    //views
    var createNewPass = null;
    var addItemsGrid = null;
    var updateStatus = null;
    var showInfo = null;
    var checkAllBagsWindow = null;
    var printpdfwindow = null;

    //Items
    var rowDataItem = null;
    var dispatchid = null;
    var userPermissionList = null;

    var clickedbutton = 0;
    var expandedTableWindow = null;
    var errorTableWindow = null;

    //Grid functions - checkbox selection
    var checkedIds = {};

    getSessionInfo();

    $(document).ready(function () {
        $('#sitebody').removeClass('body-login');
        $(""#sitebody"").append(
            '<div id=""ajaxBu");
            WriteLiteral(@"sy"" class=""ajaxBusy""></div>'
        );
        $(""#ajaxBusy"").hide();
        checkLoginStatus();
        $('#pageTitleBar').html('<i class=""fas fa-barcode pageMainIcon""></i><span class=""pageTitle"">DCap - Good Control</span>');
        initializeControls();

        checkIdle();
        if (isValidClient == Answer.Null) {
            window.location.href = ""Login"";
        }
        else if (isValidClient != null && clientconfig.dataCaptureMode != DataCaptureMode.Menu) {
            if (clientconfig.dataCaptureMode == DataCaptureMode.Barcode) {
                msgBox.show('මෙම යන්ත්‍රයට බල්ක් අප්ඩේට් කිරීම සඳහා අවසර නැත.', 'This device is not authorized for Menu update', 'අවවාදයයි / Warning', 'BU01', 'Warning', function () {
                    if (clientconfig.dataCaptureMode == DataCaptureMode.Washing) {
                        window.location.href = ""Menu"";
                    }
                });
            }
        }
    });

    function checkLoginStatus() {
        if (sessio");
            WriteLiteral(@"nStorage.getItem(""UserId"") != """") {
            $(""#toolBarLoggedinUser"").html(sessionStorage.getItem(""UserId""));
        } else {
            $(""#toolBarLoggedinUser"").html("""");
        }
        if (sessionStorage.getItem(""IsSignedIn"") == Answer.Null || sessionStorage.getItem(""IsSignedIn"") == Answer.No) {
            $(""#loginBar"").hide();
            window.location.href = ""Login"";
        } else {
            $(""#loginBar"").show();
        }
    }

    function initializeControls() { 
        userPermissionList = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
        //console.log(""to check permission for gatepass:"", AccessibleDispatchFunctions, userPermissionList);
        if (userPermissionList.some(permission => permission.functionId === AccessibleDispatchFunctions.CreateGatepass)) {
            $(""#createNewGatePass"").show();
        } else {
           $(""#createNewGatePass"").hide(); 
        }
        //Data selectors
        $(""#DateCreatedFilter"").kendoDatePicker({");
            WriteLiteral(@"format:""yyyy-MM-dd"",min:new Date(1900,0,1,0,0,0,0),max:new Date(2099,11,31,0,0,0,0)});
        todayDate = new Date();
        $(""#DateCreatedFilter"").data(""kendoDatePicker"").value(todayDate);
        
	    $(""#StatusFilter"").kendoDropDownList({""dataSource"":[{""Text"":""All"",""Value"":""0""},
                                                            {""Text"":""Pending Approval"",""Value"":""1""},
                                                            {""Text"":""Approved - Not Send"",""Value"":""2""},
                                                            {""Text"":""Security Passed"",""Value"":""3""},
                                                            {""Text"":""Security Recieved"",""Value"":""4""},
                                                            {""Text"":""Closed"",""Value"":""5""}],
                                                ""dataTextField"":""Text"",""dataValueField"":""Value""});

        
        
        $(""#RequestTypeFilter"").kendoDropDownList({""dataSource"":[{""Text"":""All"",""Value"":""0""},
            ");
            WriteLiteral(@"                                                    {""Text"":""Factory Dispatch"",""Value"":""100""},
                                                                {""Text"":""BFL Dispatch"",""Value"":""200""},{""Text"":""Factory Production Dispatch"",""Value"":""300""}],
                                                                ""dataTextField"":""Text"",""dataValueField"":""Value""});

        $(""#MonthFilter"").kendoDatePicker({
                    start: ""year"",
                    depth: ""year"",
                    format: ""yyyy-MM"",
                    dateInput: true
                });
        //console.log(sessionStorage.TxUser.userId);//use UserPermissionList to configure factory user details 
        
        var userpermissions = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
        var dropdowndata = [];
        var usedfaccodes = """";

        $(""#ApproverFilter"").kendoDropDownList({""dataSource"": [],""filter"": ""contains"",""dataTextField"": ""userName"",""dataValueField"": ""userId"",""optionLabel"": ""se");
            WriteLiteral("lect user\"});\r\n\r\n        $.each(userpermissions, function (index, permission) {\r\n            if(!usedfaccodes.includes(permission.facCode)){\r\n                    //Approver\r\n                    $.ajax({\r\n                        url: \'");
            EndContext();
            BeginContext(5387, 14, false);
#line 126 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                         Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(5401, 1612, true);
            WriteLiteral(@"/Lookup/GetUsersByFunction?FunctionId=' + AccessibleDispatchFunctions.ApproveGatepass + '&FacCode=' + permission.facCode,
                        type: 'GET',
                        dataType: 'json',
                        //async: false,
                        contentType: 'application/json',
                        beforeSend: function () {
                            $(""#ajaxBusy"").show();
                        },
                        complete: function () {
                            $(""#ajaxBusy"").hide();
                        },
                        success: function (response) {
                            if(response[0] != null) {
                                dropdowndata = dropdowndata.concat(response);
                                $(""#ApproverFilter"").data(""kendoDropDownList"").setDataSource(dropdowndata);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                           ");
            WriteLiteral(@" formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                        }
                    });
                    usedfaccodes = permission.facCode + "" , "";
                }
        });
        
        $(""#RequestIdFilter"").keydown(function (e) {
                if (e.keyCode == 13) {
                    RefreshRequestGrid();
                }
        });

        $(""#scanBagBarodeSearch"").keydown(function (e) {
                if (e.keyCode == 13) {
                    highlightRow();
                }
        });

        $.ajax({
            url: '");
            EndContext();
            BeginContext(7014, 14, false);
#line 164 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(7028, 812, true);
            WriteLiteral(@"/Lookup/GetFactoryNames',
            type: 'GET',
            dataType: 'json',
            //async: false,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (response) {
                $(""#LocationToFilter"").kendoDropDownList({""dataSource"": response,filter: ""contains"",""dataTextField"": ""loc_Description"",""dataValueField"": ""loc_Code"",""optionLabel"": ""Select a location...""});
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
            }
        });

        $.ajax({
            url: '");
            EndContext();
            BeginContext(7841, 14, false);
#line 184 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(7855, 29823, true);
            WriteLiteral(@"/Lookup/GetUsersByFunction?FunctionId=' + AccessibleDispatchFunctions.CreateGatepass,
            type: 'GET',
            dataType: 'json',
            //async: false,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (response) {
                $(""#CreatedByFilter"").kendoDropDownList({""dataSource"": response, filter: ""contains"",""dataTextField"": ""userName"",""dataValueField"": ""userId"",""optionLabel"": ""Select a user...""});
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
            }
        });
        
        //End of data selections

        //For Request loading
        //Grid definition
        //Start of Home Request Summary Grid
        $(""#request-grid"").kendoGrid({
            t");
            WriteLiteral(@"oolbar: [""pdf"", ""excel""],
            pdf: {
                allPages: true,
                author: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                creator: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                date: (new Date()).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric'}),
                fileName: ""request summary""
            },
            excel: {
                allPages: true,
                fileName: ""request-summary.xlsx"",
                filterable: true
            },
            reorderable: true,
            resizable: true,
            scrollable: true,  
            dataBound: OnGridDataBound,     
            sortable: true,
            filterable: true,
            pageable: true,
            pageable: {
                    pageSizes: true,
                    buttonCount: 10
                },
            dataSource: {
                schema: {
                    model: {
 ");
            WriteLiteral(@"                       id: ""ControlId"",
                        fields: {
                            Status: { editable: false },
                            ControlId: { type: ""string"", editable: false },
                            Return : { type: ""string"", editable: false },
                            REType: { type: ""string"", editable: false },
                            DEPId: { type: ""string"", editable: false },
                            Seq: { editable: false },
                            Type: { editable: false },
                            Approver: { type: ""string"", editable: false },
                            LocationFrom: { type: ""string"", editable: false },
                            LocationTo: { type: ""string"", editable: false },
                            Address: { editable: true },
                            DepartmentName: { type: ""string"", editable: false },
                            Quantity: { type: ""string"", editable: false },
                            Cr");
            WriteLiteral(@"eatedBy: { type: ""string"", editable: false },
                            CreatedOn: { type: ""date"", editable: false },
                            Remark: { type: ""string"", editable: false },
                        },
                    }
                },
                batch: true,
                pageSize: 5,
            },
            columns:[
                        {title:""Status"",field:""Status"",width:""290px"", filterable: false, template: ""#if (Status == '1' ) {# <div class='mb-2 mr-2 badge badge-primary const-width-badge' style='width: 90%; height: 16px; font-size: 16px; margin-left: -3px;'>Pending Approval"" + 
                        ""</div> #} else if (Status == '2'){ # <div class='mb-2 mr-2 badge badge-secondary const-width-badge' style='width: 90%; height: 16px; font-size: 16px; margin-left: -3px;'>Approved - Not Send"" +
                        ""</div> #} else if (Status == '3'){ # <div class='mb-2 mr-2 badge badge-success const-width-badge' style='width: 90%; height: 16px; font-s");
            WriteLiteral(@"ize: 16px; margin-left: -3px;'>Security Passed"" +
                        ""</div> #} else if (Status == '4'){ # <div class='mb-2 mr-2 badge badge-info const-width-badge' style='width: 90%; height: 16px; font-size: 16px; margin-left: -3px;'>Security Recevied"" +
                        ""</div> #} else if (Status == '5'){ # <div class='mb-2 mr-2 badge badge-warning const-width-badge' style='width: 90%; height: 16px; font-size: 16px; margin-left: -3px;'>Closed"" +
                        ""</div> #}#"" },
                        {title:""Update Status"", width:""210px"", filterable: false, template: ""<div><button id='printGatePassRequestButton' class='k-button update-request-status' style='width: 90%; height: 36px; border-radius: 13px;' onclick='setButtonStatus(1)'><span class='k-icon k-i-video-external updatestatusicon' style='margin-right: 7px; text-align:left;'></span><span>Update Status</span></button></div>""},
                        {title:""Print"",field:""Status"",width:""200px"", filterable: false,encoded:true, ");
            WriteLiteral(@"template: ""#if (parseInt(Status) == 2 ) {# <div><button id='printGatePassRequestButton' class='k-button print-request-status' style='width: 90%; height: 36px; margin-left: 10px; border-radius: 13px;' onclick='setButtonStatus(2)'><span class='k-icon k-i-print' style='margin-right: 7px; text-align:left;'></span><span>Print</span></button>"" + 
                        ""</div> #} else if (parseInt(Status) == 1){ # <div style='text-align: center;'><button id='printGatePassRequestButton' class='k-button print-request-status' style='width: 90%; height: 36px; background-color: aliceblue !important; border-radius: 13px;'><span class='k-icon k-i-print' style='margin-right: 7px; text-align:left;'></span><span>Print</span></button>"" + 
                        ""</div> #} else { # <div style='text-align: center;''><button id='printGatePassRequestButton' class='k-button print-request-status' style='width: 90%; height: 36px; border-radius: 13px;' onclick='setButtonStatus(2)'><span class='k-icon k-i-print' style='margin-righ");
            WriteLiteral(@"t: 7px; text-align:left;'></span><span>Print (Copy)</span></button>"" + 
                        ""</div> #}#"" },
                        {title:""Request No"",field:""ControlId"",width:""135px"",encoded:true},
                        {title:""Type"",field:""Return"",width:""120px"",encoded:true, filterable: false, template: ""#if (Return == '1' ) {# <div class='mb-2 mr-2 badge badge-danger const-width-badge' style='height: 16px; font-size: 16px; margin-left: -3px;'>Return"" + 
                        ""</div> #} else if (Return == '0'){ # <div class='mb-2 mr-2 badge badge-success const-width-badge' style='height: 16px; font-size: 16px; margin-left: -3px;'>Depart"" +
                        ""</div> #}#""},
                        {title:""Request Type"",field:""REType"",width:""180px"",encoded:true, filterable: false, template: ""#if (REType == '100' ) {# <div>Factory Dispatch (100)"" + 
                        ""</div> #} else if (REType == '200'){ # <div>BFL Dispatch (200)"" +
                        ""</div> #} else if (REType ");
            WriteLiteral(@"== '300'){ # <div>Factory Production Dispatch (200)"" +
                        ""</div> #}#""},
                        {title:""DEPId"",field:""DEPId"",width:""140px"",encoded:true, hidden:true},
                        {title:""Seq"",field:""Seq"",width:""105px"",encoded:true, hidden:true},
                        {title:""Location From"",field:""LocationFrom"",width:""155px""},
                        {title:""Approver"",field:""Approver"",width:""140px"",encoded:true},
                        {title:""Receiver Location"",field:""LocationTo"",width:""180px"",encoded:true, filterable: false},
                        {title:""Receiver Address"",field:""Address"",width:""230px"",encoded:true},
                        {title:""Receiver Department"",field:""DepartmentName"",width:""215px"",encoded:true, filterable: false, template: ""#if (DepartmentName == '1' ) {# <div>Washing out (Factory)"" + 
                        ""</div> #} else if (DepartmentName == '2'){ # <div>Washing in (BFL)"" +
                        ""</div> #} else if (DepartmentNam");
            WriteLiteral(@"e == '3'){ # <div>Washing out (BFL)"" +
                        ""</div> #} else if (DepartmentName == '4'){ # <div>Washing receive (Factory)"" +
                        ""</div> #}#"" },
                        {title:""Quantity"",field:""Quantity"",width:""112px"",encoded:true},
                        {title:""Created By"",field:""CreatedBy"",width:""13 5px"",encoded:true},
                        {title:""Created"",field:""CreatedOn"",width:""133px"",filterable:{operators:{date:{gte:""From"",lte:""To""}}}},//template: ""#= kendo.toString(kendo.parseDate(CreatedOn, 'yyyy-MM-ddhh:mm:ss'), 'MM/dd/yyyy') #""
                        {title:""Remarks"",field:""Remark"",width:""200px"",encoded:true}, 
                        {title:""Info"", width:""90px"", command: [{ name: ""info"",
                                    template: ""<a class='k-button k-grid-info k-small'><span class='k-icon k-i-information'></span> info</a>"",
                                    click(e){
                                                setButtonStatus(3)
     ");
            WriteLiteral(@"                                           //console.log(""info button clicked"");
                                            }
                                    }
                        ]},     
                    ],
        });
        //End of Home Request Summary Grid

        //Item Grid Initilize
        $(""#request-items-grid"").kendoGrid({
            dataSource: {
                schema: {
                    model: {
                        id: ""Key"",
                        fields: {
                            Key: { type: ""string"", editable: false },
                            Bag_Barcode: { type: ""string"", editable: false },
                            WFIdBag: { type: ""string"", editable: false },
                            Factory: { type: ""string"", editable: false },
                            DEPIdBag: { type: ""string"", editable: false },
                            SeqBag: { type: ""string"", editable: false },
                            L1idBag: { type: ""string"", ed");
            WriteLiteral(@"itable: false },
                            L2idBag: { type: ""string"", editable: false },
                            L3idBag: { type: ""string"", editable: false },
                            L4idBag: { type: ""string"", editable: false },
                            L5idBag: { type: ""string"", editable: false },
                            Mode: { type: ""string"", editable: false },
                            Bag_Close_DateTime: { type: ""date"", editable: false },
                            Style: { type: ""string"", editable: false },
                            Shedule: { type: ""string"", editable: false },
                            Color: { type: ""string"", editable: false },
                            Size: { type: ""string"", editable: false },
                            Quantity: { type: ""number"", editable: false },
                            Remarks: { type: ""string"", editable: true },
                            BagStatus: { editable: false },
                            OrderQuantity: { t");
            WriteLiteral(@"ype: ""number"", editable: false },
                            ReportedQuantity: { type: ""number"", editable: false }
                        },
                    }
                },
                batch: true,
                aggregate: [{ field: ""Quantity"", aggregate: ""sum"" }]
            },
            navigatable: true,
            scrollable: true,
            dataBound: OnGridDataBound,
            persistSelection: true,        
            sortable: true,
            filterable: true,
            editable: true,
            columns: [
                { field:""Key"",width:""0px"", hidden: true },
                { field: ""Bag_Barcode"", title: ""Barcode"", width: ""50px"" },
                { field: ""WFIdBag"", title: ""WFIdBag"", width: ""50px"", hidden: true },
                { field: ""Factory"", title: ""Factory"", width: ""50px"", hidden: true },
                { field: ""DEPIdBag"", title: ""DEPIdBag"", width: ""50px"", hidden: true },
                { field: ""SeqBag"", title: ""SeqBag"", width: ""5");
            WriteLiteral(@"0px"", hidden: true },
                { field: ""L1idBag"", title: ""L1idBag"", width: ""50px"", hidden: true },
                { field: ""L2idBag"", title: ""L2idBag"", width: ""50px"", hidden: true },
                { field: ""L3idBag"", title: ""L3idBag"", width: ""50px"", hidden: true },
                { field: ""L4idBag"", title: ""L4idBag"", width: ""50px"", hidden: true },
                { field: ""L5idBag"", title: ""L5idBag"", width: ""50px"", hidden: true },
                { field: ""Mode"", title: ""Mode"", width: ""50px"", template: ""#if (Mode == '1' ) {# <div>Bag"" + 
                        ""</div> #} else if (Mode == '2'){ # <div>Travel Tag"" +
                        ""</div> #} else if (Mode == '3'){ # <div>Buddy Tag"" +
                        ""</div> #}#""  },
                { field: ""Bag_Close_DateTime"", title: ""Closed Date and Time"", hidden: true, width: ""70px"", format:""{0:dd-MM-yyyy hh:mm:ss}"",filterable:{operators:{date:{gte:""From"",lte:""To""}}}},
                { field: ""Style"", title: ""Style"", width: ""50px"" }");
            WriteLiteral(@",
                { field: ""Shedule"", title: ""Shedule"", width: ""50px"" },
                { field: ""Color"", title: ""Color"", width: ""50px"" },
                { field: ""Size"", title: ""Size"", width: ""50px"", hidden: true },
                { field: ""Quantity"", title: ""Qty"", width: ""40px"", editor: customeEditorQuantitiy, aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                { field: ""Remarks"", title: ""Remarks"", width: ""100px"", editor: customeEditorRemark },
                { field: ""BagStatus"", title: ""Status"", width: ""50px"", hidden: true , filterable: false, template: ""#if (BagStatus == '1' ) {# <div>prepared"" + 
                        ""</div> #} else if (BagStatus == '0'){ # <div>unprepared"" +
                        ""</div> #}#"" },
                { field: ""OrderQuantity"", title: ""Qty"", width: ""40px"", hidden: true },
                { field: ""ReportedQuantity"", title: ""Qty"", width: ""40px"", hidden: true },
            ],
        });
        //End of Item Grid");
            WriteLiteral(@"

        //Start of Expanded Window Item Grid
        $(""#expand-items-grid"").kendoGrid({
            toolbar: [""pdf"",""excel""],
            pdf: {
                allPages: true,
                author: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                creator: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                date: (new Date()).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric'}),
                fileName: ""expanded request items""
            },
            excel: {
                allPages: true,
                fileName: ""dispatch-items.xlsx"",
                filterable: true
            },
            dataSource: {
                schema: {
                    model: {
                        id: ""bag_Barcode"",
                        fields: {
                            Key: { type: ""string"", editable: false },
                            Bag_Barcode: { type: ""string"", editable: false },
         ");
            WriteLiteral(@"                   WFIdBag: { type: ""string"", editable: false },
                            DEPIdBag: { type: ""string"", editable: false },
                            SeqBag: { type: ""string"", editable: false },
                            L1idBag: { type: ""string"", editable: false },
                            L2idBag: { type: ""string"", editable: false },
                            L3idBag: { type: ""string"", editable: false },
                            L4idBag: { type: ""string"", editable: false },
                            L5idBag: { type: ""string"", editable: false },
                            Mode: { type: ""string"", editable: false },
                            Bag_Close_DateTime: { type: ""date"", editable: false },
                            Style: { type: ""string"", editable: false },
                            Shedule: { type: ""string"", editable: false },
                            Color: { type: ""string"", editable: false },
                            Size: { type: ""string"", edit");
            WriteLiteral(@"able: false },
                            Quantity: { type: ""number"", editable: true },
                            Remarks: { editable: true },
                            BagStatus: { editable: false },
                            OrderQuantity: { type: ""number"", editable: false },
                            ReportedQuantity: { type: ""number"", editable: false }
                        },
                    }
                },
                batch: true,
                group: {
                            field: ""Key"", aggregates: [
                                { field: ""Style"", aggregate: ""count"" },
                                { field: ""Quantity"", aggregate: ""sum""},
                                { field: ""Key"", aggregate: ""count"" }
                            ]
                        },
                aggregate: [ { field: ""Style"", aggregate: ""count"" },
                             { field: ""Quantity"", aggregate: ""sum"" },
                             { field: ""Key"", aggre");
            WriteLiteral(@"gate: ""min"" },
                             { field: ""Key"", aggregate: ""max"" }]
            },
            navigatable: true,
            scrollable: true,
            dataBound: OnGridDataBound,
            persistSelection: true,        
            sortable: true,
            filterable: true,
            resizable: true,
            editable: true,
            columns: [
                { field:""Key"",width:""0px"", hidden: true , aggregates: [""count""], groupHeaderTemplate: ""#= value # (Count: #= count#)"" },
                { field: ""Bag_Barcode"", title: ""Barcode"", width: ""50px"", editable: false },
                { field: ""WFIdBag"", title: ""WFIdBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""DEPIdBag"", title: ""DEPIdBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""SeqBag"", title: ""SeqBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L1idBag"", title: ""L1idBag"", width: ""50px"", hidden: true, editable: f");
            WriteLiteral(@"alse },
                { field: ""L2idBag"", title: ""L2idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L3idBag"", title: ""L3idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L4idBag"", title: ""L4idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L5idBag"", title: ""L5idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""Mode"", title: ""Mode"", width: ""50px"", editable: false, template: ""#if (Mode == '1' ) {# <div>Bag"" + 
                        ""</div> #} else if (Mode == '2'){ # <div>Travel Tag"" +
                        ""</div> #} else if (Mode == '3'){ # <div>Buddy Tag"" +
                        ""</div> #}#""  },
                { field: ""Bag_Close_DateTime"", title: ""Closed Date and Time"", width: ""70px"", editable: false, format:""{0:dd-MM-yyyy hh:mm:ss}"",filterable:{operators:{date:{gte:""From"",lte:""To""}}}},
                { field: ""Style"", title: ""Style"", width: ""50px"", editable: fa");
            WriteLiteral(@"lse },
                { field: ""Shedule"", title: ""Shedule"", width: ""50px"", editable: false },
                { field: ""Color"", title: ""Color"", width: ""50px"", editable: false },
                { field: ""Size"", title: ""Size"", width: ""50px"", editable: false, footerTemplate: ""Total"", groupFooterTemplate: ""Sub Total"" },
                { field: ""Quantity"", title: ""Qty"", width: ""40px"", editable: false, aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                { field: ""Remarks"", title: ""Remarks"", width: ""100px"", editable: true },
                { field: ""BagStatus"", title: ""Status"", width: ""50px"", editable: false , filterable: false, template: ""#if (BagStatus == '1' ) {# <div>prepared"" + 
                        ""</div> #} else if (BagStatus == '0'){ # <div>unprepared"" +
                        ""</div> #}#"" },
                { field: ""OrderQuantity"", title: ""Qty"", width: ""40px"", hidden: true, editable: false },
                { field: ""ReportedQuantity"", title: """);
            WriteLiteral(@"Qty"", width: ""40px"", hidden: true, editable: false },
            ],
            editable: ""inline""
        });
        //End of Expanded Window Item Grid

        //Start of Expanded Window Item Grid
        $(""#error-items-grid"").kendoGrid({
            toolbar: [""pdf"", ""excel""],
            pdf: {
                allPages: true,
                author: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                creator: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                date: (new Date()).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric'}),
                fileName: ""rejected items summary""
            },
            excel: {
                allPages: true,
                fileName: ""dispatch-items.xlsx"",
                filterable: true
            },
            dataSource: {
                schema: {
                    model: {
                        id: ""bag_Barcode"",
                        fields: {
 ");
            WriteLiteral(@"                           Key: { type: ""string"", editable: false },
                            Bag_Barcode: { type: ""string"", editable: false },
                            WFIdBag: { type: ""string"", editable: false },
                            DEPIdBag: { type: ""string"", editable: false },
                            SeqBag: { type: ""string"", editable: false },
                            L1idBag: { type: ""string"", editable: false },
                            L2idBag: { type: ""string"", editable: false },
                            L3idBag: { type: ""string"", editable: false },
                            L4idBag: { type: ""string"", editable: false },
                            L5idBag: { type: ""string"", editable: false },
                            Mode: { type: ""string"", editable: false },
                            Bag_Close_DateTime: { type: ""date"", editable: false },
                            Style: { type: ""string"", editable: false },
                            Shedule: { type: """);
            WriteLiteral(@"string"", editable: false },
                            Color: { type: ""string"", editable: false },
                            Size: { type: ""string"", editable: false },
                            Quantity: { type: ""number"", editable: true },
                            Remarks: { editable: true },
                            BagStatus: { editable: true },
                            OrderQuantity: { type: ""number"", editable: false },
                            ReportedQuantity: { type: ""number"", editable: false }
                        },
                    }
                },
                batch: true,
                group: {
                        field: ""Key"", aggregates: [
                            { field: ""Style"", aggregate: ""count"" },
                            { field: ""Quantity"", aggregate: ""sum""},
                            { field: ""Key"", aggregate: ""count"" }
                        ]
                    },
                aggregate: [ { field: ""Style"", aggregate: ");
            WriteLiteral(@"""count"" },
                             { field: ""Quantity"", aggregate: ""sum"" },
                             { field: ""Key"", aggregate: ""min"" },
                             { field: ""Key"", aggregate: ""max"" }]
            },
            navigatable: true,
            scrollable: true,
            dataBound: OnGridDataBound,
            persistSelection: true,        
            sortable: true,
            filterable: true,
            resizable: true,
            editable: true,
            columns: [
                { field:""Key"",width:""0px"", hidden: true },
                { field: ""Bag_Barcode"", title: ""Barcode"", width: ""50px"", editable: false },
                { field: ""WFIdBag"", title: ""WFIdBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""DEPIdBag"", title: ""DEPIdBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""SeqBag"", title: ""SeqBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L1idBag"", tit");
            WriteLiteral(@"le: ""L1idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L2idBag"", title: ""L2idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L3idBag"", title: ""L3idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L4idBag"", title: ""L4idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L5idBag"", title: ""L5idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""Mode"", title: ""Mode"", width: ""50px"", editable: false, template: ""#if (Mode == '1' ) {# <div>Bag"" + 
                        ""</div> #} else if (Mode == '2'){ # <div>Travel Tag"" +
                        ""</div> #} else if (Mode == '3'){ # <div>Buddy Tag"" +
                        ""</div> #}#""  },
                { field: ""Bag_Close_DateTime"", title: ""Closed Date and Time"", width: ""70px"", editable: false, format:""{0:dd-MM-yyyy hh:mm:ss}"",filterable:{operators:{date:{gte:""From"",lte:""To""}}}},
                { fiel");
            WriteLiteral(@"d: ""Style"", title: ""Style"", width: ""50px"", editable: false },
                { field: ""Shedule"", title: ""Shedule"", width: ""50px"", editable: false },
                { field: ""Color"", title: ""Color"", width: ""50px"", editable: false },
                { field: ""Size"", title: ""Size"", width: ""50px"", editable: false },
                { field: ""Quantity"", title: ""Qty"", width: ""40px"", editable: false, aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                { field: ""Remarks"", title: ""Remarks"", width: ""100px"", editable: true },
                { field: ""BagStatus"", title: ""Status"", width: ""50px"", editable: false , filterable: false, template: ""#if (BagStatus == '1' ) {# <div>prepared"" + 
                        ""</div> #} else if (BagStatus == '0'){ # <div>unprepared"" +
                        ""</div> #}#"" },
                { field: ""OrderQuantity"", title: ""Order Qty"", width: ""50px"", editable: false },
                { field: ""ReportedQuantity"", title: ""Reported Qty");
            WriteLiteral(@""", width: ""60px"", editable: false }
            ],
            editable: ""inline""
        });
        //End of Expanded Window Item Grid
    }

    function customeEditorRemark(container, options){
        $('<input id=""Remarks"" class=""k-input"" name=""Remarks"" style=""width:180px; border: none;""/>').appendTo(container);
    }

    function customeEditorQuantitiy(container, options){
        $('<input id=""Quantity"" class=""k-input"" name=""Quantity"" style=""width:180px; border: none;"" readonly/>').appendTo(container);
    }

    function setButtonStatus(n) {
        clickedbutton = n;
    }

    function OnGridDataBound(e) {
        var grid = $(""#request-grid"").data().kendoGrid; 
        var gridData = grid.dataSource.view();

        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            if (gridData[i].success == true) {
                var currentRow = grid.table.find(""tr[data-uid='"" + currentUid + ""']"");
                currentRow.css('ba");
            WriteLiteral(@"ckground-color', 'lightgreen');
            }
        }

        var grid = e.sender;
        var rows = grid.tbody.find(""[role='row']"");

        rows.unbind(""click"");
        rows.on(""click"", onClick)
    }

    function onClick(e) {
        if ($(e.target).hasClass(""k-checkbox-label"")) {
            return;
        }
        var row = $(e.target).closest(""tr"");

        var grid = $(""#request-grid"").data().kendoGrid; 
        rowDataItem = grid.dataItem(row);
        
        if(clickedbutton == 1) {
            openUpdateStatusWindow();
        } else if (clickedbutton == 2) {
            openPrintWindow();
        } else if (clickedbutton == 3) {
            openInfoWindow();
        }

        var checkbox = $(row).find("".k-checkbox"");
        checkbox.click();

        clickedbutton = 0;
    };
    //end
    
    function RefreshRequestGrid() {
        DisableInputs();
            $(""#request-grid"").data('kendoGrid').dataSource.data([]);
            var gridData = ");
            WriteLiteral(@"[];
            var wfid = JSON.parse(sessionStorage.getItem(""Clientconfig"")).wfdepinstId;
            var todate = $(""#DateCreatedFilter"").val();
            if (todate != """") {
                todate + ""%2000:00:00"";
            } else {
                todate = ""0001-01-01%2000:00:00""
            }
            
            var status = $(""#StatusFilter"").data(""kendoDropDownList"").value();
            var loccode = $(""#LocationToFilter"").data(""kendoDropDownList"").value();
            var createdby = $(""#CreatedByFilter"").data(""kendoDropDownList"").value();
            var Requesttype = $(""#RequestTypeFilter"").data(""kendoDropDownList"").value();
            var Approver = $(""#ApproverFilter"").data(""kendoDropDownList"").value();
            var requestid = $(""#RequestIdFilter"").val();
            var faccode = """";

            var userpermissions = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
            if(userpermissions.length != 0){
                faccode = userpermissions[0]");
            WriteLiteral(".facCode;\r\n            } else {\r\n                faccode = null;\r\n            }\r\n\r\n            $.ajax({\r\n                url: \'");
            EndContext();
            BeginContext(37679, 14, false);
#line 659 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(37693, 4041, true);
            WriteLiteral(@"/Lookup/GetDispatchDetails?Wfid=' + wfid + '&todate=' + todate + '&status=' + status + '&loccode=' + loccode + '&createdby=' + createdby + '&type=' + Requesttype + '&requestid=' + requestid + '&approver=' + Approver + '&faccode=' + faccode,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                    EnableInputs();
                },
                success: function (response) {
                    //console.log(response);
                    if(response.length != 0) {
                        $.each(response, function (index, elements) {
                            var object = {
                                Status: elements.txnStatus,
                                Type: elements.controlType,
      ");
            WriteLiteral(@"                          REType: elements.controlType,
                                Return: elements.return,
                                ControlId: elements.controlId,
                                DEPId: elements.depid,
                                Seq: elements.seq,
                                Approver: elements.approver,
                                LocationFrom: elements.locFromCode,
                                LocationTo: elements.locName,
                                DepartmentName: elements.depid,
                                CreatedBy: elements.created,
                                CreatedOn: formatDate(elements.createdDateTime), //$.datepicker.formatDate('dd-mm-yy', new Date(elements.txnDateTime)),
                                Quantity: elements.qty01,
                                Remark: elements.remark,
                                Address: elements.locAddress,
                            }
                            gridData.push(object);
");
            WriteLiteral(@"                        });

                        $(""#request-grid"").data('kendoGrid').dataSource.data(gridData);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                    EnableInputs();
                }
            });
    }

    function getSessionInfo() {
        isValidClient = sessionStorage.getItem(""IsValidClient"");
        clientconfig = JSON.parse(sessionStorage.getItem(""Clientconfig""));
        userPermissionList = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
        clientIP = sessionStorage.getItem(""ClientIP"");
    }

    //CREATE NEW REQUEST
    function openCreateNewPass() {
        $(""#newRequestTypeFilter"").kendoDropDownList({""dataSource"":[{""Text"":""Factory Dispatch"",""Value"":""100""},
                                                                {""Text"":""BFL Dispatch"",""Value"":""200""},{""Text"":""Factory Production Dispat");
            WriteLiteral(@"ch"",""Value"":""300""}],
                                                                ""dataTextField"":""Text"",""dataValueField"":""Value"",""optionLabel"": ""Select a type..."", change:ValidateType});
                                                                
        $(""#departmentTo"").kendoDropDownList({""dataSource"":[],""dataTextField"":""Text"",""dataValueField"":""Value"",""optionLabel"": ""Select a department...""});

        $(""#ModeFilter"").kendoDropDownList({""dataSource"":[{""Text"":""All"",""Value"":""0""},
                                                                {""Text"":""Bag"",""Value"":""1""},
                                                                {""Text"":""Travel Tag"",""Value"":""2""},
                                                                {""Text"":""Buddy Tag"",""Value"":""3""}],
                                                                ""dataTextField"":""Text"",""dataValueField"":""Value""});

        
        
        $.ajax({
            url: '");
            EndContext();
            BeginContext(41735, 14, false);
#line 730 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(41749, 909, true);
            WriteLiteral(@"/Lookup/GetFactoryNames',
            type: 'GET',
            dataType: 'json',
            //async: false,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (response) {
                if(response[0] != null) {
                    $(""#newLocationToFilter"").kendoDropDownList({""dataSource"": response,filter: ""contains"",""dataTextField"": ""loc_Description"",""dataValueField"": ""loc_Code"",""optionLabel"": ""Select a location..."", change:OnLocationToChanged});
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
            }
        });

        $.ajax({
            url: '");
            EndContext();
            BeginContext(42659, 14, false);
#line 752 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(42673, 1427, true);
            WriteLiteral(@"/Lookup/GetDepDetailsByBagCreationLogic',
            type: 'GET',
            dataType: 'json',
            //async: false,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (response) {
                if(response[0] != null) {
                    $(""#departmentOperationFilter"").kendoDropDownList({""dataSource"": response,filter: ""contains"",""dataTextField"": ""depdesc"",""dataValueField"": ""operationCode"",""optionLabel"": ""Select a department operation...""});
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
            }
        });

        var userpermissions = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
        var dropdowndata = [];
        var usedfaccodes = ");
            WriteLiteral(@""""";

        $(""#approvers_taglist"").kendoDropDownList({""dataSource"": [],""filter"": ""contains"",""dataTextField"": ""userName"",""dataValueField"": ""userId"",""optionLabel"": ""select user""});

        $.each(userpermissions, function (index, permission) {
            if(!usedfaccodes.includes(permission.facCode)){
                    //Approver
                    $.ajax({
                        url: '");
            EndContext();
            BeginContext(44101, 14, false);
#line 783 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                         Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(44115, 2569, true);
            WriteLiteral(@"/Lookup/GetUsersByFunction?FunctionId=' + AccessibleDispatchFunctions.ApproveGatepass + '&FacCode=' + permission.facCode,
                        type: 'GET',
                        dataType: 'json',
                        //async: false,
                        contentType: 'application/json',
                        beforeSend: function () {
                            $(""#ajaxBusy"").show();
                        },
                        complete: function () {
                            $(""#ajaxBusy"").hide();
                        },
                        success: function (response) {
                            if(response[0] != null) {
                                dropdowndata = dropdowndata.concat(response);
                                $(""#approvers_taglist"").data(""kendoDropDownList"").setDataSource(dropdowndata);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        ");
            WriteLiteral(@"    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                        }
                    });
                    usedfaccodes = permission.facCode + "" , "";
                }
        });

        //""dataSource"": response,

        //$(""#approvers_taglist"").data(""kendoDropDownList"").setDataSource(dropdowndata);

        createNewPass = $(""#createNewPass"").kendoWindow({
            //width: ""60%"",
            title: ""Create new request"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: false,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        var arrows = [38, 40];
        createNewPass.open().center();

        resetControlers();
    }

    //Controllers
    function OnLocationToChanged() {
        DisableInputs();
        var locationTo = $(""#newLocationToFilter"").data(""kendoDropDownList"").value();
        var Requesttype = $(""#newRequestTypeFilter"").data(""kendoDr");
            WriteLiteral(@"opDownList"").value();
        //var departmentOperation = $(""#departmentOperationFilter"").data(""kendoDropDownList"").value();
        //console.log(JSON.parse(sessionStorage.getItem(""Clientconfig"")));
        if(true) { //departmentOperation != """") {
            if(Requesttype != """") {
                if(JSON.parse(sessionStorage.getItem(""Clientconfig"")).facCode == """" ? true : JSON.parse(sessionStorage.getItem(""Clientconfig"")).facCode != locationTo) {
                    $.ajax({
                        url: '");
            EndContext();
            BeginContext(46685, 14, false);
#line 840 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                         Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(46699, 8119, true);
            WriteLiteral(@"/Lookup/GetLocationAddressByCode?inputLocCode=' + locationTo,
                        type: 'GET',
                        //async: false,
                        contentType: 'application/json',
                        beforeSend: function () {
                            $(""#ajaxBusy"").show();
                        },
                        complete: function () {
                            $(""#ajaxBusy"").hide();
                        },
                        success: function (response) {
                            if(response[0] != null) {
                                $(""#address"").val(response[0].loc_Address);
                                EnableInputs();
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                            EnableInputs();
                        }
                    });
              ");
            WriteLiteral(@"  } else {
                    $(""#address"").val('');
                    $(""#ajaxBusy"").hide();
                    $(""#newLocationToFilter"").data(""kendoDropDownList"").select(0);
                    msgBox.show('ඔබට ඔබේ ස්ථානයටම ඉල්ලීමක් සෑදිය නොහැක. වෙනත් ස්ථානයක් තෝරන්න.', 'To your place Can not make a request. Choose another location.', 'Warning', 'BU05', 'Warning', null);
                }
            } else {
                $(""#address"").val('');
                $(""#ajaxBusy"").hide();
                $(""#newLocationToFilter"").data(""kendoDropDownList"").select(0);
                msgBox.show('ඉදිරියට යාමට පෙර කරුණාකර ඉල්ලීම් වර්ගයක් තෝරන්න.', 'Please select a request type before proceed.', 'Warning', 'BU05', 'Warning', null);
            }
        } else {
            $(""#address"").val('');
            $(""#ajaxBusy"").hide();
            $(""#newLocationToFilter"").data(""kendoDropDownList"").select(0);
            msgBox.show('ඉදිරියට යාමට පෙර කරුණාකර ඉල්ලීම් වර්ගයක් තෝරන්න.', 'Please select ");
            WriteLiteral(@"a request type before proceed.', 'Warning', 'BU05', 'Warning', null);
        }
    }

    function ValidateType() { 
        var Requesttype = null;
        DisableInputs();
        Requesttype = $(""#newRequestTypeFilter"").data(""kendoDropDownList"").value();
        //console.log(type);

        if(Requesttype != """") {
            $(""#open-request-item-window-button"").removeAttr(""disabled"");
            $(""#open-request-expand-window-button"").removeAttr(""disabled"");
            
            //Department to
            if(Requesttype == 200){
                $(""#departmentTo"").data(""kendoDropDownList"").setDataSource([{""Text"":""Washing receive (Factory)"",""Value"":""4""},{""Text"":""Washing out (Factory)"",""Value"":""1""}]);
            } else if(Requesttype == 300) {
                $(""#departmentTo"").data(""kendoDropDownList"").setDataSource([{""Text"":""Production Line"",""Value"":""5""}]);
            } else {
                $(""#departmentTo"").data(""kendoDropDownList"").setDataSource([{""Text"":""Washing in (BFL");
            WriteLiteral(@")"",""Value"":""2""},{""Text"":""Washing out (BFL)"",""Value"":""3""}]);
            }
        } else {
            $('#open-request-item-window-button').attr(""disabled"", ""disabled"");
            $('#open-request-expand-window-button').attr(""disabled"", ""disabled"");
            $(""#departmentTo"").data(""kendoDropDownList"").setDataSource([]);
            $(""#approvers_taglist"").data(""kendoDropDownList"").setDataSource([]);
        }
        $(""#request-items-grid"").data(""kendoGrid"").dataSource.data([]);
        EnableInputs();
    }

    function validateCreateRequest(){
        var Requesttype = null;
        var locationTo = null;
        var departmentTo = null;
        var address = null;
        var approver = null;

        var isValid = true;

        Requesttype = $(""#newRequestTypeFilter"").data(""kendoDropDownList"").value();
        locationTo = $(""#newLocationToFilter"").data(""kendoDropDownList"").value();
        address = $(""#address"").val();
        departmentTo = $(""#departmentTo"").data(""ken");
            WriteLiteral(@"doDropDownList"").value();
        approvers = $(""#approvers_taglist"").data(""kendoDropDownList"").value();
        
        if(Requesttype == """") {
            $(""#newRequestTypeFilter"").addClass(""invalid-input"");
            isValid = false;
        }
        if(locationTo == """") {
            $(""#newLocationToFilter"").addClass(""invalid-input"");
            isValid = false;
        }
        if(address == """") {
            $(""#address"").addClass(""invalid-input"");
            isValid = false;
        }
        if(departmentTo == """") {
            $(""#departmentTo"").addClass(""invalid-input"");
            isValid = false;
        }
        if(approvers == """") {
            $(""#approvers_taglist"").addClass(""invalid-input"");
            isValid = false;
        }
        if($(""#request-items-grid"").data(""kendoGrid"").dataSource.data().length == 0) {
            $(""#request-items-grid"").addClass(""invalid-input"");
            isValid = false;
        }
        return isValid;
    }

    f");
            WriteLiteral(@"unction saveRequest() {
        DisableInputs();
        var isValid = validateCreateRequest();
        if(isValid) {
            var selectedgridData = $(""#request-items-grid"").data(""kendoGrid"").dataSource.data();
            var tableData = [];
            var Requesttype = $(""#newRequestTypeFilter"").data(""kendoDropDownList"").value();
            
            $.each(selectedgridData, function (index, element) {
                var tableRowData = {
                    DispatchBarcode: ""1234"",
                    Type: Requesttype, //$(""#newRequestTypeFilter"").data(""kendoDropDownList"").value(),
                    Return: (Requesttype == 300 ? 2 : (Requesttype == 100 ? ( element.Mode == 1 ? 0 : 1 ) : ( element.Mode >= 2 ? 0 : 1 ))),
                    WFIdBag: element.WFIdBag,
                    DEPIdBag: element.DEPIdBag,
                    SeqBag: element.SeqBag,
                    L1idBag: element.L1idBag,
                    L2idBag: element.L2idBag,
                    L3idBag: elem");
            WriteLiteral(@"ent.L3idBag,
                    L4idBag: element.L4idBag,
                    L5idBag: element.L5idBag,
                    BagBarcode: element.Bag_Barcode,
                    Wfid: JSON.parse(sessionStorage.getItem(""Clientconfig"")).wfdepinstId,
                    departmentTo: $(""#departmentTo"").data(""kendoDropDownList"").value(),
                    TxnDateandTime: todayDate,
                    TxnMode: element.Mode,
                    TxnStatus: 1, //Pending Approval Status
                    Qty01: element.Quantity,
                    OperationCode: 150,
                    EnterdBy: sessionStorage.UserId,
                    Remark: element.Remarks,
                    LocFrom: (Requesttype == 200 ? ""F01"" : JSON.parse(sessionStorage.getItem(""Clientconfig"")).facCode),
                    LocCode: $(""#newLocationToFilter"").data(""kendoDropDownList"").value(),
                    Approver: $(""#approvers_taglist"").data(""kendoDropDownList"").value(),
                    ApprovalStatus: 0,
");
            WriteLiteral(@"                    receiverName: $(""#receiverName"").val(),
                    receiverEmail: $(""#receiverEmail"").val(),
                    watcherEmail: $(""#watcherEmail"").val(),
                    courierNo: $(""#courierNo"").val(),
                    gpRemarks: $(""#gpRemarks"").val(),
                    vehicleNo: $(""#vehicleNo"").val(),
                    ModifiedBy: sessionStorage.UserId,
                    ModifiedMachine: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                    CreatedBy: sessionStorage.UserId,
                    CreatedMachine: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                }
                //console.log(tableRowData);
                tableData.push(tableRowData);
            });

            if (tableData != null && tableData.length > 0) {
                    var gridData = [];
                    $.ajax({
                        url: '");
            EndContext();
            BeginContext(54819, 14, false);
#line 1004 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                         Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(54833, 4084, true);
            WriteLiteral(@"/BusinessLogics/UpdateDispatch',
                        type: 'POST',
                        dataType: 'json',
                        async: false,
                        data: JSON.stringify(tableData),
                        contentType: 'application/json; charset=utf-8',
                        beforeSend: function () {
                            $(""#ajaxBusy"").show();
                        },
                        complete: function () {
                            $(""#ajaxBusy"").hide();
                        },
                        success: function (response) {
                            //console.log(""Update Dispatch Success Response"", response);
                            if(response[0].saveSuccessful) {
                                createNewPass.close();
                                resetControlers();
                            } else {
                                msgBox.show('සුරැකීම අසාර්ථක විය. විය හැකි අවස්ථා: මිලදී ගැනීමේ ඇණවුම් ප්‍රමාණය 500 ට වඩා අඩ");
            WriteLiteral(@"ු වන අතර ඇණවුම අසම්පූර්ණයි.', 'Save failed. Possible scenarios : Purchase Order quantitiy is less than 500 and order is incomplete.', 'Warning', 'BU05', 'Warning', null);
                            }
                            EnableInputs();
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                             EnableInputs();
                        }
                    });
                }
                else {
                    msgBox.show('කරුණාකර තෝරාගත් අයිතම පරීක්ෂා කර නැවත උත්සාහ කරන්න', 'Error occcured. Item table data is null. ', 'Warning', 'BU05', 'Warning', null);
                    EnableInputs();
                }
        } else {
            msgBox.show('කරුණාකර යෙදවුම් පරීක්ෂා කර නැවත උත්සාහ කරන්න', 'please check the inputs and try again', 'Warning', 'BU05', 'Warning', null);
            EnableInputs();
        }
    }

    fun");
            WriteLiteral(@"ction cancelRequest() {
        resetControlers();
        createNewPass.close();
    }

    function resetControlers() {
        var grid1 = $(""#request-items-grid"").data(""kendoGrid"");
        if(grid1 != undefined) {
            grid1.dataSource.data([]);}
        var grid2 = $(""#add-items-grid-data"").data(""kendoGrid"");
        if(grid2 != undefined) {
            grid2.dataSource.data([]);}

        $(""#newRequestTypeFilter"").data(""kendoDropDownList"").select(0);
        $(""#departmentTo"").data(""kendoDropDownList"").select(-1);
        $(""#newLocationToFilter"").data(""kendoDropDownList"").select(0);
        $(""#approvers_taglist"").data(""kendoDropDownList"").select(0);
        $(""#receiverName"").val('');
        $(""#address"").val('');
        $(""#receiverEmail"").val('');
        $(""#watcherEmail"").val('');
        $(""#courierNo"").val('');
        $(""#gpRemarks"").val('');
        $(""#vehicleNo"").val('');

        $('#open-request-item-window-button').attr(""disabled"", ""disabled"");
       ");
            WriteLiteral(@" $('#open-request-expand-window-button').attr(""disabled"", ""disabled"");
        checkedIds = {};
        EnableInputs();
    }

    //Add Item window Start
    function openAddItemWindow() {
        DisableInputs();
        $(""#r01"").show();
        $(""#r02"").hide();
        $(""#DateToFilter"").kendoDatePicker({format:""yyyy-MM-dd"",min:new Date(1900,0,1,0,0,0,0),max:new Date(2099,11,31,0,0,0,0)});
        $(""#DateFromFilter"").kendoDatePicker({format:""yyyy-MM-dd"",min:new Date(1900,0,1,0,0,0,0),max:new Date(2099,11,31,0,0,0,0)});
        $(""#DateToFilter"").data(""kendoDatePicker"").value(todayDate);

        $(""#newRequestTypeFilter"").val() == 100 ? $(""#ModeFilter"").data(""kendoDropDownList"").select(1) : ($(""#newRequestTypeFilter"").val() == 200 ? $(""#ModeFilter"").data(""kendoDropDownList"").select(2) : $(""#ModeFilter"").data(""kendoDropDownList"").select(1));

        //Item Grid
        //For Bag Barcode Detaills loading
        //DataSource definition
            var crudServiceBaseUrl = """);
            EndContext();
            BeginContext(58918, 14, false);
#line 1087 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(58932, 16186, true);
            WriteLiteral(@"/Lookup"",
            dataSource = new kendo.data.DataSource({
                batch: true,
                aggregate: [{ field: ""Quantity"", aggregate: ""sum"" }],
                schema: {
                    model: {
                        id: ""Key"",
                        fields: {
                            Key: { type: ""string"", editable: false },
                            WfdepinstId: { editable: false },
                            Bag_Barcode: { type: ""string"", editable: false },
                            WFIdBag: { type: ""string"", editable: false },
                            Factory: { type: ""string"", editable: false },
                            DEPIdBag: { type: ""string"", editable: false },
                            SeqBag: { type: ""string"", editable: false },
                            L1idBag: { type: ""string"", editable: false },
                            L2idBag: { type: ""string"", editable: false },
                            L3idBag: { type: ""string"", editable: fa");
            WriteLiteral(@"lse },
                            L4idBag: { type: ""string"", editable: false },
                            L5idBag: { type: ""string"", editable: false },
                            Mode: { type: ""string"", editable: false },
                            Bag_Close_DateTime: { type: ""date"", editable: false },
                            Style: { type: ""string"", editable: false },
                            Shedule: { type: ""string"", editable: false },
                            PO: { type: ""string"", editable: false },
                            Z_Feature: { type: ""string"", editable: false },
                            Color: { type: ""string"", editable: false },
                            Size: { type: ""string"", editable: false },
                            Quantity: { type: ""number"", editable: true },
                            BagStatus: { type: ""number"", editable: false },
                            OrderQuantity: { type: ""number"", editable: false },
                            ReportedQ");
            WriteLiteral(@"uantity: { type: ""number"", editable: false }
                        }
                    }
                }
            });

        //Grid definition
        var grid = $(""#add-items-grid-data"").kendoGrid({
            dataSource: dataSource,
            scrollable: true,
            resizable: true,
            filterable: {mode: ""menu""},

            //define dataBound event handler
            dataBound: onDataBound,
            columns: [
                //define template column with checkbox and attach click event handler
                { field: ""Key"", width:""50px"", hidden: true },
                { title: 'Select All',
                    headerTemplate: ""<input type='checkbox' id='header-chb' class='k-checkbox header-checkbox'><label class='k-checkbox-label' for='header-chb'></label>"",
                    template: function (dataItem) {
                        return ""<input type='checkbox' id='"" + dataItem.Key + ""-"" + dataItem.WfdepinstId + ""' class='k-checkbox row-checkbox'>");
            WriteLiteral(@"<label class='k-checkbox-label' for='"" + dataItem.Key + ""-"" + dataItem.WfdepinstId + ""'></label>"";
                    },
                    width: 15}, 
                { field: ""WfdepinstId"", hidden: true },
                { field: ""Bag_Barcode"", title: ""Barcode"", width: ""90px"", editable: false },
                { field: ""WFIdBag"", title: ""WFIdBag"", width: ""50px"" ,hidden: true , editable: false },
                { field: ""Factory"", title: ""Factory"", width: ""40px"" , editable: false },
                { field: ""DEPIdBag"", title: ""DEPIdBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""SeqBag"", title: ""SeqBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L1idBag"", title: ""L1idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L2idBag"", title: ""L2idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L3idBag"", title: ""L3idBag"", width: ""50px"", hidden: true, editable: false },
       ");
            WriteLiteral(@"         { field: ""L4idBag"", title: ""L4idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""L5idBag"", title: ""L5idBag"", width: ""50px"", hidden: true, editable: false },
                { field: ""Mode"", title: ""Mode"", width: ""45px"", editable: false, filterable: false, template: ""#if (Mode == '1' ) {# <div>Bag"" + 
                        ""</div> #} else if (Mode == '2'){ # <div>Travel Tag"" +
                        ""</div> #} else if (Mode == '3'){ # <div>Buddy Tag"" +
                        ""</div> #}#"" },
                { field: ""Bag_Close_DateTime"", title: ""Bag Closed Date and Time"", width: ""75px"", filterable: false, editable: false },
                { field: ""Style"", title: ""Style"", width: ""43px"", editable: false },
                { field: ""Shedule"", title: ""Shedule"", width: ""42px"", editable: false },
                { field: ""PO"", title: ""PO"", width: ""55px"", editable: false },
                { field: ""Z_Feature"", title: ""Z-Feature"", width: ""45px"", editable: false }");
            WriteLiteral(@",
                { field: ""Color"", title: ""Color"", width: ""45px"", editable: false, footerTemplate: ""Total"" },
                { field: ""Size"", title: ""Size"", width: ""30px"" },
                { field: ""Quantity"", title: ""Quantity"", width: ""42px"", editable: false, filterable: true, aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#"" },
                { field: ""BagStatus"", title: ""Status"", width: ""43px"", editable: false , filterable: false, template: ""#if (BagStatus == '1' ) {# <div>prepared"" + 
                        ""</div> #} else if (BagStatus == '0'){ # <div>unprepared"" +
                        ""</div> #}#"" },
                { field: ""OrderQuantity"", title: ""Qty"", width: ""40px"", hidden: true, editable: false },
                { field: ""ReportedQuantity"", title: ""Qty"", width: ""40px"", hidden: true, editable: false }
            ],
            editable: ""inline""
        }).data(""kendoGrid"");

        //getAddItemData(null,null); //Fill Data to the table
        $(""#");
            WriteLiteral(@"sizewiseFilter"").kendoDropDownList({dataSource:[{""Text"":""Without Size"",""Value"":""1""},
                                                    {""Text"":""With Size"",""Value"":""2""}],
                                                    ""dataTextField"":""Text"",""dataValueField"":""Value""});

        //bind click event to the checkbox
        grid.table.on(""click"", "".row-checkbox"", selectRow);

        $('#header-chb').change(function (ev) {
            $(""#ajaxBusy"").show();
            var checked = ev.target.checked;
            $('.row-checkbox').each(function (idx, item) {
                if (checked) {
                    if (!($(item).closest('tr').is('.k-state-selected'))) {
                        $(item).click();
                    }
                } else {
                    if ($(item).closest('tr').is('.k-state-selected')) {
                        $(item).click();
                    }
                }
            });
            
            $(""#ajaxBusy"").hide();
        });

      ");
            WriteLiteral(@"  //Add selected items to request-items-grid
        $(""#item-add-button"").bind(""click"", function () {
            $(""#add-items-grid-data"").data(""kendoGrid"").dataSource.filter({});
            $(""#request-items-grid"").data('kendoGrid').dataSource.data([]);
            $(""#error-items-grid"").data('kendoGrid').dataSource.data([]);
            var allGridData = $(""#add-items-grid-data"").data(""kendoGrid"").dataSource.data();
            var grid = $(""#add-items-grid-data"").data(""kendoGrid"");
            var checkedItems = [];
            var errorReportItems = [];
            var faccode = """";
            $.each(grid.items(), function (index, item) {
                console.log(item);
                if (($(item).hasClass(""k-state-selected""))) {
                    if(faccode == """"){
                        if(allGridData[index].BagStatus == 0) {
                            errorReportItems.push(allGridData[index]);
                        } else {
                            checkedItems.push(al");
            WriteLiteral(@"lGridData[index]);
                        }
                        faccode = allGridData[index].WFIdBag;
                    } else {
                        if(allGridData[index].WFIdBag == faccode) {
                            if(allGridData[index].BagStatus == 0) {
                                errorReportItems.push(allGridData[index]);
                            } else {
                                checkedItems.push(allGridData[index]);
                            }
                            faccode = allGridData[index].WFIdBag;
                        } else {
                            msgBox.show('ඔබ යැවීමට කර්මාන්තශාලා දෙකකින් අයිතම තෝරාගෙන ඇත. කරුණාකර පරීක්ෂා කර නැවත උත්සාහ කරන්න.', 'You have selected items from two factories to dispatch. Please check and try again.', 'Warning', 'BU05', 'Warning', null);
                        }
                    }
                }
            });

            if(errorReportItems.length != 0) {
                $(""#error-items-grid""");
            WriteLiteral(@").data('kendoGrid').dataSource.data(errorReportItems);
                openErrorTable();
            }

            $(""#request-items-grid"").data('kendoGrid').dataSource.data(checkedItems);
            addItemsGrid.close();
        });

        $(""#cancel-button"").bind(""click"", function () {
            $(""#request-items-grid"").data('kendoGrid').dataSource.data([]);
            checkedIds = {};
            addItemsGrid.close();
            $(""#header-chb"")[0].checked = false;
        });
        //End of Item Grid

        addItemsGrid = $(""#add-items-grid"").kendoWindow({
            width: ""95%"",
            title: ""Add Items"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: true,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        var arrows = [38, 40];
        addItemsGrid.open().center();
        EnableInputs();
    }

    //Open Expand Table Window
    function openErro");
            WriteLiteral(@"rTable() {
        errorTableWindow = $(""#errorWindow"").kendoWindow({
            width: ""90%"",
            height: ""80%"",
            title: ""Error Report"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: true,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        var arrows = [38, 40];
        errorTableWindow.open().center();
        EnableInputs();
    }

    //Open Expand Table Window
    function openExandTable() {
        
        var additemtabledatat = $(""#request-items-grid"").data('kendoGrid').dataSource.data();

        if(additemtabledatat != null) {
            var gridData = [];
            $.each(additemtabledatat, function (index, elements) {
                        var object = {
                            Key: elements.Style + "" | "" + elements.Shedule + "" | "" + elements.Color,
                            WfdepinstId: elements.WfdepinstId,
                       ");
            WriteLiteral(@"     Bag_Barcode: elements.Bag_Barcode,
                            WFIdBag: elements.WFIdBag,
                            DEPIdBag: elements.DEPIdBag,
                            SeqBag: elements.SeqBag,
                            L1idBag: elements.L1idBag,
                            L2idBag: elements.L2idBag,
                            L3idBag: elements.L3idBag,
                            L4idBag: elements.L4idBag,
                            L5idBag: elements.L5idBag,
                            Mode: elements.Mode,
                            Bag_Close_DateTime: formatDate(elements.Bag_Close_DateTime),
                            Style: elements.Style,
                            Shedule: elements.Shedule,
                            PO: """",
                            Z_Feature: elements.Z_Feature,
                            Color: elements.Color,
                            Size: elements.Size,
                            Quantity: elements.Quantity,
                            Re");
            WriteLiteral(@"marks: elements.Remarks,
                            BagStatus: elements.BagStatus,
                        }
                        gridData.push(object);
                        //EnableInputs();
                    });
                console.log(gridData);
                $(""#expand-items-grid"").data('kendoGrid').dataSource.data(gridData);
        }


        expandedTableWindow = $(""#expandedWindow"").kendoWindow({
            width: ""90%"",
            height: ""80%"",
            title: ""Expand"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: true,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        var arrows = [38, 40];
        expandedTableWindow.open().center();
        EnableInputs();
    }

    //on click of the checkbox:
    function selectRow() {
        DisableInputs();
        var checked = this.checked,
        row = $(this).closest(""tr""),
        grid = $(""#");
            WriteLiteral(@"add-items-grid-data"").data(""kendoGrid""),
        dataItem = grid.dataItem(row);
        
        checkedIds[dataItem.id] = checked;
        
        if (checked) {
            //-select the row
            row.addClass(""k-state-selected"");

            var checkHeader = true;

            $.each(grid.items(), function (index, item) {
                if (!($(item).hasClass(""k-state-selected""))) {
                    checkHeader = false;
                }
            });

            $(""#header-chb"")[0].checked = checkHeader;
        } else {
            //-remove selection
            row.removeClass(""k-state-selected"");
            $(""#header-chb"")[0].checked = false;
        }
        EnableInputs();
    }

    //on dataBound event restore previous selected rows:
    function onDataBound(e) {
        var dataItems = this.dataSource.view();
        for (var i = 0; i < dataItems.length; i++) {
            
            if (dataItems[i].get(""BagStatus"") == 0) {
                e.s");
            WriteLiteral(@"ender.tbody.find(""[data-uid='"" + dataItems[i].uid + ""']"").addClass(""unpre"");
            } else {
                e.sender.tbody.find(""[data-uid='"" + dataItems[i].uid + ""']"").addClass(""pre"");
            }

            if (checkedIds[dataItems[i].id]) {
                this.tbody.find(""tr[data-uid='"" + dataItems[i].uid + ""']"")
                    .addClass(""k-state-selected"")
                    .find("".k-checkbox"")
                    .attr(""checked"", ""checked"");
            }
        }
    }

    function searchForBagData() {
        var fromdate = $(""#DateFromFilter"").val();
        var todate = $(""#DateToFilter"").val();
        var opcode = $(""#departmentOperationFilter"").data(""kendoDropDownList"").value();

        if(opcode == 0) {
            msgBox.show('ඉදිරියට යාමට පෙර කරුණාකර දෙපාර්තමේන්තු මෙහෙයුමක් තෝරන්න.', 'please select a department operation before proceed.', 'Warning', 'BU05', 'Warning', null);
        }
        else {
            getAddItemData(fromdate != """" ? fromdate");
            WriteLiteral(@" + ""%2000:00:00"" : null, todate != """" ? todate + ""%2023:59:59"" : null, opcode);
        }
    }

    function getAddItemData(fromdate, todate, opcode) {
        DisableInputs();
        //console.log(JSON.parse(sessionStorage.getItem(""Clientconfig"")).wfId);
        $(""#add-items-grid-data"").data('kendoGrid').dataSource.data([]);

        if(fromdate == null) {
            fromdate = ""2000-01-01%2000:00:00"";   
        }
        if(todate == null) {
            todate = ""4444-01-01%2000:00:00"";
        }
        
        var mode = $(""#ModeFilter"").val();
        if(mode == """") {
            mode = 1;
        }
        var smode = $(""#sizewiseFilter"").val();
        if(smode == """") {
            smode = 1
        }
        
        var gridData = [];
        $.ajax({
                url: '");
            EndContext();
            BeginContext(75119, 14, false);
#line 1431 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(75133, 7384, true);
            WriteLiteral(@"/Lookup/GetBarcodeDetails?Wfid=' + JSON.parse(sessionStorage.getItem(""Clientconfig"")).wfId + '&fromDate=' + fromdate + '&toDate=' + todate + '&type=' + $(""#newRequestTypeFilter"").data(""kendoDropDownList"").value() + '&mode=' + mode + '&opcode=' + opcode + '&smode=' + smode,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                },
                success: function (response) {
                    if(response.length != 0) {
                        //console.log(response);
                        $.each(response, function (index, elements) {
                            var object = {
                                Key: elements.key,
                                WfdepinstId: elements.wfdepinstId,
                                Bag_Barcode: element");
            WriteLiteral(@"s.bagBarCodeNo,
                                WFIdBag: elements.wfIdBag,
                                Factory: elements.factory,
                                DEPIdBag: elements.depIdBag,
                                SeqBag: elements.seqBag,
                                L1idBag: elements.l1idBag,
                                L2idBag: elements.l2idBag,
                                L3idBag: elements.l3idBag,
                                L4idBag: elements.l4idBag,
                                L5idBag: elements.l5idBag,
                                Mode: elements.txnMode,
                                Bag_Close_DateTime: formatDate(elements.createdDateTime),
                                Style: elements.style,
                                Shedule: elements.shedule,
                                PO: elements.po,
                                Z_Feature: elements.z_Feature,
                                Color: elements.color,
                                S");
            WriteLiteral(@"ize: ((elements.size == """" || elements.size == null) ? ""N/A"" : elements.size),
                                Quantity: elements.qty01,
                                Remarks: '',
                                BagStatus: elements.bagStatus,
                                OrderQuantity: elements.orderQty,
                                ReportedQuantity: elements.operationQty
                            }
                            gridData.push(object);
                            EnableInputs();
                        });
                        //console.log(gridData);
                        $(""#add-items-grid-data"").data('kendoGrid').dataSource.data(gridData);
                        
                        /*var grid = $(""#add-items-grid-data"").data(""kendoGrid"");
                        if(smode == 2) {
                            grid.showColumn(""Size"");
                        } else {
                            grid.hideColumn(""Size"");
                        }*/
          ");
            WriteLiteral(@"          } else {
                        msgBox.show('දත්ත නැත', 'no data', 'Warning', 'BU05', 'Warning', null);
                        EnableInputs(); 
                    }
                    $(""#ajaxBusy"").hide();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                    $(""#ajaxBusy"").hide();
                    EnableInputs();
                }
        });
    }
    //End of Add Item

    //Update Status 
    function openUpdateStatusWindow() {
        DisableInputs();
        if(rowDataItem != null) {
            updateStatus = null;
            //console.log(rowDataItem);
            $(""#RequestId"").html(rowDataItem.ControlId);
            $(""#Seq"").html(rowDataItem.Seq);
            $(""#DepartmentId"").html(rowDataItem.DEPId);
            $(""#ReturnS"").html(rowDataItem.Return == 1 ? 'Return' : 'Depart');
            $(""#Department"").html(rowDataItem.Depart");
            WriteLiteral(@"mentName == 1 ? 'Washing out (Factory)' : rowDataItem.DepartmentName == 2 ? 'Washing in (BFL)' : rowDataItem.DepartmentName == 3 ? 'Washing out (BFL)' : '""Washing receive (Factory)');
            
            //Item Grid
            //For Bag Barcode Detaills loading
            $(""#request-status-grid"").kendoGrid({
                dataSource: {
                    schema: {
                        model: {
                            fields: {
                                Stage: { type: ""string"", editable: false },
                                Status: { type: ""string"", editable: false },
                                Comments: { type: ""string"", editable: false },
                                Completed_By: { type: ""string"", editable: false },
                                Completed_On: { type: ""date"", editable: false },
                                Action: { type: ""string"", editable: false },
                            },
                        }
                    },
    ");
            WriteLiteral(@"                batch: true,
                },
                scrollable: true,        
                sortable: false,
                filterable: false,
                columns:[
                            {title:""Stage"",field:""Stage"",width:""145px""},
                            {title:""Status"",field:""Status"",width:""105px"",encoded:true},
                            {title:""Comments"",field:""Comments"",width:""105px"",encoded:true, hidden:true},
                            {title:""Completed_By"",field:""Completed_By"",width:""105px""},
                            {title:""Completed_On"",field:""Completed_On"",width:""105px"",encoded:true, format:""{0:dd-MM-yyyy hh:mm:ss}"",filterable:{operators:{date:{gte:""From"",lte:""To""}}}},
                            {title:""Action"",field:""Action"",width:""140px"",encoded:true, template: ""#if (Action == '1' ) {# <div><button id='filterGatePassRequestButton' class='k-button' style='width: 180px;'' onclick='UpdateRequestStatus()'><span class='k-icon k-i-check-outline' style='marg");
            WriteLiteral(@"in-right: 7px; text-align:left;'></span><span>Update</span></button>"" + 
                            ""</div> #} else if (Action == '2'){ # <div>Completed"" +
                            ""</div> #} else if (Action == '3'){ # <div>Pending"" +
                            ""</div> #} else if (Action == '4'){ # <div>In-Progress"" +
                            ""</div> #}#"" },
                        ],
            });
            //DataSource definition
            
            //End of Item Grid

            updateStatus = $(""#updateStatus"").kendoWindow({
                width: ""75%"",
                title: ""Update Status"",
                visible: false,
                actions: [""Close""],
                modal: true,
                resizable: true,
                draggable: true,
                pinned: true,
            }).data(""kendoWindow"");

            getRequestData();
            var arrows = [38, 40];
            updateStatus.open().center();
        }
        EnableInputs();
   ");
            WriteLiteral(" }\r\n\r\n    function getRequestData() {\r\n        DisableInputs();\r\n        $(\"#request-status-grid\").data(\'kendoGrid\').dataSource.data([]);\r\n       \r\n        var gridData = [];\r\n        $.ajax({\r\n                url: \'");
            EndContext();
            BeginContext(82518, 14, false);
#line 1573 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(82532, 5872, true);
            WriteLiteral(@"/Lookup/GetRequestyDetails?controlid=' + rowDataItem.ControlId + '&seq=' + rowDataItem.Seq + '&depid=' + rowDataItem.DEPId,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {
                    //console.log(response);
                    //Action 
                    //1 = on event
                    //2 = Completed
                    //3 = pending
                    //4 = in-progress
                    if(response != null) {
                        $(""#currentStatus"").html(response.txnStatus + 1);
                        $(""#approverid"").html(response.approver);
                        var object = {
                                Stage: ""S");
            WriteLiteral(@"tart of a request"",
                                Status: response.txnStatus >= 1 ? ""Approved"" : response.txnStatus < 1 ? ""Pending"" : """",
                                Comments: """",
                                Completed_By: response.createdBy,
                                Completed_On: formatDate(response.createdDateTime),
                                Action: response.txnStatus >= 1 ? 2 : 3,
                            }
                            gridData.push(object);

                            object = {
                                Stage: ""First Level Approval"",
                                Status: response.txnStatus >= 2 ? ""Approved"" : response.txnStatus < 2 ? ""Pending"" : """",
                                Comments: """",
                                Completed_By: response.approvalStatus == 0 ? """" : response.approver,
                                Completed_On: formatDate(response.approvedDateTime),
                                Action: response.txnStatus >= 2 ");
            WriteLiteral(@"? 2 : response.txnStatus == 1 ? 1 : 3,
                            }
                            gridData.push(object);

                            object = {
                                Stage: ""Sending Factory Security"",
                                Status: response.txnStatus >= 3 ? ""Approved"" : response.txnStatus < 3 ? ""Pending"" : """",
                                Comments: """",
                                Completed_By: response.securityPassedBy,
                                Completed_On: formatDate(response.securityPassedDateTime),
                                Action: response.txnStatus >= 3 ? 2 : response.txnStatus == 2 ? 1 : 3,
                            }
                            gridData.push(object);

                            object = {
                                Stage: ""Receiving Factory Security"",
                                Status: response.txnStatus >= 4 ? ""Approved"" : response.txnStatus < 4 ? ""Pending"" : """",
                                Comme");
            WriteLiteral(@"nts: """",
                                Completed_By: response.securityReceivedBy,
                                Completed_On: formatDate(response.securityReceivedDateTime),
                                Action: response.txnStatus >= 4 ? 2 : response.txnStatus == 3 ? 1 : 3,
                            }
                            gridData.push(object);

                            object = {
                                Stage: ""Closed"",
                                Status: response.txnStatus >= 5 ? ""Approved"" : response.txnStatus < 5 ? ""Pending"" : """",
                                Comments: """",
                                Completed_By: response.closedBy,
                                Completed_On: formatDate(response.closedDateTime),
                                Action: response.txnStatus >= 5 ? 2 : response.txnStatus == 4 ? 4 : 3,
                            }
                            gridData.push(object);

                        //console.log(gridData);
        ");
            WriteLiteral(@"                $(""#request-status-grid"").data('kendoGrid').dataSource.data(gridData);
                        EnableInputs();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                    EnableInputs();
                }
        });
    }

    function UpdateRequestStatus() {
        DisableInputs();
        var isvalid = true;
        //console.log($(""#currentStatus"").html(),JSON.parse(sessionStorage.getItem(""TxUser"")).userId,$(""#approverid"").html());

        if ($(""#currentStatus"").html() == 2 && JSON.parse(sessionStorage.getItem(""TxUser"")).userId != $(""#approverid"").html()) {
            isvalid = false;
            EnableInputs();
            msgBox.show('ඔබට අනුමත කිරීමට අවසර නැත.', 'you dont have permission to approve.', 'අවවාදයයි / Warning', 'BS01', 'Warning');
        }

        if(isvalid) {
            //if($(""#currentStatus"").html() == """);
            WriteLiteral(@"5"") {
                //openBagItemDataWindow();
            //} else {
                    var tableData = [];
                    var tableRowData = {
                            ControlId: $(""#RequestId"").html(),
                            Seq: $(""#Seq"").html(),
                            DEPId: $(""#DepartmentId"").html(),
                            Status: $(""#currentStatus"").html(),
                            EnteredBy : sessionStorage.UserId,
                            Return: ($(""#ReturnS"").html() == 'Return' ? 1 : 0),
                        }

                        tableData.push(tableRowData);
                        //console.log(tableData);

                        $.ajax({
                            url: '");
            EndContext();
            BeginContext(88405, 14, false);
#line 1685 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(88419, 1854, true);
            WriteLiteral(@"/BusinessLogics/UpdateDispatchStatus',
                            type: 'POST',
                            dataType: 'json',
                            async: false,
                            data: JSON.stringify(tableData),
                            contentType: 'application/json; charset=utf-8',
                            beforeSend: function () {
                                $(""#ajaxBusy"").show();
                            },
                            complete: function () {
                                $(""#ajaxBusy"").hide();
                            },
                            success: function (response) {
                                //console.log(response);
                                RefreshRequestGrid();
                                updateStatus.close();
                                EnableInputs();
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                formatE");
            WriteLiteral(@"rrorMessage(jqXHR, errorThrown, ""Dispatch"");
                                EnableInputs();
                            }
                        });
            //}
        }
    }
    //End of Update Status

    //UpdateStatusAPI
    function updateStatus() {
        DisableInputs();
        var tableRowData = {
                            ControlId: $(""#RequestId"").html(),
                            Seq: $(""#Seq"").html(),
                            DEPId: $(""#DepartmentId"").html(),
                            Status: $(""#currentStatus"").html(),
                            EnteredBy : JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                        }

                        tableData.push(tableRowData);

                        $.ajax({
                            url: '");
            EndContext();
            BeginContext(90274, 14, false);
#line 1727 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(90288, 7865, true);
            WriteLiteral(@"/BusinessLogics/UpdateDispatchStatus',
                            type: 'POST',
                            dataType: 'json',
                            async: false,
                            data: JSON.stringify(tableData),
                            contentType: 'application/json; charset=utf-8',
                            beforeSend: function () {
                                $(""#ajaxBusy"").show();
                            },
                            complete: function () {
                                $(""#ajaxBusy"").hide();
                            },
                            success: function (response) {
                                //console.log(response);
                                RefreshRequestGrid();
                                updateStatus.close();
                                EnableInputs();
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                formatE");
            WriteLiteral(@"rrorMessage(jqXHR, errorThrown, ""Dispatch"");
                                EnableInputs();
                            }
                        });
    }

    //Start info Window//
    function openInfoWindow() {
        DisableInputs();
        //console.log(rowDataItem);
        //showInfo = null;

        if($(""#read-only-request-items-grid"").html() == '') {
            $(""#read-only-request-items-grid"").kendoGrid({
                dataSource: {
                    schema: {
                        model: {
                            id: ""BagBarcode"",
                            fields: {
                                ColorCode: { type: ""number"", editable: false },
                                Key: { type: ""string"", editable: false },
                                Seq: { type: ""number"", editable: false },
                                TxnMode: { type: ""number"", editable: false },
                                L1id: { type: ""number"", editable: false },
                ");
            WriteLiteral(@"                Style: { type: ""string"", editable: false },
                                L2id: { type: ""number"", editable: false },
                                Shedule: { type: ""string"", editable: false },
                                PO: { type: ""string"", editable: false },
                                ZFeature: { type: ""string"", editable: false },
                                L4id: { type: ""number"", editable: false },
                                Color: { type: ""string"", editable: false },
                                BagBarcode: { type: ""string"", editable: false },
                                Quantity: { type: ""number"", editable: false },
                                Action: { type: ""number"", editable: false },
                                Location: { type: ""string"", editable: false },
                            },
                        }
                    },
                    batch: true,
                    group: {
                        field: ""Ke");
            WriteLiteral(@"y"", aggregates: [
                            { field: ""Style"", aggregate: ""count"" },
                            { field: ""Quantity"", aggregate: ""sum""},
                            { field: ""Key"", aggregate: ""count"" }
                        ]
                    },
                    aggregate: [ { field: ""Style"", aggregate: ""count"" },
                                    { field: ""Quantity"", aggregate: ""sum"" },
                                    { field: ""Key"", aggregate: ""min"" },
                                    { field: ""Key"", aggregate: ""max"" }]
                },
                scrollable: false,      
                sortable: false,
                filterable: false,
                columns:[
                            {field:""Key"",width:""125px"", hidden: true , aggregates: [""count""], groupHeaderTemplate: ""#= value # (Count: #= count#)"" },
                            {title:""Seq"",field:""Seq"",width:""145px"",hidden:true},
                            {title:""TxnMode"",field:""TxnMode""");
            WriteLiteral(@",width:""145px"",hidden:true},
                            {field:""ColorCode"",width:""125px"", hidden: true},
                            {title:""Style"",field:""Style"",width:""125px"", aggregates: [""count""]},
                            {title:""Shedule"",field:""Shedule"",width:""125px""},
                            {title:""PO"",field:""PO"",width:""125px""},
                            {title:""Z-Feature"",field:""ZFeature"",width:""145px""},
                            {title:""Color Name"",field:""Color"",width:""205px""},
                            {title:""Barcode"",field:""BagBarcode"",width:""145px"", footerTemplate: ""Total"", groupFooterTemplate: ""Sub Total""},
                            {title:""Quantity"",field:""Quantity"",width:""105px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                            {title:""GRN Status"",field:""Action"",width:""200px"",encoded:true, template: ""#if (Action == '0' ) {# <div class='mb-2 mr-2 badge badge-primary grn-status-badge'>Confirmation Pending"" + 
   ");
            WriteLiteral(@"                         ""</div> #} else if (Action == '1'){ # <div class='mb-2 mr-2 badge badge-secondary grn-status-badge'>Confirmed"" +
                            ""</div> #}#"" },
                            {title:""Location"",field:""Location"",width:""100px""},
                        ],
            });
        }
        if($(""#request-status"").html() == '') {
            $(""#request-status"").kendoGrid({
                dataSource: {
                    schema: {
                        model: {
                            fields: {
                                Stage: { type: ""string"", editable: false },
                                Status: { type: ""string"", editable: false },
                                Comments: { type: ""string"", editable: false },
                                Completed_By: { type: ""string"", editable: false },
                                Completed_On: { type: ""date"", editable: false },
                            },
                        }
              ");
            WriteLiteral(@"      },
                    batch: true,
                },
                scrollable: true,        
                sortable: false,
                filterable: false,
                columns:[
                            {title:""Stage"",field:""Stage"",width:""145px""},
                            {title:""Status"",field:""Status"",width:""105px"",encoded:true},
                            {title:""Comments"",field:""Comments"",width:""105px"",encoded:true, hidden:true},
                            {title:""Completed_By"",field:""Completed_By"",width:""105px""},
                            {title:""Completed_On"",field:""Completed_On"",width:""105px"",encoded:true, format:""{0:dd-MM-yyyy hh:mm:ss}"",filterable:{operators:{date:{gte:""From"",lte:""To""}}}},
                        ],
            });
        }

        $(""#RequestId"").html(rowDataItem.ControlId);

        SearchGatepass(rowDataItem.ControlId);
        //End of Status Grid

        showInfo = $(""#infowindow"").kendoWindow({
            width: ""80%"",
    ");
            WriteLiteral(@"        height: ""75%"",
            title: ""Gatepass Details"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: true,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        //getInfotData();
        var arrows = [48, 40];
        showInfo.open().center();
        EnableInputs();
    }
    //End Info Window//

    //Start GRN Bagbarcode window
    function openBagItemDataWindow() {
        DisableInputs();
        //console.log(rowDataItem);
        checkAllBagsWindow = null;

        //$(""#RequestId"").html(rowDataItem.ControlId);

        $.ajax({
            url: '");
            EndContext();
            BeginContext(98154, 14, false);
#line 1881 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(98168, 5391, true);
            WriteLiteral(@"/Lookup/GetLocaionsByUserFactory?faccode=BFL',
            type: 'GET',
            dataType: 'json',
            //async: false,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (response) {
                $(""#unloading-location"").kendoDropDownList({""dataSource"": response,filter: ""contains"",""dataTextField"": ""warLocName"",""dataValueField"": ""warLocCode"",""optionLabel"": ""Select a Warehouse Location...""});
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
            }
        });

        $(""#bag-items-grid"").kendoGrid({
            dataSource: {
                schema: {
                    model: {
                        id: ""BagBarcode"",
                        fields: {
              ");
            WriteLiteral(@"              Seq: { type: ""number"", editable: false },
                            BagBarcode: { type: ""string"", editable: false },
                            TxnMode: { type: ""number"", editable: false },
                            L1id: { type: ""number"", editable: false },
                            Style: { type: ""string"", editable: false },
                            L2id: { type: ""number"", editable: false },
                            Shedule: { type: ""string"", editable: false },
                            PO: { type: ""string"", editable: false },
                            ZFeature: { type: ""string"", editable: false },
                            L4id: { type: ""number"", editable: false },
                            Color: { type: ""string"", editable: false },
                            Quantity: { type: ""number"", editable: false },
                            Action: { type: ""string"", editable: false },
                        },
                    }
                },
          ");
            WriteLiteral(@"      batch: true,
            },
            scrollable: true,      
            sortable: false,
            filterable: false,
            columns:[
                        {command: { text: ""Confirm"", click: confirmSuccess }, title: "" "", width: ""97px"" },
                        {title:""Seq"",field:""Seq"",width:""145px"",hidden:true},
                        {title:""Bag Barcode"",field:""BagBarcode"",width:""145px""},
                        {title:""TxnMode"",field:""TxnMode"",width:""145px"",hidden:true},
                        {title:""L1id"",field:""L1id"",width:""145px"",hidden:true},
                        {title:""Style"",field:""Style"",width:""125px""},
                        {title:""L2id"",field:""L2id"",width:""145px"",hidden:true},
                        {title:""Shedule"",field:""Shedule"",width:""125px""},
                        {title:""PO"",field:""PO"",width:""125px""},
                        {title:""Z-Feature"",field:""ZFeature"",width:""145px""},
                        {title:""L4id"",field:""L4id"",width:""145px"",hid");
            WriteLiteral(@"den:true},
                        {title:""Color"",field:""Color"",width:""155px""},
                        {title:""Quantity"",field:""Quantity"",width:""105px"",encoded:true},
                        {title:""Action"",field:""Action"",width:""200px"",encoded:true, template: ""#if (Action == '0' ) {# <div class='mb-2 mr-2 badge badge-primary const-width-badge'>Confirmation Pending"" + 
                        ""</div> #} else if (Action == '1'){ # <div class='mb-2 mr-2 badge badge-secondary const-width-badge'>Confirmed"" +
                        ""</div> #}#"" },
                    ],
        });
        //DataSource definition 
        //End of Status Grid

        checkAllBagsWindow = $(""#checkforAllBags"").kendoWindow({
            width: ""80%"",
            title: ""Close Request"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: true,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        getInfotData();
");
            WriteLiteral(@"        var arrows = [38, 40];
        loadAllGroupBarcodeinRequest(""#bag-items-grid"");
        checkAllBagsWindow.open().center();
        EnableInputs();
    }

    function confirmSuccess(e) {
        var warloc = $(""#unloading-location"").val();
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest(""tr""));
        //console.log(dataItem);

        if(warloc != """" && warloc != null) {
                    var tableRowData = {
                                ControlId: $(""#RequestId"").html(),
                                Seq: dataItem.Seq,
                                BagBarCode: dataItem.BagBarcode,
                                TxnMode: dataItem.TxnMode,
                                StyleId: dataItem.L1id,
                                ScheduleId: dataItem.L2id,
                                ColorId: dataItem.L4id, 
                                BagStatus: dataItem.Action == 1 ? 0 : 1,
                                WarLocCode: da");
            WriteLiteral(@"taItem.Action == 1 ? """" : warloc,
                    }
                    //console.log(tableRowData);

                    if (tableRowData != null) {
                        var gridData = [];
                        $.ajax({
                            url: '");
            EndContext();
            BeginContext(103560, 14, false);
#line 1990 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(103574, 1512, true);
            WriteLiteral(@"/BusinessLogics/UpdateDispatchSuccessStatusofBags',
                            type: 'POST',
                            dataType: 'json',
                            async: false,
                            data: JSON.stringify(tableRowData),
                            contentType: 'application/json; charset=utf-8',
                            beforeSend: function () {
                                $(""#ajaxBusy"").show();
                            },
                            complete: function () {
                                $(""#ajaxBusy"").hide();
                            },
                            success: function (response) {
                                //console.log(response);
                                loadAllGroupBarcodeinRequest(""#bag-items-grid"");
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                   ");
            WriteLiteral(@"         }
                        });
                    }
        } else {
            msgBox.show('තහවුරු කිරීමට පෙර කරුණාකර බෑමේ ස්ථානයක් තෝරන්න.', 'please select a unloading location before confirm.', 'Warning', 'BU05', 'Warning', null);
        }
    }

    function getInfotData() {
        DisableInputs();
        //$(""#read-only-request-items-grid"").data('kendoGrid').dataSource.data([]);
       
        var gridData = [];
        $.ajax({
                url: '");
            EndContext();
            BeginContext(105087, 14, false);
#line 2022 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(105101, 2047, true);
            WriteLiteral(@"/Lookup/GetRequestyDetails?controlid=' + rowDataItem.ControlId + '&seq=' + rowDataItem.Seq + '&depid=' + rowDataItem.DEPId,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {
                    //console.log(response);
                    $(""#typeinfo"").html(response.controlType == 100 ? 'Factory Dispatch (100)' : (response.controlType == 200 ? 'BFL Dispatch (200)' : 'Factory Production Dispatch (300)'));
                    $(""#statusinfo"").html(response.txnStatus == 1 ? 'Pending Approval' : response.txnStatus == 2 ? 'Approved - Not Send' : response.txnStatus == 3 ? 'Security Passed' : response.txnStatus == 4 ? 'Security Recieved' : 'Closed');
         ");
            WriteLiteral(@"           $(""#location-from"").html(response.locCodeFrom);
                    $(""#location-to"").html(response.locCode);
                    $(""#addressinfo"").html('');
                    $(""#createdon"").html(response.txnDateTime);
                    $(""#receiver"").html(response.receiverName);
                    $(""#receiveremail"").html(response.receiverEmail);
                    $(""#watcheremail"").html(response.watcherEmail);
                    $(""#remarks"").html(response.remark);
                    EnableInputs();

                    //$(""#read-only-request-items-grid"").data('kendoGrid').dataSource.data(gridData);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                    EnableInputs();
                }
        });
    }

    function loadAllGroupBarcodeinRequest(g) {
        DisableInputs();
        var gridData = [];
        $.ajax({
                url: '");
            EndContext();
            BeginContext(107149, 14, false);
#line 2060 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(107163, 4639, true);
            WriteLiteral(@"/Lookup/GetGroupBarcodeDetails?controlId=' + rowDataItem.ControlId + '&seq=' + rowDataItem.Seq,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },  
                success: function (response) {
                    //console.log(response);
                    $.each(response, function (index, elements) {
                        var object = {
                            Seq: elements.seq,
                            BagBarcode: elements.bagBarCode,
                            TxnMode: elements.txnMode,
                            L1id: elements.styleId,
                            Style: elements.styleDesc,
                            L2id: elements.scheduleId,
                            Shedu");
            WriteLiteral(@"le: elements.scheduleDesc,
                            PO: elements.poNo,
                            ZFeature: elements.zfeature,
                            L4id: elements.colorId,
                            Color: elements.colorDesc,
                            Quantity: elements.qty01,
                            Action: elements.bagStatus,
                        }
                        gridData.push(object);
                    });
                    //console.log(gridData);
                    $(g).data('kendoGrid').dataSource.data(gridData);
                    dispatchitemdatafilter(""#bag-items-grid"");
                    EnableInputs();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                    EnableInputs();
                }
        });
    }

    function dispatchitemdatafilter(g){
        //Status BagBarcode Filter input field change
                ");
            WriteLiteral(@"    $('#scanBagBarodeSearch').on('input', function (e) {
                        var grid = $(g).data('kendoGrid');
                        var columns = grid.columns;

                        var filter = { logic: 'or', filters: [] };
                        columns.forEach(function (x) {
                        if (x.field) {
                            var type = grid.dataSource.options.schema.model.fields[x.field].type;
                            if (type == 'string') {
                            filter.filters.push({
                                field: x.field,
                                operator: 'contains',
                                value: e.target.value
                            })
                            }
                            else if (type == 'number') {
                            if (isNumeric(e.target.value)) {
                                filter.filters.push({
                                field: x.field,
                                operat");
            WriteLiteral(@"or: 'eq',
                                value: e.target.value
                                });
                            }    

                            } else if (type == 'date') {
                            var data = grid.dataSource.data();
                            for (var i=0;i<data.length ; i++){
                                var dateStr = kendo.format(x.format, data[i][x.field]);
                                // change to includes() or startsWith()
                                if(dateStr.includes(e.target.value)){
                                filter.filters.push({
                                    field: x.field,
                                    operator:'eq',
                                    value: data[i][x.field]
                                })
                                }
                            }
                            } else if (type == 'boolean' && getBoolean(e.target.value) !== null) {
                            var bool = get");
            WriteLiteral(@"Boolean(e.target.value);
                            filter.filters.push({
                                field: x.field,
                                operator: 'eq',
                                value: bool
                            });
                            }               
                        }
                        });
                        grid.dataSource.filter(filter);
                    }); 
    }

    function closeRequest() {
        DisableInputs();
       $.ajax({
                url: '");
            EndContext();
            BeginContext(111803, 14, false);
#line 2159 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(111817, 1185, true);
            WriteLiteral(@"/Lookup/CheckConfirmationsAreCompleted?controlid=' + rowDataItem.ControlId + '&seq=' + rowDataItem.Seq,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {
                    //console.log(response);
                    if(response){
                        var tableData = [];
                        var tableRowData = {
                            ControlId: $(""#RequestId"").html(),
                            Seq: $(""#Seq"").html(),
                            DEPId: $(""#DepartmentId"").html(),
                            Status: $(""#currentStatus"").html(),
                            EnteredBy : JSON.parse(sessionStorage.getItem(""Clientconfig"")).clie");
            WriteLiteral("ntId,\r\n                        }\r\n\r\n                        tableData.push(tableRowData);\r\n\r\n                        $.ajax({\r\n                            url: \'");
            EndContext();
            BeginContext(113003, 14, false);
#line 2185 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(113017, 2144, true);
            WriteLiteral(@"/BusinessLogics/UpdateDispatchStatus',
                            type: 'POST',
                            dataType: 'json',
                            async: false,
                            data: JSON.stringify(tableData),
                            contentType: 'application/json; charset=utf-8',
                            beforeSend: function () {
                                $(""#ajaxBusy"").show();
                            },
                            complete: function () {
                                $(""#ajaxBusy"").hide();
                            },
                            success: function (response) {
                                //console.log(response);
                                RefreshRequestGrid();
                                updateStatus.close();
                                checkAllBagsWindow.close();
                                EnableInputs();
                            },
                            error: function (jqXHR, textSt");
            WriteLiteral(@"atus, errorThrown) {
                                formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                                EnableInputs();
                            }
                        });
                    } else {
                        msgBox.show('ඉල්ලීම වැසීමට පෙර සියලු අයිතම තහවුරු කර ඇත්දැයි කරුණාකර පරීක්ෂා කරන්න.', 'please check wether the all items are confirmed before close the request.', 'Warning', 'BU05', 'Warning', null);
                        EnableInputs();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                    EnableInputs();
                }
        }); 
    }

    function cnacelBagItemwindow() {
        checkAllBagsWindow.close();
    }

    function SearchGatepass(gatePassNumber) {
        DisableInputs();
        //console.log(gatePassNumber);
        var timenow = event.timeStamp;
        var ");
            WriteLiteral("gridData = [];\r\n        if(gatePassNumber != \"\") {\r\n            $.ajax({\r\n                url: \'");
            EndContext();
            BeginContext(115162, 14, false);
#line 2232 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(115176, 2184, true);
            WriteLiteral(@"/Lookup/GetRequestHeaderDetails?controlid=' + gatePassNumber,
                type: 'GET',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    //console.log(result);
                    if(result != null && result != """") {
                        $(""#type-text"").html(result.controlType == 100 ? ""Factory Dispatch (100)"" : (result.controlType == 200 ? 'BFL Dispatch (200)' : 'Factory Production Dispatch (300)'));
                        $(""#status-text"").html(result.txnStatus == 1 ? ""Pending Approval"" : result.txnStatus == 2 ? ""Approved - Not Send"" : result.txnStatus == 3 ? ""Security Passed"" : result.txnStatus == 5 ? ""Closed"" : """");
                        $(""#locationfrom-text"").html(result.locFromCode);
                        $(""#locationto-text"").html(result.locName);
                        $(""#department-text"").html(result.depid == 1 ? ""Washing out (Factory)"" : result.depid == 2 ? ""Washing ");
            WriteLiteral(@"in (BFL)"" : result.depid == 3 ? ""Washing out (BFL)"" : result.depid == 4 ? ""Washing receive (Factory)"" : """");
                        $(""#address-text"").html(result.locAddress);
                        $(""#approval-text"").html(result.approver + (result.txnStatus < 2 ? "" (pending)"" : "" (approved)""));
                        $(""#createdon-text"").html(formatDate(result.createdDateTime));
                        $(""#requestby-text"").html(result.createdBy);
                        $(""#receiver-text"").html(result.receiverName);
                        $(""#receiveremail-text"").html(result.receiverEmail);
                        $(""#watcheremail-text"").html(result.watcherEmail);
                        $(""#referenceno-text"").html(result.errorCode);
                        $(""#veficle-text"").html(result.vehicleNo);
                        $(""#remarks-text"").html(result.remark);

                        //Request Item Grid Data
                        $(""#read-only-request-items-grid"").data('kendoGrid').dat");
            WriteLiteral("aSource.data([]);\r\n                        var gridData1 = [];\r\n                        $.ajax({\r\n                                url: \'");
            EndContext();
            BeginContext(117361, 14, false);
#line 2259 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(117375, 2964, true);
            WriteLiteral(@"/Lookup/GetGroupBarcodeDetails?controlId=' + gatePassNumber + '&seq=' + result.seq,
                                type: 'GET',
                                dataType: 'json',
                                //async: false,
                                contentType: 'application/json',
                                beforeSend: function () {
                                    $(""#ajaxBusy"").show();
                                },
                                complete: function () {
                                    $(""#ajaxBusy"").hide();
                                },  
                                success: function (response) {
                                    console.log(response);
                                    $.each(response, function (index, elements) {
                                        var object = {
                                            ColorCode: '',
                                            Key: elements.styleDesc + "" | "" + elements.schedul");
            WriteLiteral(@"eDesc + "" | "" + elements.colorDesc,
                                            Seq: elements.seq,
                                            TxnMode: elements.txnMode,
                                            L1id: elements.styleId,
                                            Style: elements.styleDesc,
                                            L2id: elements.scheduleId,
                                            Shedule: elements.scheduleDesc,
                                            PO: elements.poNo,
                                            ZFeature: elements.zfeature,
                                            L4id: elements.colorId,
                                            Color: elements.colorDesc,
                                            BagBarcode: elements.bagBarCode,
                                            Quantity: elements.qty01,
                                            Action: elements.bagStatus,
                                            Location: elemen");
            WriteLiteral(@"ts.location,
                                        }
                                        gridData1.push(object);
                                    });
                                    //console.log(gridData1);
                                    $(""#read-only-request-items-grid"").data('kendoGrid').dataSource.data(gridData1);
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                                    EnableInputs();
                                }
                        });

                        //Status Grid Data
                        //$(""#request-status"").data('kendoGrid').dataSource.data([]);
                        var gridData2 = [];
                        $.ajax({
                            url: '");
            EndContext();
            BeginContext(120340, 14, false);
#line 2306 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(120354, 11168, true);
            WriteLiteral(@"/Lookup/GetRequestyDetails?controlid=' + gatePassNumber + '&seq=' + result.seq + '&depid=' + result.depid,
                            type: 'GET',
                            dataType: 'json',
                            //async: false,
                            contentType: 'application/json',
                            beforeSend: function () {
                                $(""#ajaxBusy"").show();
                            },
                            complete: function () {
                                $(""#ajaxBusy"").hide();
                            },
                            success: function (response) {
                                //console.log(response);
                                $(""#currentStatus"").html(response.txnStatus + 1);
                                $(""#approverid"").html(response.approver);
                                var object = {
                                        Stage: ""Start of a request"",
                                        St");
            WriteLiteral(@"atus: response.txnStatus >= 1 ? ""Approved"" : response.txnStatus < 1 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.createdBy,
                                        Completed_On: formatDate(response.createdDateTime),
                                    }
                                    gridData2.push(object);

                                    object = {
                                        Stage: ""First Level Approval"",
                                        Status: response.txnStatus >= 2 ? ""Approved"" : response.txnStatus < 2 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.approvalStatus == 0 ? """" : response.approver,
                                        Completed_On: formatDate(response.approvedDateTime),
                                    }
                                    gridData2.push(object);

  ");
            WriteLiteral(@"                                  object = {
                                        Stage: ""Sending Factory Security"",
                                        Status: response.txnStatus >= 3 ? ""Approved"" : response.txnStatus < 3 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.securityPassedBy,
                                        Completed_On: formatDate(response.securityPassedDateTime),
                                    }
                                    gridData2.push(object);

                                    object = {
                                        Stage: ""Receiving Factory Security"",
                                        Status: response.txnStatus >= 4 ? ""Approved"" : response.txnStatus < 4 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.securityReceivedBy,
                                        ");
            WriteLiteral(@"Completed_On: formatDate(response.securityReceivedDateTime),
                                    }
                                    gridData2.push(object);

                                    object = {
                                        Stage: ""Closed"",
                                        Status: response.txnStatus >= 5 ? ""Approved"" : response.txnStatus < 5 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.closedBy,
                                        Completed_On: formatDate(response.closedDateTime),
                                    }
                                    gridData2.push(object);

                                //console.log(gridData2);
                                $(""#request-status"").data('kendoGrid').dataSource.data(gridData2);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                               ");
            WriteLiteral(@" formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                                EnableInputs();
                            }
                        });  
                    }
                    EnableInputs();
                },
                error: function () {
                    $(""#search-result-grid-gatepass"").html('No Results found !!!');
                    EnableInputs();
                    FocusRequestNoTextBox();
                }
            });

            //Request Status Grid
                                                                   
        } else {
            msgBox.show('කරුණාකර යැවීමේ සටහන් අංකයක් තෝරා නැවත උත්සාහ කරන්න.', 'please select a request id and try again.', 'අවවාදයයි / Warning', 'BS01', 'Warning');
            EnableInputs();
        }
    }

    function FocusRequestNoTextBox() {
        $(""#RequestIdFilter"").select();
    }

    //End GRN Bagbarcode window

    //Checkers
    function isNumeric(n) {
          return !isNaN(par");
            WriteLiteral(@"seFloat(n)) && isFinite(n);
    }

    function getBoolean(str) {
        if(""true"".startsWith(str)){
            return true;
        } else if(""false"".startsWith(str)){
            return false;
        } else {
            return null;
        }          
    }
    //End of Checkers

    //Print Controllers
    function openPrintWindow() {
        DisableInputs();
        //Print Page Contrrolers
        $(""#sizewiseFilterPrint"").kendoDropDownList({dataSource:[{""Text"":""Without Size"",""Value"":""1""},
                                                    {""Text"":""With Size"",""Value"":""2""}],
                                                    ""dataTextField"":""Text"",""dataValueField"":""Value"", change: function(e) {loadSize(this.value())}});

        if(rowDataItem != null) {
            printpdfwindow = null;
            
            $(""#paper"").kendoDropDownList({
                change: function () {
                $("".pdf-page"")
                    .removeClass(""size-a4"")
              ");
            WriteLiteral(@"      .removeClass(""size-letter"")
                    .removeClass(""size-executive"")
                    .addClass(this.value());
                }
            });

            if($(""#item-grid-print"").html() == '') {
                $(""#item-grid-print"").kendoGrid({
                    dataSource: {
                        schema: {
                            model: {
                                id: ""Key"",
                                fields: {
                                    ColorCode: { type: ""number"", editable: false },
                                    Key: { type: ""string"", editable: false },
                                    Style: { type: ""string"", editable: false },
                                    Shedule: { type: ""string"", editable: false },
                                    PO: { type: ""string"", editable: false },
                                    ZFeature: { type: ""string"", editable: false },
                                    Color: { type: ""string"", ed");
            WriteLiteral(@"itable: false },
                                    Size: { type: ""string"", editable: false },
                                    BagBarcode: { type: ""string"", editable: false },
                                    Quantity: { type: ""number"", editable: false },
                                    Remarks: { type: ""string"", editable: false },
                                    Location: { type: ""string"", editable: false },
                                },
                            }
                        },
                        batch: true,
                        group: {
                            field: ""Key"", aggregates: [
                                { field: ""Style"", aggregate: ""count"" },
                                { field: ""Quantity"", aggregate: ""sum""},
                                { field: ""Key"", aggregate: ""count"" }
                            ]
                        },
                        aggregate: [ { field: ""Style"", aggregate: ""count"" },
            ");
            WriteLiteral(@"                            { field: ""Quantity"", aggregate: ""sum"" },
                                        { field: ""Key"", aggregate: ""min"" },
                                        { field: ""Key"", aggregate: ""max"" }]
                    },
                    scrollable: false,      
                    sortable: false,
                    filterable: false,
                    columns:[
                                {field:""Key"",width:""0px"", hidden: true , aggregates: [""count""], groupHeaderTemplate: ""#= value # (Count: #= count#)"" },
                                {field:""ColorCode"",width:""0px"", hidden: true},
                                {title:""Style"",field:""Style"",width:""54px"", aggregates: [""count""]},
                                {title:""Shedule"",field:""Shedule"",width:""54px""},
                                {title:""PO"",field:""PO"",width:""54px""},
                                {title:""Z-Feature"",field:""ZFeature"",width:""50px""},
                                {title:""Color"",field");
            WriteLiteral(@":""Color"",width:""68px""},
                                {title:""Size"",field:""Size"",width:""38px"", hidden: true},
                                {title:""Barcode"",field:""BagBarcode"",width:""79px"", footerTemplate: ""Total"", groupFooterTemplate: ""Sub Total""},
                                {title:""Quantity"",field:""Quantity"",width:""48px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                                {title:""Remarks"",field:""Remarks"",width:""51px""},
                                {title:""Location"",field:""Loc"",width:""15px""},
                            ],
                });
            }

            SearchGatepassPrint(rowDataItem.ControlId);

            printpdfwindow = $(""#printpdf"").kendoWindow({
                        height: ""75%"",
                        title: ""Print Dispatch Note"",
                        visible: false,
                        actions: [""Close""],
                        scrollable: true,
                        modal: true");
            WriteLiteral(@",
                        resizable: true,
                        draggable: true,
                        pinned: true,
                    }).data(""kendoWindow"");

                var arrows = [38, 40];
                printpdfwindow.open().center(); 
        }
        EnableInputs();
    }

    function loadSize(e) {
        var grid = $(""#item-grid-print"").data(""kendoGrid"");
        if(e == 2) {
            grid.showColumn(""Size"");
        } else {
            grid.hideColumn(""Size"");
        }
        SearchGatepassPrint(rowDataItem.ControlId);
    }

    function SearchGatepassPrint(gatePassNumber) {
        DisableInputs();
        var timenow = event.timeStamp;
        var smode = $(""#sizewiseFilterPrint"").val();
        if(smode == """") {
            smode = 1;
        }
        var gridData = [];
        if(gatePassNumber != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(131523, 14, false);
#line 2530 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(131537, 6791, true);
            WriteLiteral(@"/Lookup/GetRequestHeaderDetails?controlid=' + gatePassNumber,
                type: 'GET',
                //async: false,
                contentType: 'application/json; charset=utf-8',
                data: {
                    gatepassNumber: gatePassNumber
                },
                success: function (result) {
                    //console.log(result);
                    if(result != null && result != """") {
                        $(""#type-text"").html(result.controlType == 100 ? ""Factory Dispatch (100)"" : (result.controlType == 200 ? 'BFL Dispatch (200)' : 'Factory Production Dispatch (300)'));
                        $(""#status-text"").html(result.txnStatus == 1 ? ""Pending Approval"" : result.txnStatus == 2 ? ""Approved - Not Send"" : result.txnStatus == 3 ? ""Security Passed"" : result.txnStatus == 5 ? ""Closed"" : """");
                        $(""#locationfrom-text"").html(result.locFromCode);
                        $(""#locationto-text"").html(result.locName);
                        $(""");
            WriteLiteral(@"#department-text"").html(result.depid == 1 ? ""Washing out (Factory)"" : result.depid == 2 ? ""Washing in (BFL)"" : result.depid == 3 ? ""Washing out (BFL)"" : result.depid == 4 ? ""Washing receive (Factory)"" : """");
                        $(""#address-text"").html(result.locAddress);
                        $(""#approval-text"").html(result.approver + (result.txnStatus < 2 ? "" (pending)"" : "" (approved)""));
                        $(""#createdon-text"").html(formatDate(result.createdDateTime));
                        $(""#requestby-text"").html(result.createdBy);
                        $(""#receiver-text"").html(result.receiverName);
                        $(""#receiveremail-text"").html(result.receiverEmail);
                        $(""#watcheremail-text"").html(result.watcherEmail);
                        $(""#referenceno-text"").html(result.errorCode);
                        $(""#veficle-text"").html(result.vehicleNo);
                        $(""#remarks-text"").html(result.remark);

                        //Print");
            WriteLiteral(@" Page
                        $(""#dispatch-number-c"").html(""*"" + gatePassNumber + ""*"");
                        $(""#dispatch-number-r"").html(""*"" + gatePassNumber + ""*"");
                        $(""#dispatch-number-s"").html(""*"" + gatePassNumber + ""*"");
                        $(""#return-c"").html((result.return == 0 ? """" : ""(RETURN) ""));
                        $(""#return-r"").html((result.return == 0 ? """" : ""(RETURN) ""));
                        $(""#return-s"").html((result.return == 0 ? """" : ""(RETURN) ""));
                        
                        $(""#time-stamp"").html(new Date());
                        $(""#copy"").html(rowDataItem.Status > 2 ? ""copy"" : """");
                        //header security
                        $(""#type-text-p"").html(result.controlType == 100 ? ""Factory Dispatch (100)"" : (result.controlType == 200 ? 'BFL Dispatch (200)' : 'Factory Production Dispatch (300)'));
                        $(""#locationfrom-text-p"").html(result.locFromCode);
                        $(""");
            WriteLiteral(@"#locationto-text-p"").html(result.locName);
                        $(""#requestby-text-p"").html(result.createdBy);
                        $(""#createdon-text-p"").html(formatDate(result.createdDateTime));
                        $(""#department-text-p"").html(result.depid == 1 ? ""Washing out (Factory)"" : result.depid == 2 ? ""Washing in (BFL)"" : result.depid == 3 ? ""Washing out (BFL)"" : result.depid == 4 ? ""Washing receive (Factory)"" : """");
                        $(""#referenceno-text-p"").html(result.errorCode);
                        $(""#veficle-text-p"").html(result.vehicleNo);
                        $(""#approval-text-p"").html(result.approver + (result.txnStatus < 2 ? "" (pending)"" : "" (approved)""));
                        $(""#remarks-text-p"").html(result.remark);
                        $(""#receiver-text-p"").html(result.receiverName);
                        $(""#address-text-p"").html(result.locAddress);

                        //header  return
                        $(""#type-text-r"").html(result.");
            WriteLiteral(@"controlType == 100 ? ""Factory Dispatch (100)"" : (result.controlType == 200 ? 'BFL Dispatch (200)' : 'Factory Production Dispatch (300)'));
                        $(""#locationfrom-text-r"").html(result.locFromCode);
                        $(""#locationto-text-r"").html(result.locName);
                        $(""#requestby-text-r"").html(result.createdBy);
                        $(""#createdon-text-r"").html(formatDate(result.createdDateTime));
                        $(""#department-text-r"").html(result.depid == 1 ? ""Washing out (Factory)"" : result.depid == 2 ? ""Washing in (BFL)"" : result.depid == 3 ? ""Washing out (BFL)"" : result.depid == 4 ? ""Washing receive (Factory)"" : """");
                        $(""#referenceno-text-r"").html(result.errorCode);
                        $(""#veficle-text-r"").html(result.vehicleNo);
                        $(""#approval-text-r"").html(result.approver + (result.txnStatus < 2 ? "" (pending)"" : "" (approved)""));
                        $(""#remarks-text-r"").html(result.remark);");
            WriteLiteral(@"
                        $(""#receiver-text-r"").html(result.receiverName);
                        $(""#address-text-r"").html(result.locAddress);

                        //header  customer
                        $(""#type-text-c"").html(result.controlType == 100 ? ""Factory Dispatch (100)"" : (result.controlType == 200 ? 'BFL Dispatch (200)' : 'Factory Production Dispatch (300)'));
                        $(""#locationfrom-text-c"").html(result.locFromCode);
                        $(""#locationto-text-c"").html(result.locName);
                        $(""#requestby-text-c"").html(result.createdBy);
                        $(""#createdon-text-c"").html(formatDate(result.createdDateTime));
                        $(""#department-text-c"").html(result.depid == 1 ? ""Washing out (Factory)"" : result.depid == 2 ? ""Washing in (BFL)"" : result.depid == 3 ? ""Washing out (BFL)"" : result.depid == 4 ? ""Washing receive (Factory)"" : """");
                        $(""#referenceno-text-c"").html(result.errorCode);
                ");
            WriteLiteral(@"        $(""#veficle-text-c"").html(result.vehicleNo);
                        $(""#approval-text-c"").html(result.approver + (result.txnStatus < 2 ? "" (pending)"" : "" (approved)""));
                        $(""#remarks-text-c"").html(result.remark);
                        $(""#receiver-text-c"").html(result.receiverName);
                        $(""#address-text-c"").html(result.locAddress);

                        //Request Item Grid Data
                        $(""#item-grid-print"").data('kendoGrid').dataSource.data([]);
                        var gridData1 = [];
                        $.ajax({
                                url: '");
            EndContext();
            BeginContext(138329, 14, false);
#line 2612 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\Dispatch.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(138343, 41252, true);
            WriteLiteral(@"/Lookup/GetGroupBarcodeDetails?controlId=' + gatePassNumber + '&seq=' + result.seq + ""&smode="" + smode,
                                type: 'GET',
                                dataType: 'json',
                                async: false,
                                contentType: 'application/json',
                                beforeSend: function () {
                                    $(""#ajaxBusy"").show();
                                },
                                complete: function () {
                                    $(""#ajaxBusy"").hide();
                                },  
                                success: function (response) {
                                    //console.log(response);
                                    var GrandTotal = 0;
                                    var Total = [];
                                    $.each(response, function (index, elements) {
                                        var object = {
                        ");
            WriteLiteral(@"                    ColorCode: '',
                                            Key: elements.scheduleDesc + "" | "" + elements.colorDesc,
                                            Seq: elements.seq,
                                            TxnMode: elements.txnMode,
                                            L1id: elements.styleId,
                                            Style: elements.styleDesc,
                                            L2id: elements.scheduleId,
                                            Shedule: elements.scheduleDesc,
                                            PO: elements.poNo,
                                            ZFeature: elements.zfeature,
                                            L4id: elements.colorId,
                                            Color: elements.colorDesc,
                                            Size: elements.sizeDesc,
                                            BagBarcode: elements.bagBarCode,
                                 ");
            WriteLiteral(@"           Quantity: elements.qty01,
                                            Action: elements.bagStatus,
                                            Remarks: elements.remark,
                                            Location: elements.location,
                                        }
                                        gridData1.push(object);
                                    });
                                    //console.log(gridData1);
                                    $(""#item-grid-print"").data('kendoGrid').dataSource.data(gridData1);

                                    //Set Quantitiy Text
                                    $(""#total-quantity-text-c"").html(result.qty01 + "" pieces ("" + response.length + "" entitie(s) )"");
                                    $(""#total-quantity-text-r"").html(result.qty01 + "" pieces ("" + response.length + "" entitie(s) )"");
                                    $(""#total-quantity-text-p"").html(result.qty01 + "" pieces ("" + response.length + "" ent");
            WriteLiteral(@"itie(s) )"");
                                    EnableInputs();
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                                    EnableInputs();
                                }
                        });

                        dispatchid = gatePassNumber;
                        FocusRequestNoTextBox();
                    }
                },
                error: function () {
                    $(""#search-result-grid-gatepass"").html('No Results found !!!');
                    EnableInputs();
                }
            });

            //Request Status Grid
                                                                   
        } else {
            msgBox.show('කරුණාකර යැවීමේ සටහන් අංකයක් තෝරා නැවත උත්සාහ කරන්න.', 'please select a request id and try again.', 'අවවාදයයි / Warning', 'BS01', 'Warning");
            WriteLiteral(@"');
            EnableInputs();
        }
    }

    function colsePrintWindow() {
        if(printpdfwindow != """"){
            printpdfwindow.close();
        }
    }
    
    function getPDF(selector) {
      kendo.drawing.drawDOM($(selector), {
           //forcePageBreak: "".items-page-break"",
           paperSize: ""A4"",
           allPages: true,
           avoidLinks: true,
           paperSize: ""A4"",
           margin: { top: ""0cm"", left: ""0cm"", right: ""1cm"", bottom: ""0cm"" },
           repeatHeaders: true,
           scale: 0.9
        }).then(function (group) {
            kendo.drawing.pdf.saveAs(group, ""Dispatch Note"" + $(""#dispatch-number-c"").html() + "".pdf"");
        });
    }

    function formatDate(date) {
        return (new Date(date)).toLocaleDateString(""en-US"",{ month: '2-digit', day: '2-digit', year: 'numeric', hour: 'numeric', minute: 'numeric'});
    }

    function resetlRequest() {
        resetControlers();
    }

    function DisableInputs() {
    ");
            WriteLiteral(@"    $(""#new-request-button"").attr('disabled', 'disabled');

        $(""#gate-pass-request-create-button"").attr('disabled', 'disabled');
        $(""#gate-pass-request-cancel-button"").attr('disabled', 'disabled');
        $(""#gate-pass-request-reset-button"").attr('disabled', 'disabled');

        $(""#filterGatePassRequestButton"").attr('disabled', 'disabled');
        $(""#item-add-button"").attr('disabled', 'disabled');
        //$(""#cancel-button"").attr('disabled', 'disabled');

        $(""#ajaxBusy"").show();
    }

    function EnableInputs() {
        $(""#new-request-button"").removeAttr('disabled');

        $(""#gate-pass-request-create-button"").removeAttr('disabled');
        $(""#gate-pass-request-cancel-button"").removeAttr('disabled');
        $(""#gate-pass-request-reset-button"").removeAttr('disabled');

        $(""#filterGatePassRequestButton"").removeAttr('disabled');
        $(""#item-add-button"").removeAttr('disabled');
        //$(""#cancel-button"").removeAttr('disabled');
        
");
            WriteLiteral(@"        $(""#ajaxBusy"").hide();
    }
    //End of Print Controllers
</script>


<div>
    <div style=""margin-top: 5px; margin-left: 5px;"">
        <!--CREATE REQUEST BUTTON: BEGIN -->
        <div id=""createNewGatePass"">
            <div style=""float: left; margin-right: 30px;"">
                <button id=""new-request-button"" class=""k-button"" style=""background-color: #FFA000; border: none; font-size: 17px; font-weight: 600; color: #000000;"" onclick=""openCreateNewPass()"">
                    <span class=""k-icon k-i-plus"" style=""margin-right: 7px;""></span><span>Create New Request</span>
                </button>
            </div>
            <div style=""float: left;"">
                <span id=""gate-pass-creation-status"" style=""color: #51a351; font-size: large; visibility: hidden"">
                    Sucessful
                </span>
            </div>
        </div>
    <div style=""clear:both;""></div>
    <!--CREATE REQUEST BUTTON: END -->

    <!--FILTER: BEGIN -->
    <div style=""ma");
            WriteLiteral(@"rgin: 5px; margin-top: 14px;"">
        <div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""DateCreatedFilter"">
                        Date Created
                    </label>
                </div>
                <div style=""float: left;"">
                    <input id=""DateCreatedFilter"" class=""bu-form-control"" style=""width:180px""/>
                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""MonthFilter"">
                        Month
                    </label>
                </div>
                <div style=""float: left;"">
                    <input id=""MonthFilter"" class=""bu-form-control"" style=""width:180px""/>
");
            WriteLiteral(@"                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""StatusFilter"">
                        Status
                    </label>
                </div>
                <div style=""float: left;"">
                    <div id=""StatusFilter"" class=""bu-form-control"" style=""width:180px""></div>
                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""LocationToFilter"">
                        Location To
                    </label>
                </div>
                <div style=""float: left;"">
                    <div id=""LocationToFilter"" class=""bu-form-control"" style=""width:180px""></div");
            WriteLiteral(@">
                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""CreatedByFilter"">
                        Created By
                    </label>
                </div>
                <div style=""float: left;"">
                    <div id=""CreatedByFilter"" class=""bu-form-control"" style=""width:180px""></div>
                </div>
            </div>
        </div>
    </div>

    <div>
        <div>
            <div style=""clear: both;"">
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""RequestTypeFilter"">
                            Type
                        </label>
                    </div>
             ");
            WriteLiteral(@"       <div style=""float: left; padding-left: 5px"">
                        <div id=""RequestTypeFilter"" class=""bu-form-control"" style=""width:180px""></div>
                    </div>
                </div>
            </div>
            <div>
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""RequestIdFilter"">
                            Request Id
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input class=""k-textbox"" id=""RequestIdFilter"" name=""receiverEmail"" style=""width:200px; height: 27px; color: black;"" type=""text"" value="""">
                    </div>
                </div>
            </div>
            <div style=""clear: both;"">
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    ");
            WriteLiteral(@"<div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""ApproverFilter"">
                            Approver
                        </label>
                    </div>
                    <div style=""float: left; padding-left: 5px"">
                        <div id=""ApproverFilter"" class=""bu-form-control"" style=""width:180px""></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div>
        <div style=""clear: both;"">
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; visibility: hidden;"">
                    Invisible text
                </div>
                <div style=""float: left; padding-left: 5px;"">
                    <button id=""filterGatePassRequestButton"" class=""k-button"" style=""width: 180px; padding-left: 5px; background-color: green; border: none");
            WriteLiteral(@"; font-size: 17px; font-weight: 600; color: #000000;"" onclick=""RefreshRequestGrid()"">
                        <span class=""k-icon k-i-search"" style=""margin-right: 7px; text-align:left;""></span><span>Search</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!--FILTER: END -->

    <!--DETAILS PAGE GRID: BEGIN -->
    <div style=""float: left; height: 35px; margin-right: 10px; width: 100%;"">
        <div style=""float: left; width: 110px; margin-right: 10px; visibility: hidden;"">
             Invisible text
        </div>
        <div id=""request-grid"" style=""clear: both; padding-top: 5px; max-width: 99%;""></div>
    </div>
</div>

<!--CREATE NEW PASS PAGE: BEGIN -->
<div id=""createNewPass"" hidden=""hidden"">
    <div style=""height: 655px; max-height: 665px; overflow: auto; "">
        <div style=""float: left; width: 450px; margin-right: 10px;"">
            <div style=""height: 35px; margin-top: 20px;"">
                <div style=""float");
            WriteLiteral(@": left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""return"">Type</label>
                </div>
                <div style=""float: left;"">
                    <div id=""newRequestTypeFilter"" class=""bu-form-control"" style=""width:180px""></div>
                </div>
                <div style=""float: left;"">
                    <span id=""approvers-requried-sign"" style=""margin-left: 5px; color: Red;"">
                        *
                    </span>
                </div>
            </div>
            <div style=""clear: both; height: 35px;"">
            </div>
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""locationTo"">
                        Location To
                    </label>
                </div>
                <div style=""float: left;"">
                    <div id=");
            WriteLiteral(@"""newLocationToFilter"" class=""bu-form-control"" style=""width:180px""></div>
                </div>
                <div style=""float: left;"">
                    <span style=""margin-left: 5px; color: Red;"">*</span>
                </div>
            </div>
            <div style=""clear: both; height: 55px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""address"">
                        Address
                    </label>
                </div>
                <div style=""float: left;"">
                    <textarea class=""k-textbox"" cols=""20"" id=""address"" name=""address"" rows=""2"" style=""width:200px;"" disabled=""disabled""></textarea>
                </div>
            </div>
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""departmentTo"">
         ");
            WriteLiteral(@"               Department To
                    </label>
                </div>
                <div style=""float: left;"">
                    <div id=""departmentTo"" class=""bu-form-control"" style=""width:180px""></div>
                </div>
                <div style=""float: left;"">
                    <span style=""margin-left: 5px; color: Red;"">*</span>
                </div>
            </div>
            <div style=""clear: both; height: 60px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""approvers_taglist"">
                        Approver
                    </label>
                </div>
                <div style=""float: left;"">
                    <div id=""approvers_taglist"" class=""bu-form-control"" style=""width:180px""></div>
                </div>
                <div style=""float: left;"">
                    <span id=""approvers-requried-sign"" style=""margin-left: 5px; color: Red; ");
            WriteLiteral(@"visibility: hidden;"">
                        *
                    </span>
                </div>
            </div>
        </div>
        <div style=""float: left; width: 520px; margin-right: 10px;"">
            <div style=""height: 35px; margin-top: 20px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""receiverName"">
                        Receiver name / contact no
                    </label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""receiverName"" name=""receiverName"" style=""width:200px;"" type=""text"" value="""">
                </div>
            </div>
            <div style=""height: 35px;"">
            </div>
            <div style=""height: 35px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""receiverEmail"">
    ");
            WriteLiteral(@"                    Receiver email
                    </label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""receiverEmail"" name=""receiverEmail"" style=""width:200px;"" type=""text"" value="""">
                </div>
            </div>
            <div style=""height: 35px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""watcherEmail"">
                        Watcher email
                    </label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""watcherEmail"" name=""watcherEmail"" style=""width:200px;"" type=""text"" value="""">
                </div>
            </div>
            <div style=""height: 35px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""courierNo"">
  ");
            WriteLiteral(@"                      Ref. No.
                    </label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""courierNo"" name=""courierNo"" style=""width:200px;"" type=""text"" value="""">
                </div>
            </div>
            <div style=""height: 35px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""gpRemarks"">
                        Remarks
                    </label>
                </div>
                <div style=""float: left; margin-right: 10px;"">
                    <textarea class=""k-textbox"" cols=""20"" id=""gpRemarks"" name=""gpRemarks"" rows=""2"" style=""width:200px;resize: none;""></textarea>
                </div>
            </div>
            <div style=""height: 35px; padding-top: 15px;"">
                <div style=""float: left; width: 130px; margin-right: 10px; text-align: right; font-weight: bold;"">
          ");
            WriteLiteral(@"          <label for=""vehicleNo"">
                        Vehicle No
                    </label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""vehicleNo"" name=""vehicleNo"" style=""width:200px;"" type=""text"" value="""">
                </div>
            </div>
        </div>
        <div style=""clear:both;""></div>
        <div style=""clear: both;"">
            <h4 style=""font-weight: 600;"">
                Items
            </h4>
        </div>
        <div>
            <button id=""open-request-item-window-button"" class=""k-button other-buttons"" disabled=""disabled""  style=""width: 110px;"" onclick=""openAddItemWindow()"">
                <span class=""k-icon k-i-plus"" style=""margin-right: 7px;""></span><span>Add</span>
            </button>
            <button id=""open-request-expand-window-button"" class=""k-button other-buttons"" style=""margin-left: 12px; width: 32px;"" disabled=""disabled"" onclick=""openExandTable()"">
                <");
            WriteLiteral(@"span class=""k-icon k-i-full-screen"" style=""margin-right: 7px;""></span><span></span>
            </button>
        </div>
        <!-- REQUEST ITEMS GRID: BEGIN -->
        <div style=""clear: both; padding-top: 5px;"">
            <div id=""request-items-grid"" style=""margin-top: 5px; margin-bottom: 5px; width: 980px; height:225px"">
        </div> 
        <!--END: Remove Request item window -->
        <!-- REQUEST ITEMS GRID: END -->
        </div>
        <div style=""height: 50px""></div>
    </div>
    <div style=""clear: both; height: 35px; margin-top: 20px; position: absolute; top: 10; bottom: 0; height: 7%;"">
        <div style=""float: left; margin-right: 10px;"">
            <input id=""gate-pass-request-create-button"" type=""button"" class=""k-button button-done"" value=""Request"" style=""width: 180px; margin-right: 20px !important"" onclick=""saveRequest()"">
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""gate-pass-request-reset-button"" type=""button"" cla");
            WriteLiteral(@"ss=""k-button button-reset"" value=""Reset"" style=""width: 180px; margin-right: 20px !important"" onclick=""resetlRequest()"">
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""gate-pass-request-cancel-button"" type=""button"" class=""k-button button-cancel"" value=""Cancel"" style=""width: 180px; margin-right: 20px !important"" onclick=""cancelRequest()"">
        </div>
    </div>
</div>
<!--CREATE NEW PASS PAGE: END -->

<!--ADD ITEMS PAGE: BEGIN -->
<div id=""add-items-grid"" hidden=""hidden"">
    <div style=""height: 535px; max-height: 535px; overflow: auto; "">
        <!--FILTER: BEGIN -->
        <div style=""margin: 5px;"">
            <div>
                <div style=""float: left; height: 35px; margin-right: 5px;"">
                    <div style=""float: left; width: 70px; margin-right: 5px; text-align: right; font-weight: bold;"">
                        <label for=""DateFromFilter"">
                            From
                        </label>
               ");
            WriteLiteral(@"     </div>
                    <div style=""float: left;"">
                        <input id=""DateFromFilter"" class=""bu-form-control"" style=""width:180px""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 5px;"">
                    <div style=""float: left; width: 52px; margin-right: 5px; text-align: right; font-weight: bold;"">
                        <label for=""DateToFilter"">
                            To
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""DateToFilter"" class=""bu-form-control"" style=""width:180px""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 5px;"">
                    <div style=""float: left; width: 70px; margin-right: 5px; text-align: right; font-weight: bold;"">
                        <label for=""ModeFilter"">
                            Mod");
            WriteLiteral(@"e
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""ModeFilter"" class=""bu-form-control"" style=""width:180px""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 5px;"">
                    <div style=""float: left; width: 210px; margin-right: 5px; text-align: right; font-weight: bold;"">
                        <label for=""departmentOperationFilter"">
                            Department Opeartion
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""departmentOperationFilter"" class=""bu-form-control"" style=""width:180px""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 5px;"">
                    <div style=""float: left; width: 70px; margin-right: 5px; text-align: right; font-weigh");
            WriteLiteral(@"t: bold;"">
                        <label for=""sizewiseFilter"">
                            Size
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""sizewiseFilter"" class=""bu-form-control"" style=""width:180px""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 5px;"">
                    <div style=""float: left; width: 70px; margin-right: 5px; visibility: hidden;"">
                        Invisible text
                    </div>
                    <div style=""float: left;"">
                        <button id=""filterGatePassRequestButton"" class=""k-button"" style=""width: 180px; background-color: green;border: none; font-size: 16px; font-weight: 600; color: #000000;"" onclick=""searchForBagData()"">
                            <span class=""k-icon k-i-search"" style=""margin-right: 7px; text-align:left;""></span><span>Search</span>
               ");
            WriteLiteral(@"         </button>
                    </div>
                </div>
            </div>
        </div>
        <!--FILTER: END -->

        <!-- REQUEST ITEMS GRID: BEGIN -->
        <div id=""r01"">
        <div id=""add-items-grid-data"" style=""margin-top: 5px; margin-top: 80px !important; max-height: 420px !important; height: 400px;""> 
        </div>
        <!--END: Remove Request item window -->
        <!-- REQUEST ITEMS GRID: END -->
        </div>
        <div style=""height: 50px""></div>
    </div>
    <div style=""clear: both; height: 35px; margin-top: 20px; position: absolute; top: 10; bottom: 0; height: 7%;"">
        <div style=""float: left; margin-right: 10px;"">
            <input id=""item-add-button"" type=""button"" class=""k-button button-done"" value=""Add"" style=""width: 100px;"">
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""cancel-button"" type=""button"" class=""k-button button-cancel"" value=""Cancel"" style=""width: 100px;"">
        </div>");
            WriteLiteral(@"
    </div>
</div>
<!--ADD ITEMS PAGE: END -->

<!-- UPDATE STATUS WINDOW: START -->
<div id=""updateStatus"" hidden=""hidden"">
    <div style=""height: 280px; max-height: 320px; overflow: auto; "">
        <div style=""margin-top: 10px;"">
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""RequestId"">
                        Request Id
                    </label>
                </div>
                <div style=""float: left;"">
                    <label id=""RequestId"" style=""width:180px""></label>
                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""Department"">
                        Department To
                    </");
            WriteLiteral(@"label>
                </div>
                <div style=""float: left;"">
                    <label id=""Department"" style=""width:180px""></label>
                    <label id=""DepartmentId"" style=""width:180px"" hidden=""hidden""></label>
                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""ReturnS"">
                        Type
                    </label>
                </div>
                <div style=""float: left;"">
                    <label id=""ReturnS"" style=""width:180px""></label>
                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""Seq"">
                        Sequence
  ");
            WriteLiteral(@"                  </label>
                </div>
                <div style=""float: left;"">
                    <label id=""Seq"" style=""width:180px""></label>
                </div>
            </div>
            <label id=""currentStatus"" style=""width:180px"" hidden=""hidden""></label>
            <label id=""approverid"" style=""width:180px"" hidden=""hidden""></label>
        </div>
        <div style=""float: left; width: 98%; height: 35px; margin-right: 10px;"">
            <div id=""request-status-grid"" style=""float: left; margin-left: 10px;""> 
            </div>
        </div>
    </div>
</div>
<!-- UPDATE STATUS WINDOW: START -->

<!-- Show Request Details - info :START -->
<div id=""infowindow"" style=""font-size: 12px;"" hidden=""hidden"">
    <div style=""padding: 10px;"">
        <div>
            <div style=""float: left; width: 55%;"">
                <div style=""height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
");
            WriteLiteral(@"                        <label for=""return"">
                            Type
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""type-text"">
                        </label>
                    </div>
                </div>
                <div style=""height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label for=""return"">
                            Status
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""status-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>");
            WriteLiteral(@"
                            Location From
                        </label>
                    </div>
                    <div style=""float: left;"">   
                        <label id=""locationfrom-text"">
                        </label>    
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Location To
                        </label>
                    </div>
                    <div style=""float: left;"">  
                        <label id=""locationto-text"">
                        </label>      
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
 ");
            WriteLiteral(@"                           Department To
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""department-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Address
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""address-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            ");
            WriteLiteral(@"Approval
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""approval-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Security Seal No.
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""securitysealno-text"">
                        </label>
                    </div>
                </div>
            </div>
            <div style=""float: left; margin-left: 10px;"">
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">");
            WriteLiteral(@"
                        <label>
                            Created On
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""createdon-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Request By
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""requestby-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <");
            WriteLiteral(@"label>
                            Receiver
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""receiver-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Receiver Email
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""receiveremail-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
             ");
            WriteLiteral(@"               Watcher Email
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""watcheremail-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Reference No
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""referenceno-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            V");
            WriteLiteral(@"ehicle No.
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""veficle-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Remarks
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""remarks-text"">
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div style=""clear:both;"">
            <div>
                <h5>
                    Items
                </h5>
            </div>
            <!-- REQUEST ITEMS GRID: BEGIN -->
            <div id=""read-only-request-it");
            WriteLiteral(@"ems-grid"" style=""margin-top: 5px;""></div>
        </div>
        <div style=""clear:both;"">
            <div>
                <h5>
                    Workflow
                </h5>
            </div>
            <!-- REQUEST ITEMS GRID: BEGIN -->
            <div id=""request-status"" style=""margin-top: 5px;""></div>
        </div>
        <div style=""clear:both; margin-bottom: 13px;""></div>
    </div>
</div>
<!-- Show Request Details - info :END-->

<!-- uppdate Status Detail Window -->
<div id=""checkforAllBags"" style=""height: 670px"" hidden=""hidden"">
    <div style=""padding: 10px;"">
        <div>
            <div style=""float: left;"">
                <div style=""height: 35px;"">
                    <div style=""float: left; width: 190px; margin-right: 25px; text-align: right; font-weight: bold;"">
                        <label for=""scanBagBarodeSearch"">
                            Scan Bag Barcode
                        </label>
                    </div>
                    <div style");
            WriteLiteral(@"=""float: left;"">
                        <!--<input id=""scanBagBarodeSearch"" class=""k-textbox"" style=""width:210px""/>-->
                    </div>
                </div>
            </div>    
        </div>
        <div>
            <div style=""float: left; width: 50%;"">
                <div style=""height: 35px;"">
                    <div style=""float: left; width: 190px; margin-right: 25px; text-align: right; font-weight: bold;"">
                        <label for=""unloading-location"">
                            Unloading Location
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""unloading-location"" class=""k-textbox"" style=""width:210px""/>
                    </div>
                </div>
            </div>    
        </div>
        <div style=""clear:both;"">
            <div>
                <h2>
                    Items
                </h2>
            </div>
            <!-- REQUEST ITE");
            WriteLiteral(@"MS GRID: BEGIN -->
            <div id=""bag-items-grid"" style=""margin-top: 5px;"">
            </div>
        </div>
    </div>
    <div style=""clear: both; height: 35px; margin-top: 20px; position: absolute; top: 10; bottom: 0; height: 7%;"">
        <div style=""float: left; margin-right: 10px;"">
            <input id=""grn-button"" type=""button"" class=""k-button"" value=""Close Request"" style=""width: 140px;"" onclick=""closeRequest()"">
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""cancel-button"" type=""button"" class=""k-button"" value=""Cancel"" style=""width: 100px;"" onclick=""cnacelBagItemwindow()"">
        </div>
    </div>
</div>
<!-- uppdate Status Detail Window -->

<!-- Print Dispatch Window: START -->
<div id=""printpdf"" hidden=""hidden""> <!-- hidden=""hidden"" -->
    <div id=""example"">
        <div class=""box wide hidden-on-narrow"">
            <div style=""height: 35px; margin-top: 2px;"">
                <div style=""float: left; width: 120px; margin-");
            WriteLiteral(@"right: 10px; margin-left: 4px; text-align: left; font-weight: bold;"">
                    <label for=""return"">Select Page Size</label>
                </div>
                <div style=""float: left;"">
                    <select id=""paper"" style=""width: 100px;"">
                        ");
            EndContext();
            BeginContext(179595, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f3b19a3225e74c0cb356df0bec36c138", async() => {
                BeginContext(179628, 2, true);
                WriteLiteral("A4");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(179639, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(179665, 43, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3263009a8e5e4f46aafe574179897181", async() => {
                BeginContext(179693, 6, true);
                WriteLiteral("Letter");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(179708, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(179734, 49, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "66b3bbacf5334c108c81146aad933423", async() => {
                BeginContext(179765, 9, true);
                WriteLiteral("Executive");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(179783, 41028, true);
            WriteLiteral(@"
                    </select>
                </div>
                <div style=""float: left;"">
                    <span id=""approvers-requried-sign"" style=""margin-left: 5px; color: Red;"">
                        *
                    </span>
                </div>
                <div style=""float: left;  margin-left: 20px; text-align: left; font-weight: bold;"">
                    <button class=""export-pdf k-button"" onclick=""getPDF('.pdf-page')"">Export</button>
                </div>
                <div style=""float: left;"">
                    <button class=""export-pdf k-button"" style=""font-weight: 600; margin-left: 4px"" onclick=""colsePrintWindow()"">Close</button>
                </div>
                <div style=""float: right; height: 35px; margin-right: 5px;"">
                    <div style=""float: left;"">
                        <input id=""sizewiseFilterPrint"" style=""font-weight: 600;"" class=""bu-form-control"" style=""width:180px""/>
                    </div>
                </div>
 ");
            WriteLiteral(@"           </div>
        </div>

        <div class=""page-container hidden-on-narrow"">
            <div class=""pdf-page size-a4"" id=""pagecontent"">
                <div class=""inner-page"" style=""margin-top: -20px;"">
                    <div class=""pdf-header"">
                        <span class=""company-logo"">
                            <img src=""../images/logo.png"" style=""width: 70px; margin-bottom: -15px;""/>
                        </span>
                        
                    </div>
                    <div class=""pdf-footer"">
                        <p>
                            <label style=""font-size: 9px;"" id=""time-stamp""></label>
                            <label style=""font-size: 12px; text-align: right; font-weight: bold"" id=""copy""></label>
                        </p>
                    </div>

                    <!--Security Copy-->
                    <div class=""addresses"">
                        <div class=""row"" style=""margin-left: -4px;"">
                  ");
            WriteLiteral(@"          <h6><span id=""return-c"" style=""font-weight: 700; color: #454545;""></span>GATE PASS - CUSTOMER COPY</h6>
                            <span class=""invoice-number barcode-text"" style=""margin-top: -19px; margin-right: 25px; font-size: 12px;"" id=""dispatch-number-s""></span>
                        </div>
                        <div class=""row"" style=""margin-top: -15px;"">
                            <div class=""for"" style=""margin-left: -6px;"">
                                <div style=""float: left;"">
                                    <div style=""height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label for=""return"">
                                                Type
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""type-text-p"">
               ");
            WriteLiteral(@"                             </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label>
                                                Location From
                                            </label>
                                        </div>
                                        <div style=""float: left;"">   
                                            <label id=""locationfrom-text-p"">
                                            </label>    
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label>
                                 ");
            WriteLiteral(@"               Location To
                                            </label>
                                        </div>
                                        <div style=""float: left;"">  
                                            <label id=""locationto-text-p"">
                                            </label>      
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label>
                                                Quantity
                                            </label>
                                        </div>
                                        <div style=""float: left;"">  
                                            <label id=""total-quantity-text-p"">
                                            </label>      
                            ");
            WriteLiteral(@"            </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""for"">
                                <div style=""float: left;"">
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Created By
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""requestby-text-p"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class");
            WriteLiteral(@"=""label-col"">
                                            <label>
                                                Created On
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""createdon-text-p"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Department To
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""department-text-p"">
");
            WriteLiteral(@"                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Reference No
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""referenceno-text-p"">
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""for"" style=""margin-top: -17px;"">
                                <div style=""float: left;"">
                 ");
            WriteLiteral(@"                   <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Driver NIC
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""drivernic-text-p"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Driver Name
                                            </label>
                                        </div>
                                   ");
            WriteLiteral(@"     <div style=""float: left;"">
                                            <label id=""driverbane-text-p"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Vehicle No.
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""veficle-text-p"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div ");
            WriteLiteral(@"class=""label-col"">
                                            <label>
                                                Driver Signature
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""driversignature-text-p"">
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class=""addresses"">
                        <div class=""for"">
                            <div style=""float: left;"">
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                    ");
            WriteLiteral(@"                        Approval
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""approval-text-p"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Remarks
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""remarks-text-p"">
                                        </label>
                                    </div>
                                </div>
                            ");
            WriteLiteral(@"    <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"" style=""width: 100px !important;"">
                                        <label>
                                            Security Seal No.
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""securitysealno-text-p"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Receiver
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
    ");
            WriteLiteral(@"                                    <label id=""receiver-text-p"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Address
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""address-text-p"">
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class=""cut-text"" style=""margin-top: -6px;""><span>....................................................");
            WriteLiteral(@"..................</span><span class=""k-icon k-i-cut"" style=""transform: rotate(90deg);""></span><span> Cut Here......................................................................</div>

                    <!--Return Copy-->
                    <div class=""addresses"">
                        <div class=""row"" style=""margin-left: -4px;"">
                            <h6><span id=""return-r"" style=""font-weight: 700; color: #454545;""></span>GATE PASS - RETURN COPY</h6>
                            <span class=""invoice-number barcode-text"" style=""margin-top: -28px; margin-right: 25px; font-size: 12px;"" id=""dispatch-number-r""></span>
                        </div>
                        <div class=""row"" style=""margin-top: -15px;"">
                            <div class=""for"" style=""margin-left: -6px;"">
                                <div style=""float: left;"">
                                    <div style=""height: 20px;"">
                                        <div class=""label-col-l"">
              ");
            WriteLiteral(@"                              <label for=""return"">
                                                Type
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""type-text-r"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label>
                                                Location From
                                            </label>
                                        </div>
                                        <div style=""float: left;"">   
                                            <label id=""locationfrom-text-r"">
                    ");
            WriteLiteral(@"                        </label>    
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label>
                                                Location To
                                            </label>
                                        </div>
                                        <div style=""float: left;"">  
                                            <label id=""locationto-text-r"">
                                            </label>      
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label>
                                     ");
            WriteLiteral(@"           Quantity
                                            </label>
                                        </div>
                                        <div style=""float: left;"">  
                                            <label id=""total-quantity-text-r"">
                                            </label>      
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""for"">
                                <div style=""float: left;"">
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Created By
                                            </label>
                                        </div>
                                        <div style=""floa");
            WriteLiteral(@"t: left;"">
                                            <label id=""requestby-text-r"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Created On
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""createdon-text-r"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
 ");
            WriteLiteral(@"                                           <label>
                                                Department To
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""department-text-r"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Reference No
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""referenceno-text-r"">
            ");
            WriteLiteral(@"                                </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""for"" style=""margin-top: -17px;"">
                                <div style=""float: left;"">
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Driver NIC
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""drivernic-text-r"">
                                            </label>
                                        </div>
                                    </div>
                                 ");
            WriteLiteral(@"   <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Driver Name
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""driverbane-text-r"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Vehicle No.
                                            </label>
                                        </div>
                                        <div styl");
            WriteLiteral(@"e=""float: left;"">
                                            <label id=""veficle-text-r"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Driver Signature
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""driversignature-text-r"">
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                   ");
            WriteLiteral(@" </div>
                    <div class=""addresses"">
                        <div class=""for"">
                            <div style=""float: left;"">
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Approval
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""approval-text-r"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Remarks
                              ");
            WriteLiteral(@"          </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""remarks-text-r"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"" style=""width: 100px !important;"">
                                        <label>
                                            Security Seal No.
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""securitysealno-text-r"">
                                        </label>
                                    </div>
                                </div>
                                <div style=");
            WriteLiteral(@"""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Receiver
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""receiver-text-r"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Address
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""address-text-r"">");
            WriteLiteral(@"
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class=""cut-text"" style=""margin-top: -6px;""><span>......................................................................</span><span class=""k-icon k-i-cut"" style=""transform: rotate(90deg);""></span><span> Cut Here......................................................................</div>

                    <!--Customer Copy-->
                    <div class=""addresses"">
                        <div class=""row"" style=""margin-left: -4px;"">
                            <h6><span id=""return-s"" style=""font-weight: 700; color: #454545;""></span>GATE PASS - SECURITY COPY</h6>
                            <span class=""invoice-number barcode-text"" style=""margin-top: -28px; margin-right: 25px; font-size: 12px;"" id=""dispatch-number-c""></span>
                   ");
            WriteLiteral(@"     </div>
                        <div class=""row"" style=""margin-top: -15px;"">
                            <div class=""for"" style=""margin-left: -6px;"">
                                <div style=""float: left;"">
                                    <div style=""height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label for=""return"">
                                                Type
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""type-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                        ");
            WriteLiteral(@"                    <label>
                                                Location From
                                            </label>
                                        </div>
                                        <div style=""float: left;"">   
                                            <label id=""locationfrom-text-c"">
                                            </label>    
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label>
                                                Location To
                                            </label>
                                        </div>
                                        <div style=""float: left;"">  
                                            <label id=""locationto-text-c"">
                        ");
            WriteLiteral(@"                    </label>      
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col-l"">
                                            <label>
                                                Quantity
                                            </label>
                                        </div>
                                        <div style=""float: left;"">  
                                            <label id=""total-quantity-text-c"">
                                            </label>      
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""for"">
                                <div style=""float: left;"">
                                    <div style=""cle");
            WriteLiteral(@"ar: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Created By
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""requestby-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Created On
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
  ");
            WriteLiteral(@"                                          <label id=""createdon-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Department To
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""department-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
           ");
            WriteLiteral(@"                                 <label>
                                                Reference No
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""referenceno-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""for"" style=""margin-top: -17px;"">
                                <div style=""float: left;"">
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Driver NIC
                                            </label>
       ");
            WriteLiteral(@"                                 </div>
                                        <div style=""float: left;"">
                                            <label id=""drivernic-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Driver Name
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""driverbane-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                    <div styl");
            WriteLiteral(@"e=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Vehicle No.
                                            </label>
                                        </div>
                                        <div style=""float: left;"">
                                            <label id=""veficle-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                    <div style=""clear: both; height: 20px;"">
                                        <div class=""label-col"">
                                            <label>
                                                Driver Signature
                                            </label>
                                        </div>
                                        <div style=""float: ");
            WriteLiteral(@"left;"">
                                            <label id=""driversignature-text-c"">
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""addresses"">
                        <div class=""for"">
                            <div style=""float: left;"">
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Approval
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""approval-text-c"">
                                        ");
            WriteLiteral(@"</label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Remarks
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""remarks-text-c"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"" style=""width: 100px !important;"">
                                        <label>
                                            Security Seal No.
                                        </label>");
            WriteLiteral(@"
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""securitysealno-text-c"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                                    <div class=""label-col-l"">
                                        <label>
                                            Receiver
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""receiver-text-c"">
                                        </label>
                                    </div>
                                </div>
                                <div style=""clear: both; height: 20px;"">
                            ");
            WriteLiteral(@"        <div class=""label-col-l"">
                                        <label>
                                            Address
                                        </label>
                                    </div>
                                    <div style=""float: left;"">
                                        <label id=""address-text-c"">
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class=""addresses items-page-break"" style=""margin-right: 2px; margin-top: 34px !important;"">
                        <div class=""row"">
                            <h6>REQUEST ITEMS</h6>
                        </div>
                        <div class=""row"">
                            <div style=""font-size: 9px;"">
                                <div id=""item-grid-print""></d");
            WriteLiteral(@"iv>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class=""responsive-message""></div>

        <!-- Load Pako ZLIB library to enable PDF compression -->
    </div>
</div>
<!-- End Print Dispatch Window: END -->

<!--Error Table Window: START-->
<div id=""errorWindow"" hidden=""hiden"">
    <div style=""clear:both;"">
        <div>
            <h2>
                Rejected Items Summary
            </h2>
        </div>
        <!-- ERROR ITEMS GRID -->
        <div id=""error-items-grid"" style=""margin-top: 5px;"">
        </div>
    </div>
</div>
<!--Error Table Window: END-->

<!--Expanded Table Window: START-->
<div id=""expandedWindow"" hidden=""hiden"">
    <div style=""clear:both;"">
        <div>
            <h2>
                Items
            </h2>
        </div>
        <!-- REQUEST ITEMS GRID -->
        <div id=""expand-items-grid"" style=""margin-top: 5px;"">
 ");
            WriteLiteral("       </div>\r\n    </div>\r\n</div>\r\n<!--Expanded Table Window: END-->");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
