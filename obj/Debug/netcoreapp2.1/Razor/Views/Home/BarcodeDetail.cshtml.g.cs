#pragma checksum "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8e97835561aa20acd126fb7c7348b27114a52403"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_BarcodeDetail), @"mvc.1.0.view", @"/Views/Home/BarcodeDetail.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/BarcodeDetail.cshtml", typeof(AspNetCore.Views_Home_BarcodeDetail))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI;

#line default
#line hidden
#line 2 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e97835561aa20acd126fb7c7348b27114a52403", @"/Views/Home/BarcodeDetail.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d6ac14fb493c2990ba4a5667bd32d8705427078c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_BarcodeDetail : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form cf"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
  
Layout = "_Layout";

#line default
#line hidden
            BeginContext(28, 23857, true);
            WriteLiteral(@"<script type=""text/javascript"">

//Declare variable for Models and status
var isValidClient = Answer.Null;
var clientconfig = null;
var userPermissionList = null;   
var selectedScanOption = ScanOption.Non;
var selectedTrxMode = TransactionMode.Non;
var selectedScanAction = Action.Non;
var selectedFunction = Answer.Null;
var scannedCount = 0; 
var scannedStatus = ScannedStatus.Non;
var isScanCompleted = false; 
var clientIP = null; 
var txUser = null;   
var styleDataSource = null;
var selectedBarcode = null;
var selectedColor = null; 
var selectedSize = null; 
var selectedScrapReason = null;
var selectedDefectOpp = null;
var selectedWfConfig = null;      
var selectedStyleNo = null;
var selectedStyleDesc = null;
var selectedScanCounterId = null;

// var selectedScanCounterPO = null;    
// var selectedScanCounterVal = null; 

var wfid = null;
var goodQty = 0;
var scrapQty = 0;
var reworkQty = 0;
var flag = true;

var scanMode = 0;

var barcodeSearchGrid = null;
var trave");
            WriteLiteral(@"lTagSearchGrid = null;
var bagTagSearchGrid = null;
var barcodeSearchWindow = null;
var travelTagSearchWindow = null;
var bagTagSearchWindow = null;

var scrapReasonSearchGrid = null;
var scrapReasonSearchWindow = null;
var poCounterResetWindow = null;
var colorSearchWindow = null;
var colorSearchGrid = null;
var POCounters = null;
var isValidBarcode = false;  
var WFDEPInstId = 0;
var expandedTableWindow = null;

var scannedBarcode = null;
var scannedBagTag = null;
var scannedTravelTag = null;

var ScanDataBackup = null;

var sacanComplete = true;
var errorbeforestauscomplete = null;

var runningPOCounters = [];
var lastUpdatedCounterId = null;
var haltsystem = false;

var previoushour = null;

var moreGramentMode = 0;

var garamentDetails = false;
var bagtagDetails = false;
var traveltagDetails = false;
var buddytagDetails = false;

//Page Load Event
    $(document).ready(function () {
        refreshmsgBoxHeaderStyle();
        EnableControllers();
        sacanCom");
            WriteLiteral(@"plete = true;
        errorbeforestauscomplete = '';

        $('#styleSearchBtn').focus();
        $(""#sitebody"").append(
            '<div id=""ajaxBusy"" class=""ajaxBusy""></div>'
        );
        $(""#ajaxBusy"").hide();

        $(document.body).keydown(function (e) {
            if (e.altKey && e.keyCode == 87) {
                $('#barcodeSearchGrid').data(""kendoGrid"").table.focus();
            }
        });

        $(document).on('keydown', disableFunctionKeys);
        (function blink() {
            $('.blinktext').fadeOut(150).fadeIn(150, blink);
        })();
        $('#pageTitleBar').html('<i class=""fas fa-barcode pageMainIcon""></i><span class=""pageTitle"">DCap - Barcode Details</span><button id=""new-request-button"" class=""k-button"" style=""background-color: #04630; border: none; font-size: 18px; font-weight: 600; color: #000000; margin-left: 25px;"" onclick=""openGroupBarcodeAudits()""><span>Tag Audit</span></button><button id=""new-request-button"" class=""k-button"" style=""background");
            WriteLiteral(@"-color: #04630; border: none; font-size: 18px; font-weight: 600; color: #000000; margin-left: 25px;"" onclick=""openBarcodeScanErrorCorrector()""><span>Scan Error Corrector</span></button><button id=""new-request-button"" class=""k-button"" style=""background-color: #04630; border: none; font-size: 18px; font-weight: 600; color: #000000; margin-left: 25px;"" onclick=""openFindBarcodeOperationHistory()""><span>Barcode History</span></button>');

        initializeControlEvents();
        getSessionInfo();
        checkLoginStatus();
        setClientConfigInfo();
        checkIdle();
        setPageControlsStartupStatus();
        initializeFunctionKeys();
 
        $('#sitebody').removeClass('body-login');
        if (isValidClient == Answer.Null) {
            window.location.href = ""Login"";
        }
        else if (isValidClient != Answer.Null && clientconfig.dataCaptureMode != DataCaptureMode.Barcode) {
            if(clientconfig.dataCaptureMode != DataCaptureMode.Washing) {
                msgBox.");
            WriteLiteral(@"show('මෙම යන්ත්‍රයට බාර්කෝඩ් ස්කෑන් කිරීම සඳහා අවසර නැත.', 'This device is not authorized for Bar-code Scan.', 'අවවාදයයි / Warning', 'BS01', 'Warning', function () {
                    //if (clientconfig.dataCaptureMode == DataCaptureMode.) {
                        window.location.href = ""BarcodeDetail"";
                    //}
                });
            }
        }
    });

    function openGroupBarcodeAudits() {
        window.location.href = ""GroupBarcodeAudit"";
    }

    function openBarcodeScanErrorCorrector() {
        window.location.href = ""BarcodeScanErrorCorrector"";
    }

    function openFindBarcodeOperationHistory() {
        window.location.href = ""FindBarcodeOperationHistory"";
    }

    function disableFunctionKeys(e) {
        var functionKeys = new Array(112, 113, 114, 115, 117, 118, 119, 120, 121);
        if (functionKeys.indexOf(e.keyCode) > -1 || functionKeys.indexOf(e.which) > -1) {
            e.preventDefault();
        }
    }

    function checkLo");
            WriteLiteral(@"ginStatus() {
        //console.log('Called checkLoginStatus method. IsSignedIn = ' + sessionStorage.getItem(""IsSignedIn""));
        if (sessionStorage.getItem(""UserId"") != """") {
            $(""#toolBarLoggedinUser"").html(sessionStorage.getItem(""UserId""));
        } else {
            $(""#toolBarLoggedinUser"").html("""");
        }
        if (sessionStorage.getItem(""IsSignedIn"") == Answer.Null || sessionStorage.getItem(""IsSignedIn"") == Answer.No) {
            $(""#loginBar"").hide();
            window.location.href = ""Login"";
        } else {
            $(""#loginBar"").show();
        }
    }

    function initializeFunctionKeys() {

    }

    function initializeDivisons() {

    }
    
    function selectScanMode(n) {
        scanMode = n;
        focusBarcodeInput();
    }

    function initializeControlEvents() {
        refreshmsgBoxHeaderStyle();

        $(""#barcodeBcodeTxt"").keydown(function (e) {
            if (e.keyCode == 13) {
              
                if ($(");
            WriteLiteral(@"'#barcodeBcodeTxt').val() != """"){
                    initiateScan();
                    return;         
                }   
            }
        });

        //Print Window Tables
        //if($(""#read-only-request-items-grid"").html() == '') {
            $(""#read-only-request-items-grid"").kendoGrid({
                dataSource: {
                    schema: {
                        model: {
                            id: ""BagBarcode"",
                            fields: {
                                ColorCode: { type: ""number"", editable: false },
                                Key: { type: ""string"", editable: false },
                                Seq: { type: ""number"", editable: false },
                                TxnMode: { type: ""number"", editable: false },
                                L1id: { type: ""number"", editable: false },
                                Style: { type: ""string"", editable: false },
                                L2id: { type: ""number"", edita");
            WriteLiteral(@"ble: false },
                                Shedule: { type: ""string"", editable: false },
                                PO: { type: ""string"", editable: false },
                                ZFeature: { type: ""string"", editable: false },
                                L4id: { type: ""number"", editable: false },
                                Color: { type: ""string"", editable: false },
                                BagBarcode: { type: ""string"", editable: false },
                                Quantity: { type: ""number"", editable: false },
                                Action: { type: ""number"", editable: false },
                                Location: { type: ""string"", editable: false },
                            },
                        }
                    },
                    batch: true,
                    group: {
                        field: ""Key"", aggregates: [
                            { field: ""Style"", aggregate: ""count"" },
                            { fiel");
            WriteLiteral(@"d: ""Quantity"", aggregate: ""sum""},
                            { field: ""Key"", aggregate: ""count"" }
                        ]
                    },
                    aggregate: [ { field: ""Style"", aggregate: ""count"" },
                                    { field: ""Quantity"", aggregate: ""sum"" },
                                    { field: ""Key"", aggregate: ""min"" },
                                    { field: ""Key"", aggregate: ""max"" }]
                },
                scrollable: false,      
                sortable: false,
                filterable: false,
                columns:[
                            {field:""Key"",width:""125px"", hidden: true , aggregates: [""count""], groupHeaderTemplate: ""#= value # (Count: #= count#)"" },
                            {title:""Seq"",field:""Seq"",width:""145px"",hidden:true},
                            {title:""TxnMode"",field:""TxnMode"",width:""145px"",hidden:true},
                            {field:""ColorCode"",width:""125px"", hidden: true},
              ");
            WriteLiteral(@"              {title:""Style"",field:""Style"",width:""125px"", aggregates: [""count""]},
                            {title:""Shedule"",field:""Shedule"",width:""125px""},
                            {title:""PO"",field:""PO"",width:""125px""},
                            {title:""Z-Feature"",field:""ZFeature"",width:""145px""},
                            {title:""Color Name"",field:""Color"",width:""205px""},
                            {title:""Barcode"",field:""BagBarcode"",width:""145px"", footerTemplate: ""Total"", groupFooterTemplate: ""Sub Total""},
                            {title:""Quantity"",field:""Quantity"",width:""105px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                            {title:""GRN Status"",field:""Action"",width:""200px"",encoded:true, template: ""#if (Action == '0' ) {# <div class='mb-2 mr-2 badge badge-primary grn-status-badge'>Confirmation Pending"" + 
                            ""</div> #} else if (Action == '1'){ # <div class='mb-2 mr-2 badge badge-secondary grn-status-badg");
            WriteLiteral(@"e'>Confirmed"" +
                            ""</div> #}#"" },
                            {title:""Location"",field:""Location"",width:""100px""},
                        ],
            });
        //}

        //if($(""#request-status"").html() == '') {
            $(""#request-status"").kendoGrid({
                dataSource: {
                    schema: {
                        model: {
                            fields: {
                                Stage: { type: ""string"", editable: false },
                                Status: { type: ""string"", editable: false },
                                Comments: { type: ""string"", editable: false },
                                Completed_By: { type: ""string"", editable: false },
                                Completed_On: { type: ""date"", editable: false },
                            },
                        }
                    },
                    batch: true,
                },
                scrollable: true,        
         ");
            WriteLiteral(@"       sortable: false,
                filterable: false,
                columns:[
                            {title:""Stage"",field:""Stage"",width:""145px""},
                            {title:""Status"",field:""Status"",width:""105px"",encoded:true},
                            {title:""Comments"",field:""Comments"",width:""105px"",encoded:true, hidden:true},
                            {title:""Completed_By"",field:""Completed_By"",width:""105px""},
                            {title:""Completed_On"",field:""Completed_On"",width:""105px"",encoded:true, format:""{0:dd-MM-yyyy hh:mm:ss}"",filterable:{operators:{date:{gte:""From"",lte:""To""}}}},
                        ],
            });
        //}

        //if($(""#expand-items-grid"").html() == '') {
            $(""#expand-items-grid"").kendoGrid({
                dataSource: {
                    schema: {
                        model: {
                            fields: {
                                O: { type: ""string"", editable: false },
                     ");
            WriteLiteral(@"           Barcode: { type: ""string"", editable: false },
                                BagBarcode: { type: ""string"", editable: false },
                                TravelBarcode: { type: ""string"", editable: false },
                                Qty01: { type: ""number"", editable: false },
                                Qty02: { type: ""number"", editable: false },
                                Qty03: { type: ""number"", editable: false },
                                Qty01Ns: { type: ""number"", editable: false },
                            },
                        }
                    },
                    batch: true,
                    group: {
                            field: ""O"", aggregates: [
                                { field: ""Qty01"", aggregate: ""sum""},
                                { field: ""Qty02"", aggregate: ""sum""},
                                { field: ""Qty03"", aggregate: ""sum""},
                                { field: ""Qty01Ns"", aggregate: ""sum""},
     ");
            WriteLiteral(@"                       ]
                            },
                    aggregate: [ { field: ""Qty01"", aggregate: ""sum""},
                                { field: ""Qty02"", aggregate: ""sum""},
                                { field: ""Qty03"", aggregate: ""sum""},
                                { field: ""Qty01Ns"", aggregate: ""sum""},]
                },
                scrollable: true,        
                sortable: true,
                filterable: true,
                columns:[
                            {field:""O"",title:"""",width:""200px"",encoded:true, hidden:true},
                            {field:""TravelBarcode"",title:""Travel Barcode"",width:""200px"",encoded:true},
                            {field:""BagBarcode"",title:""Bag Barcode"",width:""200px"",encoded:true},
                            {field:""Barcode"",title:""Garment Barcode"",width:""200px""},
                            {field:""Qty01"",title:""Good"",width:""75px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#");
            WriteLiteral(@"""},
                            {field:""Qty02"",title:""Scrap"",width:""75px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                            {field:""Qty03"",title:""Rework"",width:""75px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                            {field:""Qty01Ns"",title:""Production"",width:""75px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                        ],
            });
        //}

        //More Garment Barcode controller
        $(""#barcodeSearchWindowBarcodeTxt"").keyup(function () {

        });

        //barcode more garment
        barcodeSearchGrid = $(""#barcodeSearchGrid"").kendoGrid({
            autoBind: false,
            dataSource: {
                    schema: {
                        model: {
                            fields: {
                                Barcode: { type: ""string"" }
                            }
                       ");
            WriteLiteral(@" }
                    },
                    type: ""json""
                },
                height: ""90%"",
                width: ""90%"",
                scrollable: true,
                change: onChangeBarcode,
                navigatable: true,
                selectable: ""multiple cell"",
                dataBound: function (e) {
                    var cell = this.tbody.find(""tr[role='row'] td:first"");
                    this.current(cell);
                },
                columns: [
                    { field: ""Barcode"", title: ""Barcode No"", width: ""30%"" }
                ]
            }).data(""kendoGrid"");
    
            
            barcodeSearchWindow = $(""#barcodeSearchWindow"").kendoWindow({
                width: ""80%"",
                height: ""40%"",
                title: ""Barcode Search"",
                actions: [""Close""],
                modal: true,
                resizable: false,
                draggable: false,
                pinned: true,
             ");
            WriteLiteral(@"   close: onBarcodeSearchClose
            }).data(""kendoWindow"");

            barcodeSearchWindow.wrapper.find('.k-window-titlebar').css({
                'background-color': 'black',
                'font-size': '18px',
                'color': 'white'
            });

            var arrows = [38, 40];
            barcodeSearchGrid.table.on(""keydown"", function (e) {
                if (arrows.indexOf(e.keyCode) >= 0) {
                    setTimeout(function () {
                        barcodeSearchGrid.select($(""#rowSelection_active_cell"").closest(""tr""));
                    }, 10);
                }
            });

            barcodeSearchWindow.one(""activate"", function () {
                barcodeSearchGrid.resize();
            });

        //travel tag more garment
        travelTagSearchGrid = $(""#travelTagSearchGrid"").kendoGrid({
            autoBind: false,
            dataSource: {
                    schema: {
                        model: {
                      ");
            WriteLiteral(@"      fields: {
                                Barcode: { type: ""string"" }
                            }
                        }
                    },
                    type: ""json""
                },
                height: ""90%"",
                width: ""90%"",
                scrollable: true,
                change: onChangeTravelTag,
                navigatable: true,
                selectable: ""multiple cell"",
                dataBound: function (e) {
                    var cell = this.tbody.find(""tr[role='row'] td:first"");
                    this.current(cell);
                },
                columns: [
                    { field: ""Barcode"", title: ""Travel Tag"", width: ""30%"" }
                ]
            }).data(""kendoGrid"");
    
            
            travelTagSearchWindow = $(""#travelTagSearchWindow"").kendoWindow({
                width: ""80%"",
                height: ""40%"",
                title: ""Travel Tag Search"",
                actions: [""Close""],
   ");
            WriteLiteral(@"             modal: true,
                resizable: false,
                draggable: false,
                pinned: true,
                close: onTravelTagSearchClose
            }).data(""kendoWindow"");

            travelTagSearchWindow.wrapper.find('.k-window-titlebar').css({
                'background-color': 'black',
                'font-size': '18px',
                'color': 'white'
            });

            var arrows = [38, 40];
            travelTagSearchGrid.table.on(""keydown"", function (e) {
                if (arrows.indexOf(e.keyCode) >= 0) {
                    setTimeout(function () {
                        travelTagSearchGrid.select($(""#rowSelection_active_cell"").closest(""tr""));
                    }, 10);
                }
            });

            travelTagSearchWindow.one(""activate"", function () {
                travelTagSearchGrid.resize();
            });

        //bag tag more garment
        bagTagSearchGrid = $(""#bagTagSearchGrid"").kendoGrid({
");
            WriteLiteral(@"            autoBind: false,
            dataSource: {
                    schema: {
                        model: {
                            fields: {
                                Barcode: { type: ""string"" }
                            }
                        }
                    },
                    type: ""json""
                },
                height: ""90%"",
                width: ""90%"",
                scrollable: true,
                change: onChangeBagTag,
                navigatable: true,
                selectable: ""multiple cell"",
                dataBound: function (e) {
                    var cell = this.tbody.find(""tr[role='row'] td:first"");
                    this.current(cell);
                },
                columns: [
                    { field: ""Barcode"", title: ""Bag Tag"", width: ""30%"" }
                ]
            }).data(""kendoGrid"");
    
            
            bagTagSearchWindow = $(""#bagTagSearchWindow"").kendoWindow({
                ");
            WriteLiteral(@"width: ""80%"",
                height: ""40%"",
                title: ""Bag Tag Search"",
                actions: [""Close""],
                modal: true,
                resizable: false,
                draggable: false,
                pinned: true,
                close: onBagTagSearchClose
            }).data(""kendoWindow"");

            bagTagSearchWindow.wrapper.find('.k-window-titlebar').css({
                'background-color': 'black',
                'font-size': '18px',
                'color': 'white'
            });

            var arrows = [38, 40];
            bagTagSearchGrid.table.on(""keydown"", function (e) {
                if (arrows.indexOf(e.keyCode) >= 0) {
                    setTimeout(function () {
                        bagTagSearchGrid.select($(""#rowSelection_active_cell"").closest(""tr""));
                    }, 10);
                }
            });

            bagTagSearchWindow.one(""activate"", function () {
                bagTagSearchGrid.resize();
   ");
            WriteLiteral(@"         });
    }

    function selectdetailMode(n) {
        if (n == 1 ) {
            garamentDetails = !garamentDetails;
        } else if (n == 2 ) {
            bagtagDetails = !bagtagDetails;
        } else if (n == 3 ) {
            traveltagDetails = !traveltagDetails;
        } else if (n == 4 ) {
            buddytagDetails = !buddytagDetails;
        }
        focusBarcodeInput();
    }

    function initiateScan() {
        resetControls();
        //console.log(garamentDetails,bagtagDetails,traveltagDetails,buddytagDetails);
        var BarcodeNo = $(""#barcodeBcodeTxt"").val()
        if(scanMode == 0) {
            if(garamentDetails) {
                getGarmentDgetGarmentDetailsbyGarmentBarcodeetails(BarcodeNo);
            }
            if(bagtagDetails) {
                getBagTagDetailsbyGarmentBarcode(BarcodeNo);
            }
            if(traveltagDetails) {
                getTravelTagDetailsbyGarmentBarcode(BarcodeNo);
            }
            if(buddyt");
            WriteLiteral(@"agDetails) {

            }
        } else if(scanMode == 1) {
            if(garamentDetails) {
                getFirstGarmentBarcodeDetailsbyBarcode(BarcodeNo)
            }
            if(bagtagDetails) {
                getBagTagDetailsbyBagBarcode(BarcodeNo);
            }
            if(traveltagDetails) {
                getFirstTravelTagDetailsbyBagBarcode(BarcodeNo);
            }
            if(buddytagDetails) {

            }
        } else if(scanMode == 2) {
            if(garamentDetails) {
                getFirstGarmentBarcodeDetailsbyTravelBarcode(BarcodeNo);
            }
            if(bagtagDetails) {
                getFirstBagTagBarcodeDetailsbyTravelBarcode(BarcodeNo);
            }
            if(traveltagDetails) {
                getTravelTagDetailsbyTravelBarcode(BarcodeNo);
            }
            if(buddytagDetails) {

            }
        } else if(scanMode == 3) {
            buddytagMode();
        }

        focusBarcodeInput();
    }

");
            WriteLiteral(@"    //Garment Mode
    //Barcode Garment details by garment barcode
    function getGarmentDgetGarmentDetailsbyGarmentBarcodeetails(garmentBarcodeNo) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(garmentBarcodeNo != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(23886, 14, false);
#line 583 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(23900, 1254, true);
            WriteLiteral(@"/Lookup/GetStyleScheduleByBarcodeforBarcodeDetail?Barcode=' + garmentBarcodeNo,
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if (data != null) {
                        scannedBarcode = data;

                        $('#scheduleDataLabel').html(scannedBarcode.scheduleNo);
                        $('#poDataLabel').html(scannedBarcode.poNo);
                        $('#dataLabelzFeature').html(scannedBarcode.zfeature);
                        $('#sizeDataLabel').html(scannedBarcode.sizeDesc);
                        $('#bcColorDataLabel').html(scannedBarcode.colorDesc);
                        $('#ShadeLotPatt').html");
            WriteLiteral("(scannedBarcode.lotNo + \"/\" + scannedBarcode.pattern);  \r\n\r\n                        $(\'#lastBarcodeDataLabel\').html(garmentBarcodeNo);\r\n                        \r\n                        $.ajax({\r\n                            url: \'");
            EndContext();
            BeginContext(25155, 14, false);
#line 608 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(25169, 7181, true);
            WriteLiteral(@"/Lookup/GetOperationDetailsbyGarmentBarcode?barcode=' + garmentBarcodeNo,
                            type: 'GET',
                            dataType: 'json',
                            async: false,
                            contentType: 'application/json; charset=utf-8',
                            beforeSend: function () {
                                $(""#ajaxBusy"").show();
                            },
                            complete: function () {
                                $(""#ajaxBusy"").hide();
                            },
                            success: function (opdata) {
                                //console.log(opdata)
                                if (opdata != null) {
                                    var tabled = """";
                                    $.each(opdata, function (id, attribute) {
                                        tabled +=   '<td id=""op' + id + '"">' +
                                                        '<table style=""marg");
            WriteLiteral(@"in-right: 9px;"" id=""optable' + id + '"">' +
                                                            '<tbody id=""optbody' + id + '"">' +
                                                                '<tr id=""optr' + id + '"">' +
                                                                    '<td class="""" style=""text-align: center;"" id=""departmen' + attribute.department + '"">' + 
                                                                        '<label id=""' + (attribute.department) + '"" class=""operation-label"">' + attribute.department + '</label>' +
                                                                    '</td>' +
                                                                '<tr>' +
                                                                '</tr>' +
                                                                    '<td class="""" style=""text-align: center;"" id=""txntime' + attribute.transaction_Date_and_Time + '"">' + 
                                                  ");
            WriteLiteral(@"                      '<label id=""' + (attribute.transaction_Date_and_Time) + '"" class=""txntime-label"">' + formatDate(attribute.transaction_Date_and_Time) + '</label>' +
                                                                    '</td>' +
                                                                '<tr>' +
                                                                '</tr>' +
                                                                    '<td class="""" style=""text-align: center;"">' + 
                                                                        '<label class=""garment-qty-label"" style=""background-color: #43a047;"">' + attribute.manufacturing_Qty + '</label>' +
                                                                        '<label class=""garment-qty-label"" style=""background-color: #ffc107;"">' + attribute.qty_Scrap + '</label>' +
                                                                        '<label class=""garment-qty-label"" style=""background-color: #f44336;");
            WriteLiteral(@""">' + attribute.qty_Report + '</label>' +
                                                                    '</td>' +
                                                                '</tr>' +
                                                            '<tbody>' +
                                                        '</table>' +
                                                    '</td>'
                                    });

                                    var div =   '<div class=""row roundCornerGroupBox"" style=""margin-top: 9px; margin-left: -12px; margin-right: -50px;"">' +
                                                    '<div class=""row"" style=""overflow: auto;"" >' +
                                                        '<div style=""margin-left: 6px; margin-bottom: 6px;"">' +
                                                            '<table style="""">' +
                                                                '<tbody>' +
                                                   ");
            WriteLiteral(@"                 '<tr>' +
                                                                        tabled +
                                                                    '</tr>' +
                                                                '</tbody>' +
                                                            '</table>' +
                                                        '</div>' +
                                                    '</div>' +
                                                '</div>'
                                    
                                    $(""#operationStatus"").html(div);

                                    EnableControllers();
                                }
                                else 
                                {
                                    msgBox.show('මෙම බාර්කෝඩ් අගය වලංගු නැත.', 'This barcode is not valid.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                                        scannedBarco");
            WriteLiteral(@"de = null;
                                        EnableControllers();
                                    });
                                
                                }
                        
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                                errorbeforestauscomplete = errorbeforestauscomplete + ' ' + 'Get Shedulle by Barcode API Error.'
                                sacanComplete = false;
                                EnableControllers();
                            }
                        });
                    }
                    else 
                    {
                        msgBox.show('මෙම බාර්කෝඩ් අගය වලංගු නැත.', 'This barcode is not valid.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                            scannedBarcode = null;
                            EnableControlle");
            WriteLiteral(@"rs();
                        });
                       
                    }
            
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete + ' ' + 'Get Shedulle by Barcode API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        } else {
            msgBox.show('ඇතුලත් කළ තීරු කේතය හිස් ය.', 'The entered barcode is empty.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                scannedBarcode = null;
                EnableControllers();
            });
        }     
    }

    //Bag tag details by garment Barcode
    function getBagTagDetailsbyGarmentBarcode (garmentBarcodeNo) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(garmentBarcodeNo != """") {
            $.ajax({
         ");
            WriteLiteral("       url: \'");
            EndContext();
            BeginContext(32351, 14, false);
#line 716 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(32365, 5920, true);
            WriteLiteral(@"/Lookup/GetBagTagDetailsbyGarmentBarcode?Barcode=' + garmentBarcodeNo + '&OperationCode=151',
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if (data != null) {
                        scannedBagTag = data;
                        //console.log(scannedBagTag);
                        $(""#bagStyleLabel"").html(scannedBagTag.style);
                        $(""#bagSheduleLabel"").html(scannedBagTag.shedule);
                        $(""#bagColorLabel"").html(scannedBagTag.color);
                        $(""#bagQuantitiy"").html(scannedBagTag.qty01);
                        $(""#bagCreatedTimeLabel"").html(formatDate(scannedBagTa");
            WriteLiteral(@"g.createdDateTime) + "" ("" + scannedBagTag.wfdepinstId + "")"");

                        $('#lastBagTagDataLabel').html(scannedBagTag.bagBarCodeNo);
                        
                        $(""#bagqty01"").html(scannedBagTag.qty01 == """" ? 0 : scannedBagTag.qty01);
                        $(""#bagqty02"").html(scannedBagTag.qty02 == """" ? 0 : scannedBagTag.qty02);
                        $(""#bagqty03"").html(scannedBagTag.qty03 == """" ? 0 : scannedBagTag.qty03);

                        $(""#bagqty01ns"").html(scannedBagTag.qty01NS == """" ? 0 : scannedBagTag.qty01NS);
                        $(""#bagqty02ns"").html(scannedBagTag.qty02NS == """" ? 0 : scannedBagTag.qty02NS);
                        $(""#bagqty03ns"").html(scannedBagTag.qty03NS == """" ? 0 : scannedBagTag.qty03NS);
                        
                        if(scannedBagTag.bagStatus == 0) {
                            $(""#bagStatus"").html('Ready to dispatch');
                            $(""#bagGatepassNumber"").html('Pending');
      ");
            WriteLiteral(@"                      $(""#bagGatepassCreatedby"").html('.');
                            $(""#bagLocation"").html('Factory (' + scannedBagTag.wfIdBag + ')');
                        } else if(scannedBagTag.bagStatus == 1) {
                            $(""#bagStatus"").html('Gate pass created');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedDateTime);
                            $(""#bagLocation"").html('Factory (' + scannedBagTag.wfIdBag + ')');
                        }
                         else if(scannedBagTag.bagStatus == 2) {
                            $(""#bagStatus"").html('Approved to dispatch');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html('Factory (' + scannedBagTag.wfIdBag + ')');
      ");
            WriteLiteral(@"                  }
                         else if(scannedBagTag.bagStatus == 3) {
                            $(""#bagStatus"").html('Security passed');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html('In transit (' + scannedBagTag.wfIdBag + ')');
                        }
                         else if(scannedBagTag.bagStatus == 4) {
                            $(""#bagStatus"").html('Security received');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html('Washing Plant');
                        } else if(scannedBagTag.bagStatus == 5) {
                            $(""#bagStatus"").html('Received');
                            $(""#bagGatepassNumb");
            WriteLiteral(@"er"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html(scannedBagTag.locationCode);
                        } else if(scannedBagTag.bagStatus == 6) {
                            $(""#bagStatus"").html('Travel tag created');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html(scannedBagTag.locationCode);
                        }

                        EnableControllers();
                    }
                    else 
                    {
                        msgBox.show('මෙම ඇඟලුම් තීරු කේතය සඳහා බෑගයක් හමු නොවීය.', 'No bag were found for this garment barcode.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                            scannedBarcode = null;
                           ");
            WriteLiteral(@" EnableControllers();
                        });
                       
                    }
            
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete + ' ' + 'Get Shedulle by Barcode API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        }    
    }

    //Travel tag details by garment Barcode
    function getTravelTagDetailsbyGarmentBarcode(garmentBarcodeNo) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(garmentBarcodeNo != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(38286, 14, false);
#line 815 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(38300, 869, true);
            WriteLiteral(@"/Lookup/GetTravelTagDetailsbyGarmentBarcode?Barcode=' + garmentBarcodeNo + '&OperationCode=151',
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if (data != null) {
                        scannedTravelTag = data;
                        //console.log(scannedTravelTag);
                        var scannedTravelTagBreakdown = null;
                        var txnStatus = 0;
                        
                        $.ajax({
                                url: '");
            EndContext();
            BeginContext(39170, 14, false);
#line 834 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(39184, 13155, true);
            WriteLiteral(@"/Lookup/GetTravelBarcodeDetailsbyTravelTag?travelcode=' + scannedTravelTag.travelBarCodeNo,
                                type: 'GET',
                                dataType: 'json',
                                async: false,
                                contentType: 'application/json',
                                beforeSend: function () {
                                    $(""#ajaxBusy"").show();
                                },
                                complete: function () {
                                    $(""#ajaxBusy"").hide();
                                },  
                                success: function (response) {
                                    //console.log(response);
                                    if(response.length) {
                                        scannedTravelTagBreakdown = response;
                                        var usList = [];
                                        var qty01 = 0;
                                 ");
            WriteLiteral(@"       var qty02 = 0;
                                        var qty03 = 0;
                                        var qty01ns = 0;
                                        var qty02ns = 0;
                                        var qty03ns = 0;

                                        
                                        $.each(response, function (index, elements) {
                                            var object = {
                                                Key: elements.styleDesc + "" | "" + elements.scheduleDesc + "" | "" + elements.colorDesc,
                                                Seq: elements.seq,
                                                TxnMode: elements.txnMode,
                                                Style: elements.styleDesc,
                                                Shedule: elements.scheduleDesc,
                                                PO: elements.poNo,
                                                ZFeature: elements.zfeature,");
            WriteLiteral(@"
                                                DeliveryDate: formatDate(elements.deliveryDate),
                                                Color: elements.colorDesc,
                                                Quantity: elements.qty01,
                                            }

                                            txnStatus = elements.txnStatus > txnStatus ? elements.txnStatus : txnStatus;

                                            qty01 = parseInt(elements.qty01) + qty01;
                                            qty02 = parseInt(elements.qty02) + qty02;
                                            qty03 = parseInt(elements.qty03) + qty03;
                                            qty01ns = parseInt(elements.qty01Ns) + qty01ns;
                                            qty02ns = parseInt(elements.qty02Ns) + qty02ns;
                                            qty03ns = parseInt(elements.qty03Ns) + qty03ns;

                                            usList[0] == u");
            WriteLiteral(@"ndefined ? usList[0] = elements.scheduleDesc : (!usList[0].includes(elements.scheduleDesc) ? (usList[0] = (usList[0] + "" | "" + elements.scheduleDesc)) : usList[0] = usList[0]);

                                            //PO
                                            usList[1] == undefined ? usList[1] = elements.poNo : (!usList[1].includes(elements.poNo) ? (usList[1] = (usList[1] + "" | "" + elements.poNo)) : usList[1] = usList[1]);
                                            //Z Feature
                                            usList[2] == undefined ? usList[2] = elements.zfeature : (!usList[2].includes(elements.zfeature) ? (usList[2] = (usList[2] + "" | "" + elements.zfeature)) : usList[2] = usList[2]);
                                            //Color
                                            usList[3] == undefined ? usList[3] = elements.colorDesc : (!usList[3].includes(elements.colorDesc) ? (usList[3] = (usList[3] + "" | "" + elements.colorDesc)) : usList[3] = usList[3]);
                     ");
            WriteLiteral(@"                       //Style
                                            usList[4] == undefined ? usList[4] = elements.styleDesc : (!usList[4].includes(elements.styleDesc) ? (usList[4] = (usList[4] + "" | "" + elements.styleDesc)) : usList[4] = usList[4]);
                                            //Delivery Date
                                            usList[5] == undefined ? usList[5] = formatDate(elements.deliveryDate) : (!usList[5].includes(formatDate(elements.deliveryDate)) ? (usList[5] = (usList[5] + "" | "" + formatDate(elements.deliveryDate))) : usList[5] = usList[5]);
                                            //Week
                                            usList[6] == undefined ? usList[6] = getNumberOfWeek(elements.deliveryDate).toString() : (!usList[6].includes(getNumberOfWeek(elements.deliveryDate).toString()) ? (usList[6] = (usList[6] + "" | "" + getNumberOfWeek(elements.deliveryDate).toString())) : usList[6] = usList[6]);

                                            //Dispatch no");
            WriteLiteral(@"
                                            usList[7] == undefined ? usList[7] = elements.controlId : (!usList[7].includes(elements.controlId) ? (usList[7] = (usList[7] + "" | "" + elements.controlId)) : usList[7] = usList[7]);
                                            //Dispatch created by
                                            usList[8] == undefined ? usList[8] = elements.controlCeatedBy : (!usList[8].includes(elements.controlCeatedBy) ? (usList[8] = (usList[8] + "" | "" + elements.controlCeatedBy)) : usList[8] = usList[8]);
                                            //Dispatch location
                                            elements.warLocCode != null ? usList[7] == undefined ? usList[9] = elements.warLocCode : (!usList[9].includes(elements.warLocCode) ? (usList[9] = (usList[9] + "" | "" + elements.warLocCode)) : usList[7] = usList[9]) : """";

                                        });

                                        //Travel Tag Other Data for Header
                             ");
            WriteLiteral(@"           $(""#travelPoLabel"").html(usList[1]);
                                        $(""#travelDeliveryDateLabel"").html(usList[5]);
                                        $(""#travelSheduleLabel"").html(usList[0]);
                                        $(""#travelWeekLabel"").html(usList[6]);
                                        $(""#travelTrollyNoLabel"").html(scannedTravelTag.trollyNo);
                                        $(""#travelColorLabel"").html(usList[3]);
                                        $(""#travelCreatedTimeLabel"").html(formatDate(scannedTravelTag.createdDateTime) + "" ("" + scannedTravelTag.createdBy + "")"");

                                        $(""#travelqty01"").html(qty01 == """" ? 0 : qty01);
                                        $(""#travelqty02"").html(qty02 == """" ? 0 : qty02);
                                        $(""#travelqty03"").html(qty03 == """" ? 0 : qty03);
                                        $(""#travelqty01ns"").html(qty01ns == """" ? 0 : qty01ns);
           ");
            WriteLiteral(@"                             $(""#travelqty02ns"").html(qty02ns == """" ? 0 : qty02ns);
                                        $(""#travelqty03ns"").html(qty03ns == """" ? 0 : qty03ns);

                                        $('#lastTravelTagDataLabel').html(scannedTravelTag.travelBarCodeNo);
                                        
                                        if(txnStatus == 0) {
                                            $(""#travelStatus"").html('Ready to dispatch');
                                            $(""#travelLocation"").html('Washing Plant (' + scannedTravelTag.wfId + ')');
                                            $(""#travelGatepassNumber"").html('Pending');
                                            $(""#travelGatepassCreatedby"").html('.');
                                        } else if(txnStatus == 1) {
                                            $(""#travelStatus"").html('Gate pass created');
                                            $(""#travelLocation"").html('Washing P");
            WriteLiteral(@"lant (' + scannedTravelTag.wfId + ')');
                                            $(""#travelGatepassNumber"").html(usList[7]);
                                            $(""#travelGatepassCreatedby"").html(usList[8]);
                                        }
                                        else if(txnStatus == 2) {
                                            $(""#travelStatus"").html('Approved to dispatch');
                                            $(""#travelLocation"").html('Washing Plant (' + scannedTravelTag.wfId+ ')');
                                            $(""#travelGatepassNumber"").html(usList[7]);
                                            $(""#travelGatepassCreatedby"").html(usList[8]);
                                        }
                                        else if(txnStatus == 3) {
                                            $(""#travelStatus"").html('Security passed');
                                            $(""#travelLocation"").html('In transit (' + scannedTrav");
            WriteLiteral(@"elTag.wfId+ ')');
                                            $(""#travelGatepassNumber"").html(usList[7]);
                                            $(""#travelGatepassCreatedby"").html(usList[8]);
                                        }
                                        else if(txnStatus == 4) {
                                            $(""#travelStatus"").html('Security received');
                                            $(""#travelLocation"").html('Factory (' + scannedTravelTag.wfId + ')');
                                            $(""#travelGatepassNumber"").html(usList[7]);
                                            $(""#travelGatepassCreatedby"").html(usList[8]);
                                        } else if(txnStatus == 5) {
                                            $(""#travelStatus"").html('Received');
                                            $(""#travelLocation"").html(usList[7]);
                                            $(""#travelGatepassNumber"").html(usList[7]);
    ");
            WriteLiteral(@"                                        $(""#travelGatepassCreatedby"").html(usList[8]);
                                        } else if(txnStatus == 6) {
                                            $(""#travelStatus"").html('Production Ready');
                                            $(""#travelLocation"").html(usList[7]);
                                            $(""#travelGatepassNumber"").html('unavailable');
                                            $(""#travelGatepassCreatedby"").html('.');
                                        } else  if(txnStatus > 6) {
                                            $(""#travelStatus"").html('Production');
                                            $(""#travelLocation"").html(scannedTravelTag.travelStatus);
                                            $(""#travelGatepassNumber"").html('unavailable');
                                            $(""#travelGatepassCreatedby"").html('.');
                                        }
                                    }");
            WriteLiteral(@" else {
                                        msgBox.show('මෙම ඇඟලුම් තීරු කේතය සඳහා බෑගයක් හමු නොවීය.', '', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                                            scannedBarcode = null;
                                            EnableControllers();
                                        })
                                    }

                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    formatErrorMessage(jqXHR, errorThrown, ""GenerateTravelBarcode"");
                                    EnableInputs();
                                }
                        });

                        EnableControllers();
                    }
                    else 
                    {
                        msgBox.show('සංචාරක ටැගයේ කණ්ඩායම් දත්ත ලබා ගැනීමට අපොහොසත් විය.', 'Failed to retrieve group data in travel tag.', 'අවවාදයයි / Warning', 'BS12', 'Warning");
            WriteLiteral(@"', function () {
                            scannedBarcode = null;
                            EnableControllers();
                        }); 
                    }
            
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete + ' ' + 'Get Shedulle by Barcode API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        }    
    }

    //BagMode
    //Bag tag detaails by bag barcode
    function getBagTagDetailsbyBagBarcode(bagBarcodeNo) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(bagBarcodeNo != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(52340, 14, false);
#line 1009 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(52354, 5877, true);
            WriteLiteral(@"/Lookup/GetBagTagDetailsbyBagBarcode?Barcode=' + bagBarcodeNo,
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if (data != null) {
                        scannedBagTag = data;
                        //console.log(scannedBagTag);
                        $(""#bagStyleLabel"").html(scannedBagTag.style);
                        $(""#bagSheduleLabel"").html(scannedBagTag.shedule);
                        $(""#bagColorLabel"").html(scannedBagTag.color);
                        $(""#bagQuantitiy"").html(scannedBagTag.qty01);
                        $(""#bagCreatedTimeLabel"").html(formatDate(scannedBagTag.createdDateTime) + "" ("" + sca");
            WriteLiteral(@"nnedBagTag.wfdepinstId + "")"");

                        $('#lastBagTagDataLabel').html(scannedBagTag.bagBarCodeNo);
                        
                        $(""#bagqty01"").html(scannedBagTag.qty01 == """" ? 0 : scannedBagTag.qty01);
                        $(""#bagqty02"").html(scannedBagTag.qty02 == """" ? 0 : scannedBagTag.qty02);
                        $(""#bagqty03"").html(scannedBagTag.qty03 == """" ? 0 : scannedBagTag.qty03);

                        $(""#bagqty01ns"").html(scannedBagTag.qty01NS == """" ? 0 : scannedBagTag.qty01NS);
                        $(""#bagqty02ns"").html(scannedBagTag.qty02NS == """" ? 0 : scannedBagTag.qty02NS);
                        $(""#bagqty03ns"").html(scannedBagTag.qty03NS == """" ? 0 : scannedBagTag.qty03NS);
                        
                        if(scannedBagTag.bagStatus == 0) {
                            $(""#bagStatus"").html('Ready to dispatch');
                            $(""#bagGatepassNumber"").html('Pending');
                            $(""#bagGa");
            WriteLiteral(@"tepassCreatedby"").html('.');
                            $(""#bagLocation"").html('Factory (' + scannedBagTag.wfIdBag + ')');
                        } else if(scannedBagTag.bagStatus == 1) {
                            $(""#bagStatus"").html('Gate pass created');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedDateTime);
                            $(""#bagLocation"").html('Factory (' + scannedBagTag.wfIdBag + ')');
                        }
                         else if(scannedBagTag.bagStatus == 2) {
                            $(""#bagStatus"").html('Approved to dispatch');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html('Factory (' + scannedBagTag.wfIdBag + ')');
                        }
          ");
            WriteLiteral(@"               else if(scannedBagTag.bagStatus == 3) {
                            $(""#bagStatus"").html('Security passed');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html('In transit (' + scannedBagTag.wfIdBag + ')');
                        }
                         else if(scannedBagTag.bagStatus == 4) {
                            $(""#bagStatus"").html('Security received');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html('Washing Plant');
                        } else if(scannedBagTag.bagStatus == 5) {
                            $(""#bagStatus"").html('Received');
                            $(""#bagGatepassNumber"").html(scannedBagTag.control");
            WriteLiteral(@"Id);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html(scannedBagTag.locationCode);
                        } else if(scannedBagTag.bagStatus == 6) {
                            $(""#bagStatus"").html('Travel tag created');
                            $(""#bagGatepassNumber"").html(scannedBagTag.controlId);
                            $(""#bagGatepassCreatedby"").html(scannedBagTag.controlCreatedBy);
                            $(""#bagLocation"").html(scannedBagTag.locationCode);
                        }

                        EnableControllers();
                    }
                    else 
                    {
                        msgBox.show('මෙම ඇඟලුම් තීරු කේතය සඳහා බෑගයක් හමු නොවීය.', 'No bag were found for this garment barcode.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                            scannedBarcode = null;
                            EnableControllers();
        ");
            WriteLiteral(@"                });
                       
                    }
            
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete + ' ' + 'Get Shedulle by Barcode API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        }
    }

    //Barcode Garment details by bag barcode
    function getFirstGarmentBarcodeDetailsbyBarcode(bagbarcode) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(bagbarcode != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(58232, 14, false);
#line 1108 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(58246, 2915, true);
            WriteLiteral(@"/Lookup/GetFirstGarmentBarcodeDetailsbyBarcode?barcode=' + bagbarcode + '&txnmode=1',
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if(data != undefined){
                        if (data.length != 0) {
                            getGarmentDgetGarmentDetailsbyGarmentBarcodeetails(data[0].barCodeNo);
                            if (data.length > 1) {
                                var gridData1 = [];
                                $.each(data, function (index, elements) {
                                    var object = {
                                        Barcode: elements.barCodeNo
                          ");
            WriteLiteral(@"          }
                                    gridData1.push(object);
                                });
                                $(""#barcodeSearchGrid"").data('kendoGrid').dataSource.data(gridData1);
                                
                                $('#moreGarmentTagNoIcon').show();
                                $('#moreGarmentTagNo').show();
                                $('#moreGarmentTagNo').html(data.length + "" codes"");
                            }
                        }
                        else 
                        {
                            msgBox.show('මෙම බාර්කෝඩ් අගය වලංගු නැත.', 'This barcode is not valid.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                                scannedBarcode = null;
                                EnableControllers();
                            });
                        
                        }
                    }
                },
                error: function (jqXHR, textSt");
            WriteLiteral(@"atus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete + ' ' + 'Get Shedulle by Barcode API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        } else {
            msgBox.show('ඇතුලත් කළ තීරු කේතය හිස් ය.', 'The entered barcode is empty.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                scannedBarcode = null;
                EnableControllers();
            });
        }     
    }

    //Travel tag details by garment barcode
    function getFirstTravelTagDetailsbyBagBarcode(bagbarcode) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(bagbarcode != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(61162, 14, false);
#line 1169 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(61176, 2773, true);
            WriteLiteral(@"/Lookup/GetFirstTravelTagBarcodeDetailsbyBarcode?barcode=' + bagbarcode + '&txnmode=1',
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if (data.length != 0) {
                        getTravelTagDetailsbyTravelBarcode(data[0].travelBarCodeNo);
                        if (data.length > 1) {
                            var gridData1 = [];
                            $.each(data, function (index, elements) {
                                var object = {
                                    Barcode: elements.travelBarCodeNo
                                }
                                gridData1.push(object);
        ");
            WriteLiteral(@"                    });
                            $(""#travelTagSearchGrid"").data('kendoGrid').dataSource.data(gridData1);
                            
                            $('#moreTravelTagNoIcon').show();
                            $('#moreTravelTagNo').show();
                            $('#moreTravelTagNo').html(data.length + "" codes"");
                        }
                    }
                    else 
                    {
                        msgBox.show('මෙම බාර්කෝඩ් අගය වලංගු නැත.', 'This barcode is not valid.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                            scannedBarcode = null;
                            EnableControllers();
                        });
                       
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete + ' ");
            WriteLiteral(@"' + 'Get Shedulle by Barcode API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        } else {
            msgBox.show('ඇතුලත් කළ තීරු කේතය හිස් ය.', 'The entered barcode is empty.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                scannedBarcode = null;
                EnableControllers();
            });
        }     
    }

    //Traveltag Mode
    //Travel tag details by travel barcode
    function getTravelTagDetailsbyTravelBarcode(travelBarcode) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(travelBarcode != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(63950, 14, false);
#line 1229 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(63964, 842, true);
            WriteLiteral(@"/Lookup/GetTravelTagDetailsbyTravelBarcode?Barcode=' + travelBarcode,
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if (data != null) {
                        scannedTravelTag = data;
                        //console.log(scannedTravelTag);
                        var scannedTravelTagBreakdown = null;
                        var txnStatus = 0;
                        
                        $.ajax({
                                url: '");
            EndContext();
            BeginContext(64807, 14, false);
#line 1248 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(64821, 13162, true);
            WriteLiteral(@"/Lookup/GetTravelBarcodeDetailsbyTravelTag?travelcode=' + scannedTravelTag.travelBarCodeNo,
                                type: 'GET',
                                dataType: 'json',
                                async: false,
                                contentType: 'application/json',
                                beforeSend: function () {
                                    $(""#ajaxBusy"").show();
                                },
                                complete: function () {
                                    $(""#ajaxBusy"").hide();
                                },  
                                success: function (response) {
                                    //console.log(response);
                                    if(response.length) {
                                        scannedTravelTagBreakdown = response;
                                        var usList = [];
                                        var qty01 = 0;
                                 ");
            WriteLiteral(@"       var qty02 = 0;
                                        var qty03 = 0;
                                        var qty01ns = 0;
                                        var qty02ns = 0;
                                        var qty03ns = 0;

                                        
                                        $.each(response, function (index, elements) {
                                            var object = {
                                                Key: elements.styleDesc + "" | "" + elements.scheduleDesc + "" | "" + elements.colorDesc,
                                                Seq: elements.seq,
                                                TxnMode: elements.txnMode,
                                                Style: elements.styleDesc,
                                                Shedule: elements.scheduleDesc,
                                                PO: elements.poNo,
                                                ZFeature: elements.zfeature,");
            WriteLiteral(@"
                                                DeliveryDate: formatDate(elements.deliveryDate),
                                                Color: elements.colorDesc,
                                                Quantity: elements.qty01,
                                            }

                                            txnStatus = elements.txnStatus > txnStatus ? elements.txnStatus : txnStatus;

                                            qty01 = parseInt(elements.qty01) + qty01;
                                            qty02 = parseInt(elements.qty02) + qty02;
                                            qty03 = parseInt(elements.qty03) + qty03;
                                            qty01ns = parseInt(elements.qty01Ns) + qty01ns;
                                            qty02ns = parseInt(elements.qty02Ns) + qty02ns;
                                            qty03ns = parseInt(elements.qty03Ns) + qty03ns;

                                            usList[0] == u");
            WriteLiteral(@"ndefined ? usList[0] = elements.scheduleDesc : (!usList[0].includes(elements.scheduleDesc) ? (usList[0] = (usList[0] + "" | "" + elements.scheduleDesc)) : usList[0] = usList[0]);

                                            //PO
                                            usList[1] == undefined ? usList[1] = elements.poNo : (!usList[1].includes(elements.poNo) ? (usList[1] = (usList[1] + "" | "" + elements.poNo)) : usList[1] = usList[1]);
                                            //Z Feature
                                            usList[2] == undefined ? usList[2] = elements.zfeature : (!usList[2].includes(elements.zfeature) ? (usList[2] = (usList[2] + "" | "" + elements.zfeature)) : usList[2] = usList[2]);
                                            //Color
                                            usList[3] == undefined ? usList[3] = elements.colorDesc : (!usList[3].includes(elements.colorDesc) ? (usList[3] = (usList[3] + "" | "" + elements.colorDesc)) : usList[3] = usList[3]);
                     ");
            WriteLiteral(@"                       //Style
                                            usList[4] == undefined ? usList[4] = elements.styleDesc : (!usList[4].includes(elements.styleDesc) ? (usList[4] = (usList[4] + "" | "" + elements.styleDesc)) : usList[4] = usList[4]);
                                            //Delivery Date
                                            usList[5] == undefined ? usList[5] = formatDate(elements.deliveryDate) : (!usList[5].includes(formatDate(elements.deliveryDate)) ? (usList[5] = (usList[5] + "" | "" + formatDate(elements.deliveryDate))) : usList[5] = usList[5]);
                                            //Week
                                            usList[6] == undefined ? usList[6] = getNumberOfWeek(elements.deliveryDate).toString() : (!usList[6].includes(getNumberOfWeek(elements.deliveryDate).toString()) ? (usList[6] = (usList[6] + "" | "" + getNumberOfWeek(elements.deliveryDate).toString())) : usList[6] = usList[6]);

                                            //Dispatch no");
            WriteLiteral(@"
                                            usList[7] == undefined ? usList[7] = elements.controlId : (!usList[7].includes(elements.controlId) ? (usList[7] = (usList[7] + "" | "" + elements.controlId)) : usList[7] = usList[7]);
                                            //Dispatch created by
                                            usList[8] == undefined ? usList[8] = elements.controlCeatedBy : (!usList[8].includes(elements.controlCeatedBy) ? (usList[8] = (usList[8] + "" | "" + elements.controlCeatedBy)) : usList[8] = usList[8]);
                                            //Dispatch location
                                            elements.warLocCode != null ? usList[7] == undefined ? usList[9] = elements.warLocCode : (!usList[9].includes(elements.warLocCode) ? (usList[9] = (usList[9] + "" | "" + elements.warLocCode)) : usList[7] = usList[9]) : """";

                                        });

                                        //Travel Tag Other Data for Header
                             ");
            WriteLiteral(@"           $(""#travelPoLabel"").html(usList[1]);
                                        $(""#travelDeliveryDateLabel"").html(usList[5]);
                                        $(""#travelSheduleLabel"").html(usList[0]);
                                        $(""#travelWeekLabel"").html(usList[6]);
                                        $(""#travelTrollyNoLabel"").html(scannedTravelTag.trollyNo);
                                        $(""#travelColorLabel"").html(usList[3]);
                                        $(""#travelCreatedTimeLabel"").html(formatDate(scannedTravelTag.createdDateTime) + "" ("" + scannedTravelTag.createdBy + "")"");

                                        $(""#travelqty01"").html(qty01 == """" ? 0 : qty01);
                                        $(""#travelqty02"").html(qty02 == """" ? 0 : qty02);
                                        $(""#travelqty03"").html(qty03 == """" ? 0 : qty03);
                                        $(""#travelqty01ns"").html(qty01ns == """" ? 0 : qty01ns);
           ");
            WriteLiteral(@"                             $(""#travelqty02ns"").html(qty02ns == """" ? 0 : qty02ns);
                                        $(""#travelqty03ns"").html(qty03ns == """" ? 0 : qty03ns);

                                        $('#lastTravelTagDataLabel').html(scannedTravelTag.travelBarCodeNo);
                                        
                                        if(txnStatus == 0) {
                                            $(""#travelStatus"").html('Ready to dispatch');
                                            $(""#travelLocation"").html('Washing Plant (' + scannedTravelTag.wfId + ')');
                                            $(""#travelGatepassNumber"").html('Pending');
                                            $(""#travelGatepassCreatedby"").html('.');
                                        } else if(txnStatus == 1) {
                                            $(""#travelStatus"").html('Gate pass created');
                                            $(""#travelLocation"").html('Washing P");
            WriteLiteral(@"lant (' + scannedTravelTag.wfId + ')');
                                            $(""#travelGatepassNumber"").html(usList[7]);
                                            $(""#travelGatepassCreatedby"").html(usList[8]);
                                        }
                                        else if(txnStatus == 2) {
                                            $(""#travelStatus"").html('Approved to dispatch');
                                            $(""#travelLocation"").html('Washing Plant (' + scannedTravelTag.wfId+ ')');
                                            $(""#travelGatepassNumber"").html(usList[7]);
                                            $(""#travelGatepassCreatedby"").html(usList[8]);
                                        }
                                        else if(txnStatus == 3) {
                                            $(""#travelStatus"").html('Security passed');
                                            $(""#travelLocation"").html('In transit (' + scannedTrav");
            WriteLiteral(@"elTag.wfId+ ')');
                                            $(""#travelGatepassNumber"").html(usList[7]);
                                            $(""#travelGatepassCreatedby"").html(usList[8]);
                                        }
                                        else if(txnStatus == 4) {
                                            $(""#travelStatus"").html('Security received');
                                            $(""#travelLocation"").html('Factory (' + scannedTravelTag.wfId + ')');
                                            $(""#travelGatepassNumber"").html(usList[7]);
                                            $(""#travelGatepassCreatedby"").html(usList[8]);
                                        } else if(txnStatus == 5) {
                                            $(""#travelStatus"").html('Received');
                                            $(""#travelLocation"").html(usList[7]);
                                            $(""#travelGatepassNumber"").html(usList[7]);
    ");
            WriteLiteral(@"                                        $(""#travelGatepassCreatedby"").html(usList[8]);
                                        } else if(txnStatus == 6) {
                                            $(""#travelStatus"").html('Production Ready');
                                            $(""#travelLocation"").html(usList[7]);
                                            $(""#travelGatepassNumber"").html('unavailable');
                                            $(""#travelGatepassCreatedby"").html('.');
                                        } else  if(txnStatus > 6) {
                                            $(""#travelStatus"").html('Production');
                                            $(""#travelLocation"").html(scannedTravelTag.travelStatus);
                                            $(""#travelGatepassNumber"").html('unavailable');
                                            $(""#travelGatepassCreatedby"").html('.');
                                        }
                                    }");
            WriteLiteral(@" else {
                                        msgBox.show('මෙම ඇඟලුම් තීරු කේතය සඳහා බෑගයක් හමු නොවීය.', '', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                                            scannedBarcode = null;
                                            EnableControllers();
                                        })
                                    }

                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    formatErrorMessage(jqXHR, errorThrown, ""GenerateTravelBarcode"");
                                    EnableInputs();
                                }
                        });

                        EnableControllers();
                    }
                    else 
                    {
                        msgBox.show('සංචාරක ටැගයේ කණ්ඩායම් දත්ත ලබා ගැනීමට අපොහොසත් විය.', 'Failed to retrieve group data in travel tag.', 'අවවාදයයි / Warning', 'BS12', 'Warning");
            WriteLiteral(@"', function () {
                            scannedBarcode = null;
                            EnableControllers();
                        }); 
                    }
            
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete + ' ' + 'Get Shedulle by Barcode API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        }    
    }

    //Barcode Garment details by travel barcode
    function getFirstGarmentBarcodeDetailsbyTravelBarcode(bagbarcode) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(bagbarcode != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(77984, 14, false);
#line 1422 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(77998, 2762, true);
            WriteLiteral(@"/Lookup/GetFirstGarmentBarcodeDetailsbyBarcode?barcode=' + bagbarcode + '&txnmode=2',
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if (data.length != 0) {
                        getGarmentDgetGarmentDetailsbyGarmentBarcodeetails(data[0].barCodeNo);
                        if (data.length > 1) {
                            var gridData1 = [];
                            $.each(data, function (index, elements) {
                                var object = {
                                    Barcode: elements.barCodeNo
                                }
                                gridData1.push(object);
      ");
            WriteLiteral(@"                      });
                            $(""#barcodeSearchGrid"").data('kendoGrid').dataSource.data(gridData1);
                            
                            $('#moreGarmentTagNoIcon').show();
                            $('#moreGarmentTagNo').show();
                            $('#moreGarmentTagNo').html(data.length + "" codes"");
                        }
                    }
                    else 
                    {
                        msgBox.show('මෙම බාර්කෝඩ් අගය වලංගු නැත.', 'This barcode is not valid.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                            scannedBarcode = null;
                            EnableControllers();
                        });
                       
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete +");
            WriteLiteral(@" ' ' + 'Get Shedulle by Barcode API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        } else {
            msgBox.show('ඇතුලත් කළ තීරු කේතය හිස් ය.', 'The entered barcode is empty.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                scannedBarcode = null;
                EnableControllers();
            });
        }     
    }

    //Bag Tag Garment details by travel barcode
    function getFirstBagTagBarcodeDetailsbyTravelBarcode(bagbarcode) {
        DisableControllers();
        refreshmsgBoxHeaderStyle();
        if(bagbarcode != """") {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(80761, 14, false);
#line 1481 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(80775, 8409, true);
            WriteLiteral(@"/Lookup/GetFirstBagTagBarcodeDetailsbyBarcode?barcode=' + bagbarcode + '&txnmode=2',
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json; charset=utf-8',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (data) {
                    if (data.length != 0) {
                        getBagTagDetailsbyBagBarcode(data[0].bagBarCodeNo);
                        if (data.length > 1) {
                            var gridData1 = [];
                            $.each(data, function (index, elements) {
                                var object = {
                                    Barcode: elements.bagBarCodeNo
                                }
                                gridData1.push(object);
                       ");
            WriteLiteral(@"     });
                            $(""#bagTagSearchGrid"").data('kendoGrid').dataSource.data(gridData1);
                            
                            $('#moreBagTagNoIcon').show();
                            $('#moreBagTagNo').show();
                            $('#moreBagTagNo').html(data.length + "" codes"");
                        }
                    }
                    else 
                    {
                        msgBox.show('මෙම බාර්කෝඩ් අගය වලංගු නැත.', 'This barcode is not valid.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                            scannedBarcode = null;
                            EnableControllers();
                        });
                       
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Menu"");
                    errorbeforestauscomplete = errorbeforestauscomplete + ' ' + 'Get Shedulle by Barcod");
            WriteLiteral(@"e API Error.'
                    sacanComplete = false;
                    EnableControllers();
                }
            });
        } else {
            msgBox.show('ඇතුලත් කළ තීරු කේතය හිස් ය.', 'The entered barcode is empty.', 'අවවාදයයි / Warning', 'BS12', 'Warning', function () {
                scannedBarcode = null;
                EnableControllers();
            });
        }     
    }

    //Counter Window Controllers: START
    function DisableInputs() {
        $(""#BAGBtnClear"").attr('disabled', 'disabled');
        $(""#BAGBtnReset"").attr('disabled', 'disabled');

        $(""#POBtnClear"").attr('disabled', 'disabled');
        $(""#POBtnReset"").attr('disabled', 'disabled');
    }

    function EnableInputs() {
        $(""#BAGBtnClear"").removeAttr('disabled');
        $(""#BAGBtnReset"").removeAttr('disabled');

        $(""#POBtnClear"").removeAttr('disabled');
        $(""#POBtnReset"").removeAttr('disabled');
    }

    function resetControls() {
        //Barcode d");
            WriteLiteral(@"etails
        $('#moreGarmentTagNoIcon').hide();
        $('#moreGarmentTagNo').hide();
        $('#lastBarcodeDataLabel').html('');

        $(""#poDataLabel"").html('');
        $(""#dataLabelzFeature"").html('');
        $(""#bcColorDataLabel"").html('');
        $(""#sizeDataLabel"").html('');
        $(""#scheduleDataLabel"").html('');
        $(""#ShadeLotPatt"").html('');

        $(""#operationStatus"").html('');

        //Bag details
        $('#moreBagTagNoIcon').hide();
        $('#moreBagTagNo').hide();
        $('#lastBagTagDataLabel').html('');

        $(""#bagStyleLabel"").html('');
        $(""#bagSheduleLabel"").html('');
        $(""#bagColorLabel"").html('');
        $(""#bagCreatedTimeLabel"").html('');
        $(""#bagQuantitiy"").html('');

        $(""#bagGatepassCreatedby"").html('');
        $(""#bagStatus"").html('');
        $(""#bagLocation"").html('');
        $(""#bagGatepassNumber"").html('');

        $(""#bagqty01"").html('');
        $(""#bagqty02"").html('');
        $(""#bagq");
            WriteLiteral(@"ty03"").html('');
        $(""#bagqty01ns"").html('');
        $(""#bagqty02ns"").html('');
        $(""#bagqty03ns"").html('');

        //Travel Tag
        $('#moreTravelTagNoIcon').hide();
        $('#moreTravelTagNo').hide();
        $('#lastTravelTagDataLabel').html('');

        $(""#travelPoLabel"").html('');
        $(""#travelDeliveryDateLabel"").html('');
        $(""#travelSheduleLabel"").html('');
        $(""#travelWeekLabel"").html('');
        $(""#travelTrollyNoLabel"").html('');
        $(""#travelColorLabel"").html('');
        $(""#travelCreatedTimeLabel"").html('');

        $(""#travelqty01"").html('');
        $(""#travelqty02"").html('');
        $(""#travelqty03"").html('');
        $(""#travelqty01ns"").html('');
        $(""#travelqty02ns"").html('');
        $(""#travelqty03ns"").html('');

        $(""#travelGatepassCreatedby"").html('');
        $(""#travelStatus"").html('');
        $(""#travelLocation"").html('');
        $(""#travelGatepassNumber"").html('');
    }

    function getSess");
            WriteLiteral(@"ionInfo() {
        isValidClient = sessionStorage.getItem(""IsValidClient"");
        clientconfig = JSON.parse(sessionStorage.getItem(""Clientconfig""));
        userPermissionList = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
        clientIP = sessionStorage.getItem(""ClientIP"");
        txUser = JSON.parse(sessionStorage.getItem(""TxUser""));
        //console.log('Called getSessionInfo method. IsValidClient = ' + isValidClient);
    }

    function setPageControlsStartupStatus() {
        $('#moreGarmentTagNoIcon').hide();
        $('#moreGarmentTagNo').hide();
        $('#lastBarcodeDataLabel').html('');

        $(""#poDataLabel"").html('');
        $(""#dataLabelzFeature"").html('');
        $(""#bcColorDataLabel"").html('');
        $(""#sizeDataLabel"").html('');
        $(""#scheduleDataLabel"").html('');
        $(""#ShadeLotPatt"").html('');

        $(""#operationStatus"").html('');

        //Bag details
        $('#moreBagTagNoIcon').hide();
        $('#moreBagTagNo').hide()");
            WriteLiteral(@";
        $('#lastBagTagDataLabel').html('');

        $(""#bagStyleLabel"").html('');
        $(""#bagSheduleLabel"").html('');
        $(""#bagColorLabel"").html('');
        $(""#bagCreatedTimeLabel"").html('');
        $(""#bagQuantitiy"").html('');

        $(""#bagGatepassCreatedby"").html('');
        $(""#bagStatus"").html('');
        $(""#bagLocation"").html('');
        $(""#bagGatepassNumber"").html('');

        $(""#bagqty01"").html('');
        $(""#bagqty02"").html('');
        $(""#bagqty03"").html('');
        $(""#bagqty01ns"").html('');
        $(""#bagqty02ns"").html('');
        $(""#bagqty03ns"").html('');

        //Travel Tag
        $('#moreTravelTagNoIcon').hide();
        $('#moreTravelTagNo').hide();
        $('#lastTravelTagDataLabel').html('');

        $(""#travelPoLabel"").html('');
        $(""#travelDeliveryDateLabel"").html('');
        $(""#travelSheduleLabel"").html('');
        $(""#travelWeekLabel"").html('');
        $(""#travelTrollyNoLabel"").html('');
        $(""#travelColor");
            WriteLiteral(@"Label"").html('');
        $(""#travelCreatedTimeLabel"").html('');

        $(""#travelqty01"").html('');
        $(""#travelqty02"").html('');
        $(""#travelqty03"").html('');
        $(""#travelqty01ns"").html('');
        $(""#travelqty02ns"").html('');
        $(""#travelqty03ns"").html('');

        $(""#travelGatepassCreatedby"").html('');
        $(""#travelStatus"").html('');
        $(""#travelLocation"").html('');
        $(""#travelGatepassNumber"").html('');
    } 

    function setClientConfigInfo() {
        $('#dataLabelFactory').html(clientconfig.facName);
        $('#dataLabelTeam').html(clientconfig.teamName + '-[' + clientconfig.wfdepinstId + ']');
        //$('#dataLabelOperation').html(clientconfig.operationName);
        $('#dataLabelOperation').html(clientconfig.operationName);
        $('#dataLabelClientIP').html(clientIP);

    }   

    function GetClientByWF(arg){    
        refreshmsgBoxHeaderStyle();   
    }

    function refreshmsgBoxHeaderStyle() {
        $('#msg");
            WriteLiteral("Window\').removeClass(\"msgWindowWarning\");\r\n        $(\'#msgWindow\').removeClass(\"msgWindowConfirm\");\r\n    }\r\n\r\n    var ReworkObject;\r\n\r\n \r\n    function getWFDEPInstId(arg) {\r\n         $.ajax({\r\n                //url: \'");
            EndContext();
            BeginContext(89185, 14, false);
#line 1710 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                   Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(89199, 124, true);
            WriteLiteral("/Security/GetWfDEPInstByClientWF?ClientId=\' +  clientconfig.clientId + \'&WFId=\' + clientconfig.wfId,\r\n                url: \'");
            EndContext();
            BeginContext(89324, 14, false);
#line 1711 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(89338, 7931, true);
            WriteLiteral(@"/Security/GetWfDEPInstByTeamOppWF?TeamId=' +  TeamId + '&OppCode=' + clientconfig.OppCode + '&WFId=' + clientconfig.wfId ,
                
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {
                    if (response != null) {
                        WFDEPInstId =response.wfdepinstId;
                }   
            },
        });
    }


    function beep(vol, freq, duration){
                v=a.createOscillator()
                u=a.createGain()
                v.connect(u)
                v.frequency.value=freq
                v.type=""square""
                u.connect(a.destination)
                u.gain.value=vol*0.01
          ");
            WriteLiteral(@"      v.start(a.currentTime)
                v.stop(a.currentTime+duration*0.001)
    }

    function beeponce() {   
        var snd = new Audio(""data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh0");
            WriteLiteral(@"5Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClO");
            WriteLiteral(@"EgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa");
            WriteLiteral(@"325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAA");
            WriteLiteral(@"AAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU="");       
            snd.play(); 
    }

    //Disable Enabale Barcode Scan Textbox
    function DisableControllers() {
        $(""#barcodeBcodeTxt"").attr('disabled', 'disabled');
    }

    function EnableControllers() {
        $(""#barcodeBcodeTxt"").removeAttr('disabled');
        focusBarcodeInput();
    }

    function focusBarcodeInput(){
        $(""#barcodeBcodeTxt"").val("""");
        $(""#barcodeBcodeTxt"").focus();
        $(""#barcodeBcodeTxt"").select();
    }

    //Help functions
    function formatDate(date) {
        return (new Date(Date.parse(date)).toLocaleDateString(""en-US"", { month: '2-digit', day: '2-digit', year: 'numeric'}));
        //return (date == null || date == undefined || date == """") ? date : date.replace(/T/g, "" "")
    }

    //Function to get week number
    function getNumberOfWeek(indate) {
        const date = ");
            WriteLiteral(@"new Date(Date.parse(indate));
        const firstDayOfYear = new Date(date.getFullYear(), 0, 1);
        const pastDaysOfYear = (date - firstDayOfYear) / 86400000;
        return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);
    }

    //Checkbox script
    $('input[type=checkbox]').change(function(){
        counter = 0;
        clicked = $(this).data('index');
        $('input[type=checkbox]').each(function(){
            if($(this)[0].checked){
            counter++;
            }
        });
        if(counter==3){    
            toDisable = clicked;
            while(toDisable==clicked){
            toDisable=Math.round(Math.random()*2);
            }
            $(""input:eq(""+toDisable+"")"")[0].checked = false;
        }
    });

    //Open Expand Table Window
    function openExandTable(n) {
        if(n == 1) {
            SearchGroupBarcode($('#lastBagTagDataLabel').html(), 1);
        } else if(n == 2){
            SearchGroupBarcode($('#lastTravelTagDat");
            WriteLiteral(@"aLabel').html(), 2)
        }

        expandedTableWindow = $(""#expandedWindow"").kendoWindow({
            width: ""90%"",
            height: ""60%"",
            title: ""Expand"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: true,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        var arrows = [38, 40];
        expandedTableWindow.open().center();
        EnableInputs();
    }

    function SearchGroupBarcode(barcode, txnMode) {
        DisableInputs();
        var gridData = [];
        if(barcode != """") {
            $(""#expand-items-grid"").data('kendoGrid').dataSource.data([]);
            $.ajax({
                url: '");
            EndContext();
            BeginContext(97270, 14, false);
#line 1828 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(97284, 5321, true);
            WriteLiteral(@"/Lookup/GetAllBarcodeDetailsbyBarcode?barcode=' + barcode + '&txnmode=' + txnMode,
                type: 'GET',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    var gridData1 = [];
                    //console.log(response);
                    $.each(response, function (index, elements) {
                        var object = {
                            O: elements.travelBarCodeNo + "" - "" + elements.bagBarCodeNo,
                            Barcode: elements.barCodeNo,
                            BagBarcode: elements.bagBarCodeNo,
                            TravelBarcode: elements.travelBarCodeNo,
                            Qty01: elements.qty01,
                            Qty02: elements.qty02,
                            Qty03: elements.qty03,
                            Qty01Ns: elements.qty01Ns,
                        }
                        gridData1.push(object);
  ");
            WriteLiteral(@"                  });
                    $(""#expand-items-grid"").data('kendoGrid').dataSource.data(gridData1);
                    EnableInputs();
                },
                error: function () {
                    $(""#expand-items-grid"").html('No Results found !!! (1)');
                    EnableInputs();
                }
            });                                                    
        } else {
            msgBox.show('නැවත උත්සාහ කරන්න.', 'try again.', 'අවවාදයයි / Warning', 'BS01', 'Warning');
            EnableInputs();
        }
    }
    //End Expand Table

    //More barcode select window
    function openMoreGarmentBarcode(){
        moreGramentMode = 0;
        barcodeSearchWindow.open().center();
    }

    function onChangeBarcode(arg) {
        var row = $(this.select()).closest(""tr"");
        var dataItem = barcodeSearchGrid.dataItem(row);

        if (dataItem == null)
            return; 
        selectedBarcode = dataItem;

        barcodeSear");
            WriteLiteral(@"chWindow.close();
    }

    function onBarcodeSearchClose() {
        if (selectedBarcode != null) {
            //if(moreGramentMode == 0){
                getGarmentDgetGarmentDetailsbyGarmentBarcodeetails(selectedBarcode.Barcode);
            //}
        }
    }
    //end more barcode

    //More bag tag select window
    function openMoreBagTagBarcode(){
        moreGramentMode = 1;
        bagTagSearchWindow.open().center();
    }

    function onChangeBagTag(arg) {
        var row = $(this.select()).closest(""tr"");
        var dataItem = bagTagSearchGrid.dataItem(row);

        if (dataItem == null)
            return; 
        selectedBarcode = dataItem;

        bagTagSearchWindow.close();
    }

    function onBagTagSearchClose() {
        if (selectedBarcode != null) {
            //if(moreGramentMode == 0){
                getBagTagDetailsbyBagBarcode(selectedBarcode.Barcode);
            //}
        }
    }
    //end morebag tag

    //More travel tag select w");
            WriteLiteral(@"indow
    function openMoreTravelTagBarcode(){
        moreGramentMode = 2;
        travelTagSearchWindow.open().center();
    }

    function onChangeTravelTag(arg) {
        var row = $(this.select()).closest(""tr"");
        var dataItem = travelTagSearchGrid.dataItem(row);

        if (dataItem == null)
            return; 
        selectedBarcode = dataItem;

        travelTagSearchWindow.close();
    }

    function onTravelTagSearchClose() {
        if (selectedBarcode != null) {
            //if(moreGramentMode == 0){
                getGarmentDgetGarmentDetailsbyGarmentBarcodeetails(selectedBarcode.Barcode);
            //}
        }
    }
    //end more travel tag

    //Gatepass controllers
    //Start info Window//
    function openInfoWindow(n) {
        DisableInputs();
        //console.log(n);
        var dano = null
        
        showInfo = $(""#infowindow"").kendoWindow({
            width: ""80%"",
            height: ""75%"",
            title: ""Gatepass Deta");
            WriteLiteral(@"ils"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: true,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        var arrows = [48, 40];

        if(n == 1){  
            dano = $(""#bagGatepassNumber"").html();
            if(dano != ""Pending"" && dano != """") {
                $(""#RequestId"").html(dano);
                SearchGatepass(dano);

                showInfo.open().center();
            }
        } else if(n == 2){
            dano = $(""#travelGatepassNumber"").html();
            if(!dano.includes(""|"") && dano != ""Pending"" && dano != ""unavailable"" && dano != """") {
                $(""#RequestId"").html(dano);
                SearchGatepass(dano);
    
                showInfo.open().center();
            }
        }

        //console.log(dano);
        //getInfotData();
        EnableInputs();
    }

    function SearchGatepass(bagGatepassNumber) {
        DisableInpu");
            WriteLiteral("ts();\r\n        //console.log(bagGatepassNumber);\r\n        var timenow = event.timeStamp;\r\n        var gridData = [];\r\n        if(bagGatepassNumber != \"\") {\r\n            $.ajax({\r\n                url: \'");
            EndContext();
            BeginContext(102606, 14, false);
#line 1992 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(102620, 2222, true);
            WriteLiteral(@"/Lookup/GetRequestHeaderDetails?controlid=' + bagGatepassNumber,
                type: 'GET',
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: {
                    bagGatepassNumber: bagGatepassNumber
                },
                success: function (result) {
                    //console.log(result);
                    if(result != null && result != """") {
                        $(""#type-text"").html(result.controlType == 100 ? ""Factory Dispatch (100)"" : ""BFL Dispatch (200)"");
                        $(""#status-text"").html(result.txnStatus == 1 ? ""Pending Approval"" : result.txnStatus == 2 ? ""Approved - Not Send"" : result.txnStatus == 3 ? ""Security Passed"" : result.txnStatus == 5 ? ""Closed"" : """");
                        $(""#locationfrom-text"").html(result.locFromCode);
                        $(""#locationto-text"").html(result.locName);
                        $(""#department-text"").html(result.depid == 1 ? ""Washing out (Fac");
            WriteLiteral(@"tory)"" : result.depid == 2 ? ""Washing in (BFL)"" : result.depid == 3 ? ""Washing out (BFL)"" : result.depid == 4 ? ""Washing receive (Factory)"" : """");
                        $(""#address-text"").html(result.locAddress);
                        $(""#approval-text"").html(result.approver + (result.txnStatus < 2 ? "" (pending)"" : "" (approved)""));
                        $(""#createdon-text"").html(formatDate(result.createdDateTime));
                        $(""#requestby-text"").html(result.createdBy);
                        $(""#receiver-text"").html(result.receiverName);
                        $(""#receiveremail-text"").html(result.receiverEmail);
                        $(""#watcheremail-text"").html(result.watcherEmail);
                        $(""#referenceno-text"").html(result.errorCode);
                        $(""#veficle-text"").html(result.vehicleNo);
                        $(""#remarks-text"").html(result.remark);

                        //Request Item Grid Data
                        $(""#read-only-requ");
            WriteLiteral("est-items-grid\").data(\'kendoGrid\').dataSource.data([]);\r\n                        var gridData1 = [];\r\n                        $.ajax({\r\n                                url: \'");
            EndContext();
            BeginContext(104843, 14, false);
#line 2022 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(104857, 2967, true);
            WriteLiteral(@"/Lookup/GetGroupBarcodeDetails?controlId=' + bagGatepassNumber + '&seq=' + result.seq,
                                type: 'GET',
                                dataType: 'json',
                                async: false,
                                contentType: 'application/json',
                                beforeSend: function () {
                                    $(""#ajaxBusy"").show();
                                },
                                complete: function () {
                                    $(""#ajaxBusy"").hide();
                                },  
                                success: function (response) {
                                    //console.log(response);
                                    $.each(response, function (index, elements) {
                                        var object = {
                                            ColorCode: '',
                                            Key: elements.styleDesc + "" | "" + elements.sche");
            WriteLiteral(@"duleDesc + "" | "" + elements.colorDesc,
                                            Seq: elements.seq,
                                            TxnMode: elements.txnMode,
                                            L1id: elements.styleId,
                                            Style: elements.styleDesc,
                                            L2id: elements.scheduleId,
                                            Shedule: elements.scheduleDesc,
                                            PO: elements.poNo,
                                            ZFeature: elements.zfeature,
                                            L4id: elements.colorId,
                                            Color: elements.colorDesc,
                                            BagBarcode: elements.bagBarCode,
                                            Quantity: elements.qty01,
                                            Action: elements.bagStatus,
                                            Location: ele");
            WriteLiteral(@"ments.location,
                                        }
                                        gridData1.push(object);
                                    });
                                    //console.log(gridData1);
                                    $(""#read-only-request-items-grid"").data('kendoGrid').dataSource.data(gridData1);
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                                    EnableInputs();
                                }
                        });

                        //Status Grid Data
                        //$(""#request-status"").data('kendoGrid').dataSource.data([]);
                        var gridData2 = [];
                        $.ajax({
                            url: '");
            EndContext();
            BeginContext(107825, 14, false);
#line 2069 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\BarcodeDetail.cshtml"
                             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(107839, 18554, true);
            WriteLiteral(@"/Lookup/GetRequestyDetails?controlid=' + bagGatepassNumber + '&seq=' + result.seq + '&depid=' + result.depid,
                            type: 'GET',
                            dataType: 'json',
                            async: false,
                            contentType: 'application/json',
                            beforeSend: function () {
                                $(""#ajaxBusy"").show();
                            },
                            complete: function () {
                                $(""#ajaxBusy"").hide();
                            },
                            success: function (response) {
                                //console.log(response);
                                $(""#currentStatus"").html(response.txnStatus + 1);
                                $(""#approverid"").html(response.approver);
                                var object = {
                                        Stage: ""Start of a request"",
                                        S");
            WriteLiteral(@"tatus: response.txnStatus >= 1 ? ""Approved"" : response.txnStatus < 1 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.createdBy,
                                        Completed_On: formatDate(response.createdDateTime),
                                    }
                                    gridData2.push(object);

                                    object = {
                                        Stage: ""First Level Approval"",
                                        Status: response.txnStatus >= 2 ? ""Approved"" : response.txnStatus < 2 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.approvalStatus == 0 ? """" : response.approver,
                                        Completed_On: formatDate(response.approvedDateTime),
                                    }
                                    gridData2.push(object);

 ");
            WriteLiteral(@"                                   object = {
                                        Stage: ""Sending Factory Security"",
                                        Status: response.txnStatus >= 3 ? ""Approved"" : response.txnStatus < 3 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.securityPassedBy,
                                        Completed_On: formatDate(response.securityPassedDateTime),
                                    }
                                    gridData2.push(object);

                                    object = {
                                        Stage: ""Receiving Factory Security"",
                                        Status: response.txnStatus >= 4 ? ""Approved"" : response.txnStatus < 4 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.securityReceivedBy,
                                       ");
            WriteLiteral(@" Completed_On: formatDate(response.securityReceivedDateTime),
                                    }
                                    gridData2.push(object);

                                    object = {
                                        Stage: ""Closed"",
                                        Status: response.txnStatus >= 5 ? ""Approved"" : response.txnStatus < 5 ? ""Pending"" : """",
                                        Comments: """",
                                        Completed_By: response.closedBy,
                                        Completed_On: formatDate(response.closedDateTime),
                                    }
                                    gridData2.push(object);

                                //console.log(gridData2);
                                $(""#request-status"").data('kendoGrid').dataSource.data(gridData2);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                              ");
            WriteLiteral(@"  formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                                EnableInputs();
                            }
                        });  
                    }
                    EnableInputs();
                },
                error: function () {
                    $(""#search-result-grid-gatepass"").html('No Results found !!! (2)');
                    EnableInputs();
                }
            });

            //Request Status Grid
                                                                   
        } else {
            msgBox.show('කරුණාකර යැවීමේ සටහන් අංකයක් තෝරා නැවත උත්සාහ කරන්න.', 'please select a request id and try again.', 'අවවාදයයි / Warning', 'BS01', 'Warning');
            EnableInputs();
        }
    }
    //End Info Window//

</script>

<!-- Main Window: START -->
<div class=""form-group"">   
    <div class=""row"" class=""m-2"" style=""margin-left: -10px !important"">
        <div class=""col-xs-6"">                    
            <div ");
            WriteLiteral(@"class=""row  roundCornerGroupBox"" style=""height:39vh;""> 
                <div class=""col-xs-12"" id=""garment-detail"">
                    <div class=""row"" style=""height:4vh;"">
                        <div class=""col-xs-11"" style=""border-bottom: 1px solid #d2dad270;"">
                            <label class=""control-label control-label-main"" style=""width: 40%; margin-bottom: 5px; margin-top: -7px !important; font-size: 25px !important; font-weight: 600 !important;"">Garment Detail</label>
                            <label class=""control-scan-status-val"" style=""padding-left: 0px; font-size: 24px !important;"">
                                <span id=""lastBarcodeDataLabel""></span>
                                <span id=""moreGarmentTagNoIcon"" onclick=""openMoreGarmentBarcode()"" class=""k-icon k-i-plus-circle"" style=""text-align: left; font-size: 26px; margin-bottom: 4px; margin-left: 5px;"" hidden=""hidden""></span>
                                <span id=""moreGarmentTagNo"" style=""text-align: left; font-size:");
            WriteLiteral(@" 24px; margin-left: 5px; color: #ff3f0a;"" hidden=""hidden""></span>
                            </label>
                        </div>
                        <div class=""col-xs-1"">
                            <div class=""wrap-c"" style=""margin-top: 10px; margin-left: 62%;"">
                                <div class=""block-c"">
                                    <input data-index=""0"" id=""search-garment"" class=""input-d input-c"" onclick=""selectdetailMode(1)"" type=""checkbox""/>
                                    <label for=""search-garment"" class=""label-c""></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""row"" style=""height:22vh;"" id=""singleGarmentDetail"">
                        <div class=""col-xs-7"" style=""padding-left: 0px;"">                                 
                            <div class=""row"" style=""height:7vh; overflow: auto;"">                                       ");
            WriteLiteral(@"                  
                                <label class=""control-label col-xs-3"">PO :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" id=""poDataLabel"" ></label>                                        
                            </div>                                 
                            <div class=""row"" style=""height:7vh; overflow: auto;"">
                                <label class=""control-label col-xs-3"">Z Fture. :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" id=""dataLabelzFeature"" ></label>                    
                            </div>
                            <div class=""row"" style=""height:7vh; overflow: auto;"">
                                <label class=""control-label col-xs-3"">Color :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" id=""bcColorDataLabel"" ></label>                                   
               ");
            WriteLiteral(@"             </div> 
                        </div>
                        <div class=""col-xs-5"" style=""padding-left: 0px;"">
                            <div class=""row"" style=""height:7vh; overflow: auto;"">                                                    
                                <label class=""control-label col-xs-4"" style=""padding-left: 0px;"">Size :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-3"" style=""width:140px;"" id=""sizeDataLabel"" ></label>
                            </div>
                            <div class=""row"" style=""height:7vh; overflow: auto;"">             
                                <label class=""control-label col-xs-4"" style=""padding-left: 0px;"">Schedule :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-3"" id=""scheduleDataLabel"" ></label>
                            </div>  
                            <div class=""row"" style=""height:7vh; overflow: auto;"">           
   ");
            WriteLiteral(@"                             <label class=""control-label col-xs-4"" style=""padding-left: 0px; width:155px;"">Shade Lot / Patt :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-3"" id=""ShadeLotPatt"" ></label>
                            </div>                       
                        </div> 
                    </div>
                    <div class=""row"" style=""height:17vh;"">
                        <div class=""col-xs-11"" style=""border-top: 1px solid #d2dad270;"" id=""operationStatus"">
                        </div>
                    </div>
                </div>                              
            </div>
        </div>
        <div class=""col-xs-6"">                    
            <div class=""row  roundCornerGroupBox"" style=""height:39vh;"">                            
                <div class=""col-xs-12"" id=""bag-tag-detail"">
                    <div class=""row"" style=""height:4vh;"">
                        <div class=""col-xs-10"" style=""bor");
            WriteLiteral(@"der-bottom: 1px solid #d2dad270;"">
                            <label class=""control-label control-label-main"" style=""width: 50%; margin-bottom: 5px; margin-top: -7px !important; font-size: 25px !important; font-weight: 600 !important;"">Bag Tag Detail</label>
                            <label class=""control-scan-status-val"" style=""padding-left: 0px; font-size: 24px !important;"" >
                                <span id=""lastBagTagDataLabel""></span>
                                <span id=""moreBagTagNoIcon"" onclick=""openMoreBagTagBarcode()"" class=""k-icon k-i-plus-circle"" style=""text-align: left; font-size: 26px; margin-bottom: 4px; margin-left: 5px;"" hidden=""hidden""></span>
                                <span id=""moreBagTagNo"" style=""text-align: left; font-size: 24px; margin-left: 5px; color: #ff3f0a;"" hidden=""hidden""></span>
                            </label>
                        </div>
                        <div class=""col-xs-1"" style="""">
                            <button style=""backgr");
            WriteLiteral(@"ound-color: #ffffff00; border: none; margin-top: 5px; margin-bottom: 7px;"" onclick=""openExandTable(1)""><span class=""k-icon k-i-information"" style=""text-align:left; font-size: 32px;""></span></button>
                        </div>
                        <div class=""col-xs-1"">
                            <div class=""wrap-c"" style=""margin-top: 10px; margin-left: 62%;"">
                                <div class=""block-c"">
                                    <input data-index=""0"" id=""search-bag-tag"" class=""input-d input-c"" onclick=""selectdetailMode(2)"" type=""checkbox"" />
                                    <label for=""search-bag-tag"" class=""label-c""></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""row"" style=""height:14vh;"" id=""bagTagDetail"">
                        <div class=""col-xs-6"" style=""padding-left: 0px;"">                                 
                            <di");
            WriteLiteral(@"v class=""row"" style=""height:7vh; overflow: auto;"">                                                         
                                <label class=""control-label col-xs-3"">Style :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" id=""bagStyleLabel"" ></label>                                        
                            </div>                                 
                            <div class=""row"" style=""height:7vh; overflow: auto;"">
                                <label class=""control-label col-xs-3"" style=""width: 119px;"">Shedule :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" id=""bagSheduleLabel"" ></label>                    
                            </div>
                        </div>
                        <div class=""col-xs-6"" style=""padding-left: 0px;"">
                            <div class=""row"" style=""height:7vh; overflow: auto;"">                                         ");
            WriteLiteral(@"           
                                <label class=""control-label col-xs-4"" style=""padding-left: 0px;"">Color :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-3"" style=""width:140px;"" id=""bagColorLabel"" ></label>
                            </div>
                            <div class=""row"" style=""height:7vh; overflow: auto;"">             
                                <label class=""control-label col-xs-4"" style=""padding-left: 0px; width: 160px;"">Quantitiy :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-3"" id=""bagQuantitiy""></label>
                            </div>                      
                        </div> 
                    </div>
                    <div class=""row"" style=""height:4vh;"">
                        <div class=""col-xs-11"" style=""border-top: 1px solid #d2dad270;"">
                            <div class=""row"" style=""height:7vh; overflow: auto;"">             
            ");
            WriteLiteral(@"                    <label class=""control-label col-xs-6"" style=""padding-left: 0px; width: 160px;"">Created Time :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" id=""bagCreatedTimeLabel"" ></label>
                            </div>  
                        </div>
                        <div class=""col-xs-1"">
                        </div>
                    </div>
                    <div class=""row"" style=""height:21vh;"">
                        <div class=""col-xs-3"" style=""border-top: 1px solid #d2dad270;"">
                            <div class=""row roundCornerGroupBox"" style=""margin-top: 9px; margin-left: -12px;"">
                                <div class=""col-xs-12"" style=""margin-left: 2px !important; margin-top: 5px; margin-bottom: 5px;"">
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""background-color: #43a047;"" id=""bagqty01""></label>
                           ");
            WriteLiteral(@"             <label class=""qty-label"" style=""background-color: #FFC107;"" id=""bagqty02""></label>
                                        <label class=""qty-label"" style=""background-color: #F44336;"" id=""bagqty03""></label>
                                    </div>
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""background-color: #43a047;"" id=""bagqty01ns""></label>
                                        <label class=""qty-label"" style=""background-color: #FFC107;"" id=""bagqty02ns""></label>
                                        <label class=""qty-label"" style=""background-color: #F44336;"" id=""bagqty03ns""></label>
                                    </div>
                                </div>
                             </div>
                        </div>
                        <div class=""col-xs-5"" style=""border-top: 1px solid #d2dad270;"">
                            <div class=""row roundCornerGroupBox"" style=""margin-top: ");
            WriteLiteral(@"9px; margin-left: -12px;"">
                                <div class=""col-xs-12"" style=""margin-left: 2px !important; margin-top: 5px; margin-bottom: 5px;"">
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""background-color: #43a04736; color: white; width: 93%;"" id=""bagStatus""></label>
                                    </div>
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""background-color: #26A69A; width: 93%;"" id=""bagLocation""></label>
                                    </div>
                                </div>
                             </div>
                        </div>
                        <div class=""col-xs-3"" style=""border-top: 1px solid #d2dad270;"">
                             <div class=""row roundCornerGroupBox"" style=""margin-top: 9px; margin-left: -12px; margin-right: -34px;"">
                                 <div class");
            WriteLiteral(@"=""col-xs-12"" style=""margin-left: 2px !important; margin-top: 5px; margin-bottom: 5px;"">
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""color: white; text-align: center; font-size: 23px;"" onclick=""openInfoWindow(1)"" id=""bagGatepassNumber""></label>
                                    </div>
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""color: white; text-align: center; font-size: 16px;"" id=""bagGatepassCreatedby""></label>
                                    </div>
                                </div>
                             </div>
                        </div>
                    </div>
                </div>  
            </div>
        </div>
    </div>
    <div class=""row"" class=""m-2"" style=""margin-left: -10px !important"">
        <div class=""col-xs-4"">                    
            <div class=""row  roundCornerGroupBox"" style=");
            WriteLiteral("\"height:11vh;\"> \r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"row\">\r\n                        ");
            EndContext();
            BeginContext(126393, 1327, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4ad828d84c546ba916e0409de2c779f", async() => {
                BeginContext(126415, 1298, true);
                WriteLiteral(@"
                            <section class=""plan cf"">
                                <div id=""garmentSelectDiv"">
                                    <input type=""radio"" name=""radio1"" id=""garment"" value=""true"" onclick=""selectScanMode(0)"" checked><label class=""free-label four col"" for=""garment"">Garment</label>
                                </div>
                                <div id=""bagSelectDiv"">
                                    <input type=""radio"" name=""radio1"" id=""bag"" onclick=""selectScanMode(1)"" value=""true""><label class=""basic-label four col"" for=""bag"">Bag Tag</label>
                                </div>
                                <div id=""traveltagSelectDiv"">
                                    <input type=""radio"" name=""radio1"" id=""traveltag"" onclick=""selectScanMode(2)"" value=""true""><label class=""basic-label four col"" for=""traveltag"">Travel Tag</label>
                                </div>
                                <div id=""buddytagSelectDiv"">
                         ");
                WriteLiteral(@"           <input type=""radio"" name=""radio1"" id=""buddytag"" onclick=""selectScanMode(3)"" value=""true""><label class=""basic-label four col"" for=""buddytag"">Buddy Tag</label>
                                </div>
                            </section>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(127720, 26496, true);
            WriteLiteral(@"
                    </div>
                </div>                               
            </div>
        </div>
        <div class=""col-xs-4"">                    
            <div class=""row  roundCornerGroupBox"" style=""height:11vh;""> 
                <div class=""col-xs-12"">
                    <div class=""row"">
                        <input type=""textarea"" id=""barcodeBcodeTxt"" class=""form-control textbox-barcode"" maxlength=""20"" style=""font-size: 45px !important; margin-top: 4px !important; margin-left: -5px !important;"" placeholder=""Scan Barcode"">
                    </div>
                </div>                               
            </div>
        </div>
        <div class=""col-xs-4"">                    
            <div class=""row  roundCornerGroupBox"" style=""height:11vh;""> 
                <div class=""col-xs-12"">
                    <div class=""row"">

                    </div>
                </div>                               
            </div>
        </div>
    </di");
            WriteLiteral(@"v>
    <div class=""row"" class=""m-2"" style=""margin-left: -10px !important"">
        <div class=""col-xs-6"">                    
            <div class=""row  roundCornerGroupBox"" style=""height:39vh;"">                            
                <div class=""col-xs-12"" id=""travel-tag-detail"">
                    <div class=""row"" style=""height:4vh;"">
                        <div class=""col-xs-10"" style=""border-bottom: 1px solid #d2dad270;"">
                            <label class=""control-label control-label-main"" style=""width: 50%; margin-bottom: 5px; margin-top: -7px !important; font-size: 25px !important; font-weight: 600 !important;"">Travel Tag Detail</label>
                            <label class=""control-scan-status-val"" style=""padding-left: 0px; font-size: 24px !important;"">
                                <span id=""lastTravelTagDataLabel""></span>
                                <span id=""moreTravelTagNoIcon"" onclick=""openMoreTravelTagBarcode()"" class=""k-icon k-i-plus-circle"" style=""text-align: ");
            WriteLiteral(@"left; font-size: 26px; margin-bottom: 4px; margin-left: 5px;"" hidden=""hidden""></span>
                                <span id=""moreTravelTagNo"" style=""text-align: left; font-size: 24px; margin-left: 5px; color: #ff3f0a;"" hidden=""hidden""></span>
                            </label>
                        </div>
                        <div class=""col-xs-1"" style="""">
                            <button style=""background-color: #ffffff00; border: none; margin-top: 5px; margin-bottom: 7px;"" onclick=""openExandTable(2)""><span class=""k-icon k-i-information"" style=""text-align:left; font-size: 32px;""></span></button>
                        </div>
                        <div class=""col-xs-1"">
                            <div class=""wrap-c"" style=""margin-top: 10px; margin-left: 62%;"">
                                <div class=""block-c"">
                                    <input data-index=""0"" id=""search-travel-tag"" onclick=""selectdetailMode(3)"" class=""input-d input-c"" type=""checkbox"" />
                ");
            WriteLiteral(@"                    <label for=""search-travel-tag"" class=""label-c""></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""row"" style=""height:14vh;"" id=""travelTagDetail"">
                        <div class=""col-xs-4"" style=""padding-left: 0px;"">                                 
                            <div class=""row"" style=""height:7vh; overflow: auto;"">                                                         
                                <label class=""control-label col-xs-3"" style=""width: 71px;"">PO :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" id=""travelPoLabel"" ></label>                                        
                            </div>                                 
                            <div class=""row"" style=""height:7vh; overflow: auto;"">
                                <label class=""control-label col-xs");
            WriteLiteral(@"-3"" style=""width: 119px;"">Shedule :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" style=""width: 161px;"" id=""travelSheduleLabel"" ></label>                    
                            </div>
                        </div>
                        <div class=""col-xs-4"" style=""padding-left: 0px;"">
                            <div class=""row"" style=""height:7vh; overflow: auto;"">                                                    
                                <label class=""control-label col-xs-4"" style=""padding-left: 0px; width: 104px;"">Delivery :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-3"" style=""width:140px;"" id=""travelDeliveryDateLabel""></label>
                            </div>
                            <div class=""row"" style=""height:7vh; overflow: auto;"">             
                                <label class=""control-label col-xs-4"" style=""padding-left: 0px; width: 160px;"">Week :</labe");
            WriteLiteral(@"l>               
                                <label class=""bcInfoDataLabel-t col-xs-3"" id=""travelWeekLabel""></label>
                            </div>                      
                        </div>
                        <div class=""col-xs-4"" style=""padding-left: 0px;"">
                            <div class=""row"" style=""height:7vh; overflow: auto;"">                                                    
                                <label class=""control-label col-xs-4"" style=""padding-left: 0px;"">Color :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-3"" style=""width:140px;"" id=""travelColorLabel"" ></label>
                            </div>
                            <div class=""row"" style=""height:7vh; overflow: auto;"">             
                                <label class=""control-label col-xs-4"" style=""padding-left: 0px; width: 160px;"">Trolley No :</label>               
                                <label class=""bcInfoDataLabel-t");
            WriteLiteral(@" col-xs-3"" id=""travelTrollyNoLabel""></label>
                            </div>                      
                        </div> 
                    </div>
                    <div class=""row"" style=""height:4vh;"">
                        <div class=""col-xs-11"" style=""border-top: 1px solid #d2dad270;"">
                            <div class=""row"" style=""height:7vh; overflow: auto;"">             
                                <label class=""control-label col-xs-6"" style=""padding-left: 0px; width: 160px;"">Created Time :</label>               
                                <label class=""bcInfoDataLabel-t col-xs-8"" id=""travelCreatedTimeLabel"" ></label>
                            </div>  
                        </div>
                        <div class=""col-xs-1"">
                        </div>
                    </div>
                    <div class=""row"" style=""height:21vh;"">
                        <div class=""col-xs-3"" style=""border-top: 1px solid #d2dad270;"">
                        ");
            WriteLiteral(@"    <div class=""row roundCornerGroupBox"" style=""margin-top: 9px; margin-left: -12px;"">
                                <div class=""col-xs-12"" style=""margin-left: 2px !important; margin-top: 5px; margin-bottom: 5px;"">
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""background-color: #43a047;"" id=""travelqty01""></label>
                                        <label class=""qty-label"" style=""background-color: #FFC107;"" id=""travelqty02""></label>
                                        <label class=""qty-label"" style=""background-color: #F44336;"" id=""travelqty03""></label>
                                    </div>
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""background-color: #43a047;"" id=""travelqty01ns""></label>
                                        <label class=""qty-label"" style=""background-color: #FFC107;"" id=""travelqty02ns""></label>
            ");
            WriteLiteral(@"                            <label class=""qty-label"" style=""background-color: #F44336;"" id=""travelqty03ns""></label>
                                    </div>
                                </div>
                             </div>
                        </div>
                        <div class=""col-xs-5"" style=""border-top: 1px solid #d2dad270;"">
                            <div class=""row roundCornerGroupBox"" style=""margin-top: 9px; margin-left: -12px;"">
                                <div class=""col-xs-12"" style=""margin-left: 2px !important; margin-top: 5px; margin-bottom: 5px;"">
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""background-color: #43a04736; color: white; width: 93%;"" id=""travelStatus""></label>
                                    </div>
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""background-color: #26A69A; width: 93%;"" ");
            WriteLiteral(@"id=""travelLocation""></label>
                                    </div>
                                </div>
                             </div>
                        </div>
                        <div class=""col-xs-3"" style=""border-top: 1px solid #d2dad270;"">
                             <div class=""row roundCornerGroupBox"" style=""margin-top: 9px; margin-left: -12px; margin-right: -34px;"">
                                 <div class=""col-xs-12"" style=""margin-left: 2px !important; margin-top: 5px; margin-bottom: 5px;"">
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""color: white; text-align: center; font-size: 23px;"" onclick=""openInfoWindow(2)"" id=""travelGatepassNumber""></label>
                                    </div>
                                    <div class=""row"">
                                        <label class=""qty-label"" style=""color: white; text-align: center; font-size: 16px;"" id=""travelGatepassCr");
            WriteLiteral(@"eatedby""></label>
                                    </div>
                                </div>
                             </div>
                        </div>
                    </div>
                </div>  
            </div>
        </div>
        <div class=""col-xs-6"">                    
            <div class=""row  roundCornerGroupBox"" style=""height:39vh;"">                            
                <div class=""col-xs-12"" id=""buddy-tag-detail"" hidden=""hidden"">
                    <div class=""row"" style=""height:4vh;"">
                        <div class=""col-xs-10"" style=""border-bottom: 1px solid #d2dad270;"">
                            <label class=""control-label control-label-main"" style=""width: 50%; margin-bottom: 5px; margin-top: -7px !important; font-size: 25px !important; font-weight: 600 !important;"">Buddy Tag Detail</label>
                            <label class=""control-scan-status-val"" style=""padding-left: 0px;width: 17%; font-size: 24px !important;"" id=""lastBuddyTagD");
            WriteLiteral(@"ataLabel""></label>
                        </div>
                        <div class=""col-xs-1"" style="""">
                            <button style=""background-color: #ffffff00; border: none; margin-top: 5px; margin-bottom: 7px;"" onclick=""""><span class=""k-icon k-i-information"" style=""text-align:left; font-size: 32px;""></span></button>
                        </div>
                        <div class=""col-xs-1"">
                            <div class=""wrap-c"" style=""margin-top: 10px; margin-left: 62%;"">
                                <div class=""block-c"">
                                    <input data-index=""0"" id=""search-buddy-tag"" onclick=""selectdetailMode(4)"" class=""input-d input-c"" type=""checkbox"" />
                                    <label for=""search-buddy-tag"" class=""label-c""></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""row"" style=""height:35vh;"">
            ");
            WriteLiteral(@"            
                    </div>
                </div>   
            </div>
        </div>
    </div>
</div>
<!-- MAIN WINDOW: END-->

<!-- Show Request Details - info :START -->
<div style=""font-size: 12px;"" id=""infowindow"" hidden=""hidden"">
    <div style=""padding: 10px;"">
        <div style=""clear:both;"">
            <div>
                <h3 id=""RequestId"" style=""margin-top: -11px; font-weight: 600;""></h3>
            </div>
        </div>
        <div>
            <div style=""float: left; width: 60%;"">
                <div style=""height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label for=""return"">
                            Type
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""type-text"">
                        </label>
                    </div>
                </di");
            WriteLiteral(@"v>
                <div style=""height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label for=""return"">
                            Status
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""status-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Location From
                        </label>
                    </div>
                    <div style=""float: left;"">   
                        <label id=""locationfrom-text"">
                        </label>    
                    </div>
                </div>
                ");
            WriteLiteral(@"<div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Location To
                        </label>
                    </div>
                    <div style=""float: left;"">  
                        <label id=""locationto-text"">
                        </label>      
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Department To
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""department-text"">
                        </label>
                    </div>
                </div>
                <div style=""");
            WriteLiteral(@"clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label style=""width: 500px;"">
                            Address
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""address-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Approval
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""approval-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both;");
            WriteLiteral(@" height: 35px;"">
                    <div style=""float: left; width: 120px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Security Seal No.
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""securitysealno-text"">
                        </label>
                    </div>
                </div>
            </div>
            <div style=""float: left; width: 40%;"">
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Created On
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""createdon-text"">
                        </label>
                    </div>
      ");
            WriteLiteral(@"          </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Request By
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""requestby-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Receiver
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""receiver-text"">
                        </label>
                    </div>
                </div>
           ");
            WriteLiteral(@"     <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Receiver Email
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""receiveremail-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Watcher Email
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""watcheremail-text"">
                        </label>
                    </div>
                </div>
                <div st");
            WriteLiteral(@"yle=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Reference No
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""referenceno-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; height: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Vehicle No.
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""veficle-text"">
                        </label>
                    </div>
                </div>
                <div style=""clear: both; heigh");
            WriteLiteral(@"t: 35px;"">
                    <div style=""float: left; width: 110px; margin-right: 25px; text-align: left; font-weight: bold;"">
                        <label>
                            Remarks
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""remarks-text"">
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div style=""clear:both;"">
            <div>
                <h5>
                    Items
                </h5>
            </div>
            <!-- REQUEST ITEMS GRID: BEGIN -->
            <div id=""read-only-request-items-grid"" style=""margin-top: 5px;""></div>
        </div>
        <div style=""clear:both;"">
            <div>
                <h5>
                    Workflow
                </h5>
            </div>
            <!-- REQUEST ITEMS GRID: BEGIN -->
            <div id=""request-status"" style=""margi");
            WriteLiteral(@"n-top: 5px;""></div>
        </div>
        <div style=""clear:both; margin-bottom: 13px;""></div>
    </div>
</div>
<!-- Show Request Details - info :END-->

<!--Expanded Table Window: START-->
<div id=""expandedWindow"" hidden=""hiden"">
    <div style=""clear:both;"">
        <div>
            <h2>
                Items
            </h2>
        </div>
        <!-- REQUEST ITEMS GRID -->
        <div id=""expand-items-grid"" style=""margin-top: 5px;"">
        </div>
    </div>
</div>
<!--Expanded Table Window: END-->

<!--More Barcode View Table Window: START -->
<div id=""barcodeSearchWindow"" class=""barcodeSearchWindow"" hidden=""hidden"">
    <div id=""barcodeSearchGrid"">
</div>
<!--More Barcode View Table Window: END -->

<!--More Travel tag View Table Window: START -->
<div id=""travelTagSearchWindow"" class=""travelTagSearchWindow"" hidden=""hidden"">
    <div id=""travelTagSearchGrid"">
</div>
<!--More Travel rag View Table Window: END -->

<!--More Bag tag View Table Window: START -->
<div");
            WriteLiteral(@" id=""bagTagSearchWindow"" class=""bagTagSearchWindow"" hidden=""hidden"">
    <div id=""bagTagSearchGrid"">
</div>
<!--More Bag rag View Table Window: END -->


<!--Page Styles: START-->
<Style>
    /* Scroll Bar */
    /* width */
    ::-webkit-scrollbar {
    width: 10px;
    height: 15px;
    margin-bottom: 7px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
    background: #49505700;
    }
    
    /* Handle */
    ::-webkit-scrollbar-thumb {
    background: #888; 
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
    border-bottom-right-radius: 8px;
    border-bottom-left-radius: 8px;
    }

    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
    background: #555; 
    }

    /* CONTAINERS */

    .four { width: 24.26%; max-width: 24.26%;}


    /* COLUMNS */

    .col {
    display: block;
    float:left;
    margin: 1% 0 1% 1.6%;
    }

    .col:first-of-type { margin-left: 0; border: 1px solid #cececebf;     border-radius: 5");
            WriteLiteral(@"px;}

    /* CLEARFIX */

    .cf:before,
    .cf:after {
        content: "" "";
        display: table;
    }

    .cf:after {
        clear: both;
    }

    .cf {
        *zoom: 1;
    }

    /* FORM */

    .form .plan input, .form .payment-plan input, .form .payment-type input{
        display: none;
    }

    .form label{
        position: relative;
        color: #fff;
        background-color: #474444c7;
        font-size: 19px;
        text-align: center;
        height: 90px;
        line-height: 87px;
        display: block;
        cursor: pointer;
        border: 3px solid transparent;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }

    .form .plan input:checked + label, .form .payment-plan input:checked + label, .form .payment-type input:checked + label{
        border: 1px solid #cececebf;
        background-color: #43A047;
        color: black;
        font-weight: 600;
        font");
            WriteLiteral(@"-size: 20px;
    }

    .form .plan input:checked + label:after, form .payment-plan input:checked + label:after, .form .payment-type input:checked + label:after{
        content: ""\2713"";
        width: 40px;
        height: 40px;
        line-height: 40px;
        border-radius: 100%;
        border: 2px solid #333;
        background-color: #2fcc71;
        z-index: 999;
        position: absolute;
        top: -10px;
        right: -10px;
    }

    /*Checkbox*/
    .input-c {
        display:none;  
    }

    .block-c {
        width:200px;
        position:relative;
        clear:both;
        /*margin:0 0 25px;*/
        float: left;
    }

    .span-c {
        text-transform:uppercase;
        font-family:'Roboto Condensed', sans-serif;
        font-weight:bold;
        letter-spacing:1px;
        font-size:15px;
        float:right;
        width:85px;
        margin:16px 0 0;
    }
    .wrap-c {
        width:200px;
        position: absolute;
        left");
            WriteLiteral(@":50%;
        top:50%;
        transform:translate(-50%,-50%);
        padding:30px 30px 5px;
    }

    .label-c {
        width:50px;
        height:32px;
        box-sizing:border-box;
        border:1px solid;
        float:left;
        border-radius:100px;
        position:relative;
        cursor:pointer;
        transition:.3s ease;
    }

    .input-d[type=checkbox]:checked + label{
        background: #388E3C;
    }

    .input-d[type=checkbox]:checked + label:before{
        left:18px;
    }

    .label-c:before{
        transition:.3s ease;
        content:'';
        width:25px;
        height:25px;
        position:absolute;
        background:white;
        left:2px;
        top:2px;
        box-sizing:border-box;
        border:1px solid;
        color:black;
        border-radius:100px;
    }

</Style>
<!--Page Styles: END-->");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
