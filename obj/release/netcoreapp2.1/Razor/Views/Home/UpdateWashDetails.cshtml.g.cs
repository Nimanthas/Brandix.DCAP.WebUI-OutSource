#pragma checksum "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0e596afee0fa9017138efeddc9dcf3865c3ab0e4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_UpdateWashDetails), @"mvc.1.0.view", @"/Views/Home/UpdateWashDetails.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/UpdateWashDetails.cshtml", typeof(AspNetCore.Views_Home_UpdateWashDetails))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI;

#line default
#line hidden
#line 2 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0e596afee0fa9017138efeddc9dcf3865c3ab0e4", @"/Views/Home/UpdateWashDetails.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d6ac14fb493c2990ba4a5667bd32d8705427078c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_UpdateWashDetails : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(32, 3289, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    var selectedDate = null;
    var fromdatePicker = null;
    var todatePicker = null;
    var scheduleObject = null;
    var operationList = null;
    var todayDate = null;
    var scrapItems = [];
    var SoberSheetMode = false;
    var SSheetSCHNo = null;
    var SSheetSCHId = null;
    var SSAlreadySaved = false;

    //views
    var createNewTag = null;
    var addItemsGrid = null;
    var isvalidbarcode = false;

    var selectedSF = null;
    var washTypeSearchWindow = null;
    var washTypeSearchGrid = null;
    var sfProcessSearchGrid = null;
    var selectedWash = null;

    
    getSessionInfo();

    $(document).ready(function () {
        $('#sitebody').removeClass('body-login');
        $(""#sitebody"").append(
            '<div id=""ajaxBusy"" class=""ajaxBusy""></div>'
        );
        $(""#ajaxBusy"").hide();
        checkLoginStatus();
        $('#pageTitleBar').html('<i class=""fas fa-barcode pageMainIcon""></i><span class=""pageT");
            WriteLiteral(@"itle"">DCap - Update Details</span>');

        initializeControls();
        initilizeEvents();

        checkIdle();

        if (isValidClient == Answer.Null) {
            window.location.href = ""Login"";
        }
        else if (isValidClient != null && clientconfig.dataCaptureMode != DataCaptureMode.Bulk) {
            if (clientconfig.dataCaptureMode == DataCaptureMode.Barcode) {
                msgBox.show('මෙම යන්ත්‍රයට බල්ක් අප්ඩේට් කිරීම සඳහා අවසර නැත.', 'This device is not authorized for Bulk update', 'අවවාදයයි / Warning', 'BU01', 'Warning', function () {
                    if (clientconfig.dataCaptureMode == DataCaptureMode.Barcode) {
                        window.location.href = ""Menu"";
                    }
                });
            }
        }
    });
    
    function resetControllers() {
        $(""#btnSearch"").attr('disabled', 'disabled');
        $(""#btnSearch"").attr('disabled', 'disabled');
        $(""#btnSearch"").attr('disabled', 'disabled');
    }

   ");
            WriteLiteral(@" function getSessionInfo() {
        isValidClient = sessionStorage.getItem(""IsValidClient"");
        clientconfig = JSON.parse(sessionStorage.getItem(""Clientconfig""));
        userPermissionList = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
        clientIP = sessionStorage.getItem(""ClientIP"");
    }

    function checkLoginStatus() {
        if (sessionStorage.getItem(""UserId"") != """") {
            $(""#toolBarLoggedinUser"").html(sessionStorage.getItem(""UserId""));
        } else {
            $(""#toolBarLoggedinUser"").html("""");
        }
        if (sessionStorage.getItem(""IsSignedIn"") == Answer.Null || sessionStorage.getItem(""IsSignedIn"") == Answer.No) {
            $(""#loginBar"").hide();
            window.location.href = ""Login"";
        } else {
            $(""#loginBar"").show();
        }
    }

    function initializeControls() {  
        console.log(sessionStorage, JSON.parse(sessionStorage.getItem(""Clientconfig"")));

        //Hide Filters
        $(""#color-fil");
            WriteLiteral("ter\").hide();\r\n        $(\"#shedule-filter\").hide();\r\n        console.log(\"outputs :\", $(\"#style\").val(), $(\"#shedule\").val(), $(\"#color\").val())\r\n\r\n        //Style Dropdown: START\r\n        $.ajax({\r\n            url: \'");
            EndContext();
            BeginContext(3322, 14, false);
#line 97 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(3336, 924, true);
            WriteLiteral(@"/Lookup/GetAllStyles',
            type: 'GET',
            dataType: 'json',
            //async: false,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (response) {
                $(""#style"").kendoDropDownList({""dataSource"": response, change: function(e) {loadShedule(this.value())}, filter: ""contains"",""dataTextField"": ""l1desc"",""dataValueField"": ""l1id"",""optionLabel"": ""select a style...""});
                loadShedule();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
            }
        });
        //Style Dropdown: START

        //Main Table: START
        var crudServiceBaseUrl = """);
            EndContext();
            BeginContext(4261, 14, false);
#line 119 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
                             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(4275, 6863, true);
            WriteLiteral(@"/BusinessLogics"",
        dataSource = new kendo.data.DataSource({
            transport: {
                        read: function(options) {
                        /* implementation omitted for brevity */
                        },
                        update: function(options) {
                            //console.log(""update row data: "", JSON.stringify(options.data.models));
                            if (true) {//userPermissionList.some(permission => permission.functionId === AccessibleFunctions.UpdateWashDetails)
                                $.ajax({
                                    url: crudServiceBaseUrl + ""/UpdateWashDetails"",
                                    type: 'POST',
                                    dataType: ""json"",
                                    data: JSON.stringify(options.data.models),
                                    contentType: 'application/json; charset=utf-8',
                                    success: function(result) {
                     ");
            WriteLiteral(@"                   refreshGrid();
                                        options.success(result);
                                    },
                                    error: function(result) {
                                        formatErrorMessage(jqXHR, errorThrown, ""Update Details"");
                                    options.error(result);
                                    }
                                });
                            } else {
                                msgBox.show('විස්තර යාවත්කාලීන කිරීමට ඔබට අවසර නැත.', 'You do not have permission to update the washing details.' , 'Warning', 'BU05', 'Warning', function(){
                                    refreshGrid();
                                    options.success([]);
                                });
                            }
                        }
                    },
                    batch: true,
                    pageSize: 5,
                    schema: {
                        mode");
            WriteLiteral(@"l: {
                            id: ""Key"",
                            fields: {
                                Key: { type: ""string"", editable: false, nullable: true },
                                L1: { type: ""number"", editable: false , validation: { required: true } },
                                Style: { type: ""string"", editable: false , validation: { required: true } },
                                L2: {type: ""number"", editable: false ,  validation: { required: true } },
                                Shedule: { type: ""string"", editable: false },
                                PO: { type: ""string"", editable: false , validation: { required: true } },
                                Zfeature: { type: ""string"", editable: false , validation: { required: true } },
                                L4: { type: ""number"", editable: false , validation: { required: true } },
                                Color: { type: ""string"", editable: false , validation: { required: true } },
        ");
            WriteLiteral(@"                        ApplyMode: { type: ""number"", editable: true , validation: { required: true } },
                                SubinPO: { type: ""string"", editable: true , validation: { required: true } },
                                WashType: { type: ""string"", editable: true , validation: { required: true } },
                                WashDescription: { type: ""string"", editable: true , validation: { required: true } },
                                GMTWeight: { type: ""number"", validation: { min: 0, required: true } },
                                WashDuration: { type: ""number"", validation: { min: 0, required: true } },
                                UnitPrice: { type: ""number"", validation: { required: true, min: 0} },
                                Category: { type: ""string"" },
                            }
                        }
                    }
                });

                $(""#request-grid"").kendoGrid({
                    dataSource: dataSource,
   ");
            WriteLiteral(@"                 toolbar: [""pdf"", ""excel""],
                    pdf: {
                        allPages: true,
                        author: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                        creator: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                        fileName: ""wash detail summary"",
                    },
                    excel: {
                        allPages: true,
                        fileName: ""style wise wash detail summary.xlsx"",
                        filterable: true
                    },
                    reorderable: true,
                    resizable: true,
                    scrollable: true,  
                    dataBound: OnGridDataBound,     
                    sortable: true,
                    filterable: true,
                    pageable: {
                        refresh: true,
                        pageSizes: true,
                        buttonCount: 5
                    },
");
            WriteLiteral(@"                    columns: [
                        { field:""Style"", title: ""Style Name"", width: ""120px"" },
                        { field:""Shedule"", title: ""Shedule"", width: ""120px"" },
                        { field:""PO"", title: ""PO"", width: ""120px"" },
                        { field:""Zfeature"", title: ""Z-feature"", width: ""120px"" },
                        { field:""Color"", title: ""Color"", width: ""170px"" },
                        { field:""ApplyMode"", title: ""Apply Mode"", width: ""120px"", hidden: true, editor: customEditorMode},
                        { field:""SubinPO"", title: ""Sub in PO"" },
                        { field:""WashType"", title: ""Wash Type"", width: ""170px"", editor: customEditorWashTypeText },
                        { field:""WashDescription"", title: ""Wash Process"", width: ""170px"", editor: customEditorWashDescriptionText },
                        { field:""GMTWeight"", title: ""Garment Weight (g)"" },
                        { field:""WashDuration"", title: ""Wash Duration (min)"" },
   ");
            WriteLiteral(@"                     { field:""UnitPrice"", title:""Unit Price"", format: ""{0:c}"", width: ""120px"" },
                        { field:""Category"", title: ""Category"" },
                        { command: [""edit""], title: ""&nbsp;"", width: ""90px"" }],
                    editable: ""popup""
                });
            //Main Table: END
    }

    function initilizeEvents() {
        
    }

    function loadShedule(style) {
        console.log(""outputs :"", $(""#style"").val(), $(""#shedule"").val(), $(""#color"").val())
        console.log(style);
        $(""#color-filter"").hide();
        if(style == undefined || style == null || style == """") {
        } else {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(11139, 14, false);
#line 235 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(11153, 1252, true);
            WriteLiteral(@"/Lookup/GetAllShedules?l1=' + style,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {
                    $(""#shedule-filter"").show();
                    $(""#shedule"").kendoDropDownList({""dataSource"": response, change: function(e) {loadColor(style, this.value())}, filter: ""contains"",""dataTextField"": ""l2desc"",""dataValueField"": ""l2id"",""optionLabel"": ""select a shedule...""});
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                }
            });
        }
    }

    function loadColor(style, color) {
        console.log(""outputs ");
            WriteLiteral(":\", $(\"#style\").val(), $(\"#shedule\").val(), $(\"#color\").val())\r\n        console.log(style, color);\r\n        if(color == undefined || color == null || color == \"\") {\r\n        } else {\r\n            $.ajax({\r\n                url: \'");
            EndContext();
            BeginContext(12406, 14, false);
#line 263 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(12420, 1198, true);
            WriteLiteral(@"/Lookup/GetAllColors?l1=' + style + '&l2=' + color,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {    
                    $(""#color-filter"").show();
                    $(""#color"").kendoDropDownList({""dataSource"": response, filter: ""contains"",""dataTextField"": ""l4desc"",""dataValueField"": ""l4id"",""optionLabel"": ""select a color...""});
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                }
            });
        }
    }

    function refreshGrid() {
        if($(""#style"").val() == undefined || $(""#shedule"").val() == undefined  |");
            WriteLiteral("| $(\"#color\").val() == undefined  ) {\r\n\r\n        } else {\r\n            $(\"#request-grid\").data(\'kendoGrid\').dataSource.data([]);\r\n            $.ajax({\r\n                url: \"");
            EndContext();
            BeginContext(13619, 14, false);
#line 291 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(13633, 6800, true);
            WriteLiteral(@"/Lookup/GetAllStyleSheduleColorDetails?l1id="" + ($(""#style"").val() != """" ? $(""#style"").val() : -1) + ""&l2id="" + ($(""#shedule"").val() != """" ? $(""#shedule"").val() : -1) + ""&l4id="" + ($(""#color"").val() != """" ? $(""#color"").val() : -1),
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {
                    //console.log(response);
                    if(response.length != 0){
                        gridData = [];
                        $.each(response, function (index, elements) {
                            var object = {
                                Key: elements.key,
                                L1: elements.l1,
                                S");
            WriteLiteral(@"tyle: elements.style,
                                L2: elements.l2,
                                Shedule: elements.shedule,
                                PO: elements.po,
                                Zfeature: elements.zfeature,
                                L4: elements.l4,
                                Color: elements.color,
                                ApplyMode: 4,
                                SubinPO: elements.subinPO,
                                WashDescription : elements.washDescription,
                                WashType: elements.washType,
                                GMTWeight: elements.gmtWeight == 0 ? """" : elements.gmtWeight,
                                WashDuration: elements.washDuration == 0 ? """" : elements.washDuration,
                                UnitPrice: elements.unitPrice,
                                Category: elements.category,
                            }
                            gridData.push(object);
                   ");
            WriteLiteral(@"         //console.log(""row data :"", object);
                        });
                        $(""#request-grid"").data('kendoGrid').dataSource.data(gridData);
                    } else {

                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                }
            });
        }
    }

    function OnGridDataBound(e) {
        var grid = $(""#request-grid"").data().kendoGrid; 
        var gridData = grid.dataSource.view();

        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            if (gridData[i].success == true) {
                var currentRow = grid.table.find(""tr[data-uid='"" + currentUid + ""']"");
                currentRow.css('background-color', 'lightgreen');
            }
        }

        var grid = e.sender;
        var rows = grid.tbody.find(""[role='row']"");

        rows.unbind(""click"")");
            WriteLiteral(@";
        rows.on(""click"", onClick)
    }

    function onClick(e) {
        if ($(e.target).hasClass(""k-checkbox-label"")) {
            return;
        }
        var row = $(e.target).closest(""tr"");
        var checkbox = $(row).find("".k-checkbox"");

        checkbox.click();
    };

    //Grid Controllers: START
    function customEditorMode(container, options) {
        $('<input id=""modeprocess-dropdown"" name=""ApplyMode"" class=""k-input"" style=""width:180px background-color: #f4511e85;""/>').appendTo(container);
        loadModehProcess();
    }

    function loadModehProcess() {
        $(""#modeprocess-dropdown"").kendoDropDownList({""dataSource"":[{""Text"":""Color (Default)"",""Value"":""4""},
                                                                {""Text"":""Style + Color"",""Value"":""3""},
                                                                {""Text"":""Style + Shedule"",""Value"":""2""},
                                                                {""Text"":""Style"",""Value"":""1""}],
  ");
            WriteLiteral(@"                                                              ""dataTextField"":""Text"",""dataValueField"":""Value""});
        $(""#modeprocess-dropdown"").val(4);
    }

    function customEditorWashDescriptionText(container, options){
        $('<textarea class=""k-textbox"" cols=""20"" id=""address"" name=""WashDescription"" rows=""2"" style=""width:200px;"">').appendTo(container);
    }

    function customEditorWashTypeText(container, options){
        $('<input id=""washtype-dropdown"" name=""WashType"" class=""k-input"" style=""width:180px background-color: #f4511e85;""/>').appendTo(container);
        loadWashType();
    }

    function loadWashType() {
        $(""#washtype-dropdown"").kendoDropDownList({""dataSource"":[{""Text"":""Wash"",""Value"":""Wash""},
                                                                {""Text"":""Wash+SF"",""Value"":""Wash+SF""},
                                                                {""Text"":""Dye"",""Value"":""Dye""},
                                                                {""Text"":");
            WriteLiteral(@"""Dye+SF"",""Value"":""Dye+SF""}],
                                                                ""dataTextField"":""Text"",""dataValueField"":""Value""});
        $(""#washtype-dropdown"").val(1);
    }

    function customEditorSFProcessText(container, options){
        $('<input id=""WashProcess"" class=""k-input"" name=""WashProcess"" style=""width:180px; border: none;"" readonly/>').appendTo(container);
    }

    function customEditorSFProcess(container, options) {
        $('<div><input id=""sfprocess"" class=""k-input"" name=""WashProcessID"" style=""width:180px; border: none;"" readonly/><button id=""searchforSFProcess"" class=""k-button"" onClick=""selectSFProcess()"" style=""width: 35px; padding-left: 5px; background-color: #FFA000; border: none; font-size: 17px; font-weight: 600; color: #000000;""><i class=""fas fa-search""></button></div>').appendTo(container);
    }

    function customEditorWashProcessText(container, options){
        $('<input id=""washprocess-text"" class=""k-input"" name=""WashType"" style=""width:180px; bo");
            WriteLiteral(@"rder: none;""/>').appendTo(container);
    }

    function customEditorWashProcess(container, options) {
        console.log((container, options));
        $('<div><input id=""washprocess"" class=""k-input"" name=""WashTypeID"" style=""width:180px; border: none;"" readonly/><button id=""searchforWashProcess"" class=""k-button"" onClick=""selectWashProcess()"" style=""width: 35px; padding-left: 5px; background-color: #FFA000; border: none; font-size: 17px; font-weight: 600; color: #000000;""><i class=""fas fa-search""></button></div>').appendTo(container);
        loadWashProcess();
    }

    function loadWashProcess() {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(20434, 14, false);
#line 423 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(20448, 2214, true);
            WriteLiteral(@"/Lookup/GetAllWashes',
            type: 'GET',
            dataType: 'json',
            async: false,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (response) {
                //console.log(""All washes dropdown data"", response);   
                $(""#washprocess-dropdown"").kendoDropDownList({""dataSource"": response, filter: ""contains"",""dataTextField"": ""washName"",""dataValueField"": ""washCatId"",""optionLabel"": ""select a wash...""});
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
            }
        });
    }

    //Grid Popup Windows: START
    //SF Process: START
    function selectSFProcess() {
            sfProcessSearchWindow = $(""#sfProcessSearchWindow"").kendoWindow({
       ");
            WriteLiteral(@"             width: ""80%"",
                    height: ""60%"",
                    title: ""SF Process Search"",
                    visible: false,
                    actions: [
                        ""Close""
                    ],
                    modal: true,
                    resizable: false,
                    draggable: false,
                    pinned: true,
                    activate: function () {
                        $(""#sfProcessSearchWindowTxt"").select();
                    },
                    open: function (e) { $(""html, body"").css(""overflow"", ""hidden""); },
                    close: onSFPRocessSearchClose
                }).data(""kendoWindow"");

            sfProcessSearchWindow.wrapper.find('.k-window-titlebar').css({
                    'background-color': 'black',
                    'font-size': '18px',
                    'color': 'white'
            });

                sfProcessSearchGrid = $(""#sfProcessSearchGrid"").kendoGrid({
                   ");
            WriteLiteral(" autoBind: true,\r\n                    dataSource: {\r\n                        transport: {\r\n                            read: {\r\n                                url: \'");
            EndContext();
            BeginContext(22663, 14, false);
#line 477 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(22677, 4619, true);
            WriteLiteral(@"/Lookup/GetAllSFProcess',
                                type: 'GET',
                                dataType: 'json',
                                async: false,
                                contentType: 'application/json; charset=utf-8'
                            }
                        },
                        schema: {
                            model: {
                                fields: {
                                    sfCatId: { type: ""string"" },
                                    sfName: { type: ""string"" },
                                }
                            }
                        }
                    },
                    height: ""75%"",
                    width: ""90%"",
                    scrollable: true,
                    change: onChangeSFProcess,
                    navigatable: true,
                    selectable: ""multiple cell"",
                    dataBound: function (e) {
                        var cell = this.tbody.find(""tr[");
            WriteLiteral(@"role='row'] td:first"");
                        this.current(cell);
                    },
                    columns: [
                        { field: ""sfCatId"", title: ""SF Code"", width: ""10%"" },
                        { field: ""sfName"", title: ""SF Name"", width: ""70%"" }
                    ]
                }).data(""kendoGrid"");

                var arrows = [38, 40];
                sfProcessSearchGrid.table.on(""keydown"", function (e) {
                    if (arrows.indexOf(e.keyCode) >= 0) {
                        setTimeout(function () {
                            sfProcessSearchGrid.select($(""#rowSelection_active_cell"").closest(""tr""));
                        }, 10);
                    }
                });

                sfProcessSearchWindow.one(""activate"", function () {
                    sfProcessSearchGrid.resize();
                }); 
                sfProcessSearchWindow.open().center();
                $(""#sfProcessSearchWindowTxt"").keydown(function (e) {
      ");
            WriteLiteral(@"              if (e.keyCode == 13) {
                        sfProcessSearchGrid.table.focus();
                    }
                });

                $(""#sfProcessSearchWindowTxt"").keyup(function () {
                    sfProcessSearchGrid.dataSource.read({ SFName: $(""#sfProcessSearchWindowTxt"").val() });
                });
    }

    function onSFPRocessSearchClose() {
        if ($(""#sfProcessSearchWindowTxt"").val().length = 0) {
            selectedSF = null;
        }
        if (selectedSF != null) {
            console.log(selectedSF);
            $(""#sfprocess"").val(selectedSF.sfCatId);
            $(""#WashProcess"").val(selectedSF.sfName);
        }
        else {
            //$(""#sfprocess"").val("""");
            //$(""#sfprocess-text"").val("""");
        }
        $(""#sfProcessSearchWindowTxt"").val("""");
        sfProcessSearchGrid.dataSource.data([]);
    }

    function onChangeSFProcess(arg) {
        var row = $(this.select()).closest(""tr"");
        var dataItem = ");
            WriteLiteral(@"sfProcessSearchGrid.dataItem(row);
        selectedSF = dataItem;
        sfProcessSearchGrid.dataSource.data([]);
        $(""#sfProcessSearchWindow"").data(""kendoWindow"").close();
    }
    //SF Process: END

    //Wash Type: START
    function selectWashProcess() {
            washTypeSearchWindow = $(""#washTypeSearchWindow"").kendoWindow({
                    width: ""80%"",
                    height: ""60%"",
                    title: ""Wash Type Search"",
                    visible: false,
                    actions: [
                        ""Close""
                    ],
                    modal: true,
                    resizable: false,
                    draggable: false,
                    pinned: true,
                    activate: function () {
                        $(""#washTypeSearchWindowTxt"").select();
                    },
                    open: function (e) { $(""html, body"").css(""overflow"", ""hidden""); },
                    close: onWashPRocessSearchClose
    ");
            WriteLiteral(@"            }).data(""kendoWindow"");

            washTypeSearchWindow.wrapper.find('.k-window-titlebar').css({
                    'background-color': 'black',
                    'font-size': '18px',
                    'color': 'white'
            });

                washTypeSearchGrid = $(""#washTypeSearchGrid"").kendoGrid({
                    autoBind: true,
                    dataSource: {
                        transport: {
                            read: {
                                url: '");
            EndContext();
            BeginContext(27297, 14, false);
#line 591 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\UpdateWashDetails.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(27311, 7546, true);
            WriteLiteral(@"/Lookup/GetAllWashes',
                                type: 'GET',
                                dataType: 'json',
                                async: false,
                                contentType: 'application/json; charset=utf-8'
                            }
                        },
                        schema: {
                            model: {
                                fields: {
                                    washCatId: { type: ""string"" },
                                    washName: { type: ""string"" },
                                }
                            }
                        }
                    },
                    height: ""75%"",
                    width: ""90%"",
                    scrollable: true,
                    change: onChangeWashProcess,
                    navigatable: true,
                    selectable: ""multiple cell"",
                    dataBound: function (e) {
                        var cell = this.tbody.find(""");
            WriteLiteral(@"tr[role='row'] td:first"");
                        this.current(cell);
                    },
                    columns: [
                        { field: ""washCatId"", title: ""Wash Code"", width: ""10%"" },
                        { field: ""washName"", title: ""Wash Name"", width: ""70%"" }
                    ]
                }).data(""kendoGrid"");

                var arrows = [38, 40];
                washTypeSearchGrid.table.on(""keydown"", function (e) {
                    if (arrows.indexOf(e.keyCode) >= 0) {
                        setTimeout(function () {
                            sfProcessSearchGrid.select($(""#rowSelection_active_cell"").closest(""tr""));
                        }, 10);
                    }
                });

                washTypeSearchWindow.one(""activate"", function () {
                    washTypeSearchGrid.resize();
                }); 
                washTypeSearchWindow.open().center();
                $(""#washTypeSearchWindowTxt"").keydown(function (e) {
");
            WriteLiteral(@"                    if (e.keyCode == 13) {
                        washTypeSearchGrid.table.focus();
                    }
                });

            $(""#washTypeSearchWindowTxt"").keyup(function () {
                washTypeSearchGrid.dataSource.read({ WashName: $(""#washTypeSearchWindowTxt"").val() });
            });
    }

    function onWashPRocessSearchClose() {
        if ($(""#washTypeSearchWindowTxt"").val().length = 0) {
            selectedWash = null;
        }
        if (selectedWash != null) {
            console.log(selectedWash);
            $(""#washprocess"").val(selectedWash.washCatId);
            $(""#washprocess-text"").val(selectedWash.washName);
        }
        else {
            //$(""#washprocess"").val("""");
            //$(""#washprocess-text"").val("""");
        }
        $(""#washTypeSearchWindowTxt"").val("""");
        washTypeSearchGrid.dataSource.data([]);
    }

    function onChangeWashProcess(arg) {
        var row = $(this.select()).closest(""tr"");
     ");
            WriteLiteral(@"   var dataItem = washTypeSearchGrid.dataItem(row);
        selectedWash = dataItem;
        washTypeSearchGrid.dataSource.data([]);
        $(""#washTypeSearchWindow"").data(""kendoWindow"").close();
    }
    //Wash Type: END

    //

    //Grid Controllers: END
</script>


<div>
    <div style=""margin-top: 5px; margin-left: 5px;"">
        <!--FILTER: BEGIN -->
        <div style=""margin: 5px; "">
            <div>
                <div style=""float: left; height: 45px; margin-right: 10px;"" id=""style-filter"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold; font-size: 17px;"">
                        <label for=""style"">
                            Style
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""style"" class=""bu-form-control"" style=""width: 210px; font-size: 17px !important;""/>
                    </div>
                </di");
            WriteLiteral(@"v>
                <div style=""float: left; height: 35px; margin-right: 10px;"" id=""shedule-filter"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold; font-size: 17px;"">
                        <label for=""shedule"">
                            Shedule
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""shedule"" class=""bu-form-control"" style=""width: 210px; font-size: 17px !important;""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"" id=""color-filter"">
                    <div style=""float: left; width: 150px; margin-right: 10px; text-align: right; font-weight: bold; font-size: 17px;"">
                        <label for=""color"">
                            Color
                        </label>
                    </div>
                    <div style=""float: left");
            WriteLiteral(@";"">
                        <input id=""color"" class=""bu-form-control"" style=""width: 210px; font-size: 17px !important;""/>
                    </div>
                </div>
                <!--<div style=""float: left; height: 35px; margin-right: 10px;"" id=""color-filter"">
                    <div style=""float: left; width: 150px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""status"">
                            Status
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""status"" class=""bu-form-control"" style=""width:180px""/>
                    </div>
                </div>-->
            </div>
            <div style=""clear: both;"">
                <div style=""float: left; height: 35px; margin-right: 10px; margin-bottom: 10px;"">
                    <div style=""float: left; width: 110px; margin-right: 10px; visibility: hidden;"">
                        Invisi");
            WriteLiteral(@"ble text
                    </div>
                    <div style=""float: left;"">
                        <button id=""filterGatePassRequestButton"" class=""k-button"" style=""width: 180px; padding-left: 5px; background-color: green; border: none; font-size: 17px; font-weight: 600; color: #000000;"" onclick=""refreshGrid()"">
                            <span class=""k-icon k-i-search"" style=""margin-right: 7px; text-align:left;""></span><span>Search</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!--FILTER: END -->

    <!--DETAILS PAGE GRID: BEGIN -->
    <div id=""request-grid"" style=""clear: both; padding-top: 5px;"">
</div>

<!-- Wash Process Select Window: START -->
<div id=""sfProcessSearchWindow"" class=""styleSearchWindow"" hidden=""hidden"">
    <input type=""text"" class=""form-control"" placeholder=""Enter Process"" id=""sfProcessSearchWindowTxt"" style=""width:25%"">
    <br>
    <div id=""sfProcessSearchGrid"">
</div>
<");
            WriteLiteral(@"!-- Wash Process Select Window: START -->

<!-- Wash Type Select Window: START -->
<div id=""washTypeSearchWindow"" class=""styleSearchWindow"" hidden=""hidden"">
    <input type=""text"" class=""form-control"" placeholder=""Enter Wash Type"" id=""washTypeSearchWindowTxt"" style=""width:25%"">
    <br>
    <div id=""washTypeSearchGrid"">
</div>
<!-- Wash Type Select Window: START -->
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
