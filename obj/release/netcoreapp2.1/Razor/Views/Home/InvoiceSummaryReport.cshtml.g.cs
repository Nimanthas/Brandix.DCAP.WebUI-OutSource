#pragma checksum "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\InvoiceSummaryReport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c71e59e91a79a2a743df7331e42ef59dbb9b3ffd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_InvoiceSummaryReport), @"mvc.1.0.view", @"/Views/Home/InvoiceSummaryReport.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/InvoiceSummaryReport.cshtml", typeof(AspNetCore.Views_Home_InvoiceSummaryReport))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI;

#line default
#line hidden
#line 2 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c71e59e91a79a2a743df7331e42ef59dbb9b3ffd", @"/Views/Home/InvoiceSummaryReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d6ac14fb493c2990ba4a5667bd32d8705427078c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_InvoiceSummaryReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\InvoiceSummaryReport.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(32, 15052, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    var selectedDate = null;
    var fromdatePicker = null;
    var todatePicker = null;
    var scheduleObject = null;
    var operationList = null;
    var todayDate = null;
    var scrapItems = [];
    var SoberSheetMode = false;
    var SSheetSCHNo = null;
    var SSheetSCHId = null;
    var SSAlreadySaved = false;

    
    //views
    var createNewTag = null;
    var addItemsGrid = null;
    var isvalidbarcode = false;

    var selectedSF = null;
    var washTypeSearchWindow = null;
    var washTypeSearchGrid = null;
    var sfProcessSearchGrid = null;
    var selectedWash = null;

    
    getSessionInfo();

    $(document).ready(function () {
        $('#sitebody').removeClass('body-login');
        $(""#sitebody"").append(
            '<div id=""ajaxBusy"" class=""ajaxBusy""></div>'
        );
        $(""#ajaxBusy"").hide();
        checkLoginStatus();
        $('#pageTitleBar').html('<i class=""fas fa-barcode pageMainIcon""></i><span class=");
            WriteLiteral(@"""pageTitle"">DCap - Invoice Summary Report</span>');

        initializeControls();
        //initilizeEvents();

        checkIdle();

        if (isValidClient == Answer.Null) {
            window.location.href = ""Login"";
        }
        else if (isValidClient != null && clientconfig.dataCaptureMode != DataCaptureMode.Bulk) {
            if (clientconfig.dataCaptureMode == DataCaptureMode.Barcode) {
                msgBox.show('මෙම යන්ත්‍රයට බල්ක් අප්ඩේට් කිරීම සඳහා අවසර නැත.', 'This device is not authorized for Bulk update', 'අවවාදයයි / Warning', 'BU01', 'Warning', function () {
                    if (clientconfig.dataCaptureMode == DataCaptureMode.Barcode) {
                        window.location.href = ""Menu"";
                    }
                });
            }
        }
    });
    
    function resetControllers() {
        $(""#btnSearch"").attr('disabled', 'disabled');
        $(""#btnSearch"").attr('disabled', 'disabled');
        $(""#btnSearch"").attr('disabled', 'disabled'");
            WriteLiteral(@");
    }

    function getSessionInfo() {
        isValidClient = sessionStorage.getItem(""IsValidClient"");
        clientconfig = JSON.parse(sessionStorage.getItem(""Clientconfig""));
        userPermissionList = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
        clientIP = sessionStorage.getItem(""ClientIP"");
    }

    function checkLoginStatus() {
        if (sessionStorage.getItem(""UserId"") != """") {
            $(""#toolBarLoggedinUser"").html(sessionStorage.getItem(""UserId""));
        } else {
            $(""#toolBarLoggedinUser"").html("""");
        }
        if (sessionStorage.getItem(""IsSignedIn"") == Answer.Null || sessionStorage.getItem(""IsSignedIn"") == Answer.No) {
            $(""#loginBar"").hide();
            window.location.href = ""Login"";
        } else {
            $(""#loginBar"").show();
        }
    }

    function initializeControls() {
        //console.log(sessionStorage, JSON.parse(sessionStorage.getItem(""Clientconfig"")));
        var todayDate = new Dat");
            WriteLiteral(@"e();

        //Hide Filters
        
        $(""#type-filter"").hide();

        hideGrids();

        $(""#view"").kendoDropDownList({dataSource:[{""Text"":""Summary"",""Value"":""1""}],
                                                    ""dataTextField"":""Text"",""dataValueField"":""Value""}); //{""Text"":""Summary"",""Value"":""1""},{""Text"":""Detail Summary"",""Value"":""2""},

        $(""#DateToFilter"").kendoDatePicker({format:""yyyy-MM-dd"",min:new Date(1900,0,1,0,0,0,0),max:new Date(2099,11,31,0,0,0,0)});
        $(""#DateFromFilter"").kendoDatePicker({format:""yyyy-MM-dd"",min:new Date(1900,0,1,0,0,0,0),max:new Date(2099,11,31,0,0,0,0)});
        $(""#DateToFilter"").data(""kendoDatePicker"").value(todayDate);
        $(""#MonthFilter"").kendoDatePicker({
                    start: ""year"",
                    depth: ""year"",
                    format: ""yyyy-MM"",
                    dateInput: true
                });


            //Main Table: START
                dataSource01 = new kendo.data.DataSource({
           ");
            WriteLiteral(@"         batch: true,
                    pageSize: 10,
                    schema: {
                        model: {
                            id: ""Key"",
                            fields: {
                                Key: { type: ""string"", editable: false , validation: { required: true } },
                                Identity: { type: ""string"", editable: false , validation: { required: true } },
                                Run_Number: { type: ""string"", editable: false , validation: { required: true } },
                                Group_Number: { type: ""string"", editable: false , validation: { required: true } },
                                Division: { type: ""string"", editable: false , validation: { required: true } },
                                Customer_Number: { type: ""string"", editable: false , validation: { required: true } },
                                Payer: { type: ""string"", editable: false , validation: { required: true } },
                          ");
            WriteLiteral(@"      Invoice_Number: { type: ""string"", editable: false , validation: { required: true } },
                                Invoice_Date: { type: ""datetime"", editable: false , validation: { required: true } },
                                Due_Date: { type: ""datetime"", editable: false , validation: { required: true } },
                                Invoice_Amount_For: { type: ""string"", editable: false , validation: { required: true } },
                                VAT_Code: { type: ""string"", editable: false , validation: { required: true } },
                                Exchange_Rate: { type: ""string"", editable: false , validation: { required: true } },
                                Voucher_Text: { type: ""string"", editable: false , validation: { required: true } },
                                Cash_Discount_Amount: { type: ""string"", editable: false , validation: { required: true } },
                                Currency: { type: ""string"", editable: false , validation: { required:");
            WriteLiteral(@" true } },
                                Exchange_Rate_Type: { type: ""string"", editable: false , validation: { required: true } },
                                Cash_Discount_Date_1: { type: ""string"", editable: false , validation: { required: true } },
                                Cash_Discount_Percen_1: { type: ""string"", editable: false , validation: { required: true } },
                                Cash_Discount_Date_2: { type: ""string"", editable: false , validation: { required: true } },
                                Cash_Discount_Percen_2: { type: ""string"", editable: false , validation: { required: true } },
                                Cash_Discount_Date_3: { type: ""string"", editable: false , validation: { required: true } },
                                Dimension_1: { type: ""string"", editable: false , validation: { required: true } },
                                Dimension_2: { type: ""string"", editable: false , validation: { required: true } },
                            ");
            WriteLiteral(@"    Dimension_3: { type: ""string"", editable: false , validation: { required: true } },
                                Dimension_4: { type: ""string"", editable: false , validation: { required: true } },
                                Dimension_5: { type: ""string"", editable: false , validation: { required: true } },
                                Dimension_6: { type: ""string"", editable: false , validation: { required: true } },
                                Dimension_7: { type: ""string"", editable: false , validation: { required: true } },
                                QTY: { type: ""string"", editable: false , validation: { required: true } },
                            }
                        }
                    },
                });

                //Summary
                $(""#request-grid-1"").kendoGrid({
                    dataSource: dataSource01,
                    toolbar: [""pdf"",""excel""],
                    pdf: {
                        allPages: true,
                   ");
            WriteLiteral(@"     author: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                        creator: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                        date: (new Date()).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric'}),
                        fileName: ""invoice summary report""
                    },
                    excel: {
                        allPages: true,
                        fileName: ""invoice summary report (acc.).xlsx"",
                        filterable: true
                    },
                    reorderable: true,
                    resizable: true,
                    scrollable: true,  
                    dataBound: OnGridDataBound,     
                    sortable: true,
                    filterable: true,
                    pageable: {
                        pageSizes: true,
                        buttonCount: 10
                    },
                    columns: [
            ");
            WriteLiteral(@"            { field:""Key"", title: ""Style Name"", hidden: true, width: ""120px"" },
                        { field:""Identity"", title: ""identity"", width: ""120px"" },
                        { field:""Run_Number"", title: ""run number"", width: ""120px"" },
                        { field:""Group_Number"", title: ""group number"", width: ""120px"" },
                        { field:""Division"", title: ""division"", width: ""250px"" },
                        { field:""Customer_Number"", title: ""customer number"", width: ""140px"" },
                        { field:""Payer"", title: ""payer"", width: ""170px"" },
                        { field:""Invoice_Number"", title: ""invoice number"", width: ""170px"" },
                        { field:""Invoice_Date"", title: ""invoice date"", width: ""170px"" },
                        { field:""Due_Date"", title: ""due date"", width: ""170px"" },
                        { field:""Invoice_Amount_For"", title: ""invoice amount - for"", width: ""170px"", format:""{0:c2}"" },
                        { field:""VAT_Code"", ");
            WriteLiteral(@"title: ""VAT code"", width: ""170px"" },
                        { field:""Exchange_Rate"", title: ""exchange rate"", width: ""170px"" },
                        { field:""Voucher_Text"", title: ""voucher text"", width: ""170px"" },
                        { field:""Cash_Discount_Amount"", title: ""cash discount amount"", width: ""170px"" },
                        { field:""Currency"", title: ""currency"", width: ""170px"" },
                        { field:""Exchange_Rate_Type"", title: ""exchange rate type"", width: ""170px"" },
                        { field:""Cash_Discount_Date_1"", title: ""cash discount date 1"", width: ""170px"" },
                        { field:""Cash_Discount_Percen_1"", title: ""cash discount percen"", width: ""170px"" },
                        { field:""Cash_Discount_Date_2"", title: ""cash discount date 2"", width: ""170px"" },
                        { field:""Cash_Discount_Percen_2"", title: ""cash discount percen"", width: ""170px"" },
                        { field:""Cash_Discount_Date_3"", title: ""cash discount date 3"",");
            WriteLiteral(@" width: ""170px"" },
                        { field:""Dimension_1"", title: ""Dimension 1"", width: ""170px"" },
                        { field:""Dimension_2"", title: ""Dimension 2"", width: ""170px"" },
                        { field:""Dimension_3"", title: ""Dimension 3"", width: ""170px"" },
                        { field:""Dimension_4"", title: ""Dimension 4"", width: ""170px"" },
                        { field:""Dimension_5"", title: ""Dimension 5"", width: ""170px"" },
                        { field:""Dimension_6"", title: ""Dimension 6"", width: ""170px"" },
                        { field:""Dimension_7"", title: ""Dimension 7"", width: ""170px"" },
                        { field:""QTY"", title: ""QTY"", width: ""170px"" },
                    ]
                });
    }

    function hideGrids(){
        $(""#request-grid-1"").hide();
        $(""#request-grid-2"").hide();
        $(""#request-grid-3"").hide();
        $(""#request-grid-4"").hide();
        $(""#request-grid-5"").hide();
    }

    function updatehGrid() {
       ");
            WriteLiteral(@" var selectedView = $(""#view"").val();

        var todate = null;
        var fromdate = null;
        var month = $(""#MonthFilter"").val();
        if(month == ""year-month""){
            todate = $(""#DateToFilter"").val();
            if (todate != """") {
                todate + ""%2023:59:59"";
            } else {
                todate = ""0001-01-01%2023:59:59"";
            }

            fromdate = $(""#DateFromFilter"").val();
            if (fromdate != """") {
                fromdate + ""%2000:00:00"";
            } else {
                fromdate = ""0001-01-01%2000:00:00"";
            }
        } else {
            //var mo = parseInt(month.split(""-"",2)[1]) == 12 ? 1 : (parseInt(month.split(""-"",2)[1]) + 1);
            //todate = month.split(""-"",2)[0] + ""-"" + (mo < 10 ? (""0"" + mo.toString()) : mo.toString()) + ""-01%2000:00:00""
            //var n = new Date(parseInt(month.split(""-"",2)[0]),parseInt(month.split(""-"",2)[1]) == 12 ? 1 : (parseInt(month.split(""-"",2)[1])),0).toLocaleDateString(");
            WriteLiteral(@"""en-US"",{ month: '2-digit', day: '2-digit', year: 'numeric'});
            todate = month + ""-"" + new Date(parseInt(month.split(""-"",2)[0]),parseInt(month.split(""-"",2)[1]) == 12 ? 1 : (parseInt(month.split(""-"",2)[1])),0).getDate() + ""%2000:00:00""; //n.toString() + ""%2000:00:00"";

            fromdate = month + ""-01%2000:00:00"";
        }

        var Productionwarehouse = $(""#ProductionWarehouseFilter"").val();

        hideGrids();

        if(selectedView == 1) {
            refreshGrid(1, 1, fromdate, todate, Productionwarehouse);
            $(""#request-grid-1"").show();
        } else if(selectedView == 2) {
            refreshGrid(1, 1, fromdate, todate, Productionwarehouse);
            $(""#request-grid-2"").show();
        } else if(selectedView == 3) {
            refreshGrid(2, 2, fromdate, todate, Productionwarehouse);
            $(""#request-grid-3"").show();
        } else if(selectedView == 4) {
            refreshGrid(2, 1, fromdate, todate, Productionwarehouse);
            $(""");
            WriteLiteral(@"#request-grid-4"").show();
        } else if(selectedView == 5) {
            refreshGrid(1, 1, fromdate, todate, Productionwarehouse);
            $(""#request-grid-5"").show();
        } else {
            refreshGrid(1, 1, fromdate, todate, Productionwarehouse);
            $(""#request-grid-1"").show();
        }
    }

    function refreshGrid(mode, txnMode, fromdate, todate, Productionwarehouse) {
        if(fromdate == null) {
            fromdate = ""2000-01-01%2000:00:00"";
        }

        if(todate == null) {
            todate = ""4444-01-01%2000:00:00"";
        }
        
        if(mode == null || txnMode == null) {

        } else {
            $.ajax({
                url: """);
            EndContext();
            BeginContext(15085, 14, false);
#line 291 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\InvoiceSummaryReport.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(15099, 11108, true);
            WriteLiteral(@"/Dashboard/GetBFLInvoiceSummaryReport?fromDate="" + fromdate + '&toDate=' + todate,
                type: 'GET',
                dataType: 'json',
                //async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {
                    $(""#request-grid-1"").data('kendoGrid').dataSource.data([]);
                    //$(""#request-grid-2"").data('kendoGrid').dataSource.data([]);
                    //$(""#request-grid-3"").data('kendoGrid').dataSource.data([]);
                    //$(""#request-grid-4"").data('kendoGrid').dataSource.data([]);
                    //$(""#request-grid-5"").data('kendoGrid').dataSource.data([]);
                    //console.log(response);
                    if(response != undefined) {
                        ");
            WriteLiteral(@"console.log(response);
                        if(response.length != 0) {
                            gridData = [];
                            $.each(response, function (index, elements) {
                                var object = {
                                    Key: elements.invoice_Number,
                                    Identity: """",
                                    Run_Number: """",
                                    Group_Number: """",
                                    Division: elements.division,
                                    Customer_Number: elements.customer_Number,
                                    Payer: elements.payer,
                                    Invoice_Number: elements.invoice_Number,
                                    Invoice_Date: ((new Date(elements.invoice_Date)).getUTCFullYear()).toString()  + ((((new Date(elements.invoice_Date)).getUTCMonth() + 1).toString()).length != 2 ? ""0"" + (((new Date(elements.invoice_Date)).getUTCMonth() + 1).toString())");
            WriteLiteral(@" : (((new Date(elements.invoice_Date)).getUTCMonth() + 1).toString())) + ((((new Date(elements.invoice_Date)).getUTCDate() + 1).toString()).length != 2 ? ""0"" + (((new Date(elements.invoice_Date)).getUTCDate() + 1).toString()) : (((new Date(elements.invoice_Date)).getUTCDate() + 1).toString())),
                                    Due_Date: """",
                                    Invoice_Amount_For: elements.invoice_Amount_For,
                                    VAT_Code: elements.vat,
                                    Exchange_Rate: elements.exchangeRate,
                                    Voucher_Text: ""INTERNAL"",
                                    Cash_Discount_Amount: """",
                                    Currency: ""USD"",
                                    Exchange_Rate_Type: ""01"",
                                    Cash_Discount_Date_1: """",
                                    Cash_Discount_Percen_1: """",
                                    Cash_Discount_Date_2: """",
                    ");
            WriteLiteral(@"                Cash_Discount_Percen_2: """",
                                    Cash_Discount_Date_3: """",
                                    Dimension_1: elements.dimension_1,
                                    Dimension_2: ""PROD"",
                                    Dimension_3: ""INTERNAL"",
                                    Dimension_4: """",
                                    Dimension_5: """",
                                    Dimension_6: """",
                                    Dimension_7: """",
                                    QTY: elements.totalQty,
                            
                                }
                                gridData.push(object);
                                //console.log(""row data :"", object);
                            });
                            $(""#request-grid-1"").data('kendoGrid').dataSource.data(gridData);
                            //$(""#request-grid-2"").data('kendoGrid').dataSource.data(gridData);
                            //$");
            WriteLiteral(@"(""#request-grid-3"").data('kendoGrid').dataSource.data(gridData);
                            //$(""#request-grid-4"").data('kendoGrid').dataSource.data(gridData);
                            //$(""#request-grid-5"").data('kendoGrid').dataSource.data(gridData);
                        } else {
                            msgBox.show('ප්‍රතිචාරය නිර්වචනය කර නැත. API අසමත් විය.', 'The response is undefined. API failed.', 'Warning', 'BU05', 'Warning', null);
                        }
                    } else {
                        msgBox.show('ප්‍රතිචාරය නිර්වචනය කර නැත. API අසමත් විය.' , 'The response is undefined. API failed.', 'Warning', 'BU05', 'Warning', null);
                    }   
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""Dispatch"");
                }
            });
        }
    }

    function OnGridDataBound(e) {
        var grid = $(""#request-grid-1"").data().kendoGrid; 
      ");
            WriteLiteral(@"  var gridData = grid.dataSource.view();

        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            if (gridData[i].success == true) {
                var currentRow = grid.table.find(""tr[data-uid='"" + currentUid + ""']"");
                currentRow.css('background-color', 'lightgreen');
            }
        }

        var grid = e.sender;
        var rows = grid.tbody.find(""[role='row']"");

        rows.unbind(""click"");
        rows.on(""click"", onClick)
    }

    function onClick(e) {
        if ($(e.target).hasClass(""k-checkbox-label"")) {
            return;
        }
        var row = $(e.target).closest(""tr"");
        var checkbox = $(row).find("".k-checkbox"");

        checkbox.click();
    };

    //Grid Controllers: END
</script>


<div>
    <div style=""margin-top: 5px; margin-left: 5px;"">
        <!--FILTER: BEGIN -->
        <div style=""margin: 5px; "">
            <div>
                <div style=""float: left; hei");
            WriteLiteral(@"ght: 45px; margin-right: 10px;"" id=""view-filter"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold; font-size: 17px;"">
                        <label for=""view"">
                            View
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""view"" class=""bu-form-control"" style=""width: 290px; font-size: 17px !important;""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"" id=""type-filter"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold; font-size: 17px;"">
                        <label for=""type"">
                            Type
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""type"" class=""bu-form-co");
            WriteLiteral(@"ntrol"" style=""width: 210px; font-size: 17px !important;""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""DateFromFilter"">
                            From
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""DateFromFilter"" class=""bu-form-control"" style=""width: 210px; font-size: 17px !important;""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""DateToFilter"">
                            To
                        </label>
                    ");
            WriteLiteral(@"</div>
                    <div style=""float: left;"">
                        <input id=""DateToFilter"" class=""bu-form-control"" style=""width: 210px; font-size: 17px !important;""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""MonthFilter"">
                            Month
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""MonthFilter"" class=""bu-form-control"" style=""width: 210px; font-size: 17px !important;""/>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"" hidden=""hidden"">
                    <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
     ");
            WriteLiteral(@"                   <label for=""ProductionWarehouseFilter"">
                            Production Warehouse
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input id=""ProductionWarehouseFilter"" class=""bu-form-control"" style=""width: 210px; font-size: 17px !important;""/>
                    </div>
                </div>
            </div>
            <div style=""clear: both;"">
                <div style=""float: left; height: 35px; margin-right: 10px; margin-bottom: 10px;"">
                    <div style=""float: left; width: 110px; margin-right: 10px; visibility: hidden;"">
                        Invisible text
                    </div>
                    <div style=""float: left;"">
                        <button id=""filterGatePassRequestButton"" class=""k-button"" style=""width: 180px; padding-left: 5px; background-color: green; border: none; font-size: 17px; font-weight: 600; color: #000000;"" onclick=""updatehGrid()""");
            WriteLiteral(@">
                            <span class=""k-icon k-i-search"" style=""margin-right: 7px; text-align:left;""></span><span>Search</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!--FILTER: END -->

    <!--DETAILS PAGE GRID: BEGIN -->
    <div id=""r01"">
        <div id=""request-grid-1"" style=""clear: both; padding-top: 5px;"">
    </div>
    <div id=""r02"">
        <div id=""request-grid-2"" style=""clear: both; padding-top: 5px;"">
    </div>
    <div id=""r03""> 
        <div id=""request-grid-3"" style=""clear: both; padding-top: 5px;"">
    </div>
    <div id=""r04"">
        <div id=""request-grid-4"" style=""clear: both; padding-top: 5px;"">
    </div>
    <div id=""r05"">
        <div id=""request-grid-5"" style=""clear: both; padding-top: 5px;"">
    </div>
</div>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
