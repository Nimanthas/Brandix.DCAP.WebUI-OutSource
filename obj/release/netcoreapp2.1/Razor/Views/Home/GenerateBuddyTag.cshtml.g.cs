#pragma checksum "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "50c1dc41ae8e187c1d1673f443d88b73e928452e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_GenerateBuddyTag), @"mvc.1.0.view", @"/Views/Home/GenerateBuddyTag.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/GenerateBuddyTag.cshtml", typeof(AspNetCore.Views_Home_GenerateBuddyTag))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI;

#line default
#line hidden
#line 2 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"50c1dc41ae8e187c1d1673f443d88b73e928452e", @"/Views/Home/GenerateBuddyTag.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d6ac14fb493c2990ba4a5667bd32d8705427078c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_GenerateBuddyTag : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "size-a4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "size-letter", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "size-executive", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(32, 20969, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    var selectedDate = null;
    var fromdatePicker = null;
    var todatePicker = null;
    var scheduleObject = null;
    var operationList = null;
    var todayDate = null;
    var scrapItems = [];
    var SoberSheetMode = false;
    var SSheetSCHNo = null;
    var SSheetSCHId = null;
    var SSAlreadySaved = false;
    var clie6

    //views
    var createNewTag = null;
    var addItemsGrid = null;
    var isvalidbarcode = false;

    var TotalQty = 0;

    var rowDataItem = null;
    var travelcode = null;

    var clickedbutton = 0;
    var expandedTableWindow = null;


    function checkLoginStatus() {
        if (sessionStorage.getItem(""UserId"") != """") {
            $(""#toolBarLoggedinUser"").html(sessionStorage.getItem(""UserId""));
        } else {
            $(""#toolBarLoggedinUser"").html("""");
        }
        if (sessionStorage.getItem(""IsSignedIn"") == Answer.Null || sessionStorage.getItem(""IsSignedIn"") == Answer.No) {
           ");
            WriteLiteral(@" $(""#loginBar"").hide();
            window.location.href = ""Login"";
        } else {
            $(""#loginBar"").show();
        }
    }

    function initializeControls() {
        DisableInputs();

        if (true) {//userPermissionList.some(permission => permission.functionId === AccessibleDispatchFunctions.GenerateTravelBarcode)
            $(""#createNewTTag"").show();
        } else {
           $(""#createNewTTag"").hide(); 
        }
        //console.log(sessionStorage, JSON.parse(sessionStorage.getItem(""Clientconfig""))),
        //Data selectors
        $(""#date-created-filter"").kendoDatePicker({format:""yyyy-MM-dd"",min:new Date(1900,0,1,0,0,0,0),max:new Date(2099,11,31,0,0,0,0)});
        $(""#allocation-date"").kendoDatePicker({format:""yyyy-MM-dd"",min:new Date(1900,0,1,0,0,0,0),max:new Date(2099,11,31,0,0,0,0)});
        todayDate = new Date();
        $(""#date-created-filter"").data(""kendoDatePicker"").value(todayDate);
        $(""#allocation-date"").data(""kendoDatePicker"").value(today");
            WriteLiteral(@"Date);
        
	    $(""#status-filter"").kendoDropDownList({""dataSource"":[{""Text"":""All"",""Value"":""0""},
                                                            {""Text"":""Production Pending"",""Value"":""1""},
                                                            {""Text"":""Production Started"",""Value"":""2""},
                                                            {""Text"":""Production Finished"",""Value"":""3""},
                                                            {""Text"":""Dispatched"",""Value"":""4""}],
                                                ""dataTextField"":""Text"",""dataValueField"":""Value""});
        //End of data selections
        //Create new Travel tag : START
        resetBagBarcodeFields();

        //Add all garments shortcut
        shortcut.add(""F5"", function () {
            allocateFromBagBarcode();
        });

        //Split and Add garments shortcut
        shortcut.add(""F6"", function () {
            //openAddItemWindow();
        });

        $(""#bag-barcode-text""");
            WriteLiteral(@").keydown(function (e) {
            if (e.keyCode == 13) {
                if ($('#bag-barcode-text').val() != """"){
                    loadBagBarcodeDetails();
                    return;         
                }   
            }
        });

        $(""#allocation-barcode-text"").keydown(function (e) {
            if (e.keyCode == 13) {
                if ($('#allocation-barcode-text').val() != """"){
                    proccedAllocation();
                    return;         
                }   
            }
        });

        $(""#TravelBarcode"").keydown(function (e) {
            if (e.keyCode == 13) {
                RefreshRequestGrid();
            }
        });

        $(""#TravelBarcode"").keydown(function (e) {
            resetBagBarcodeFields();
        });
        //Create new Travel tag : END

        //For Request loading
        //Grid definit      ion
        $(""#traveltag-grid"").kendoGrid({
            toolbar: [""pdf"", ""excel""],
            pdf: {
      ");
            WriteLiteral(@"          allPages: true,
                author: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                creator: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                date: (new Date()).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric'}),
                fileName: ""tag summary""
            },
            excel: {
                allPages: true,
                fileName: ""buddy-tag-summary.xlsx"",
                filterable: true
            },
            dataSource: {
                schema: {
                    model: {
                        fields: {
                            TravelBarCodeNo: { type: ""string"", editable: false },
                            Status: { type: ""string"", editable: false },
                            Qty01: { type: ""number"", editable: false },
                            JobQty: { type: ""number"", editable: false },
                            Weight: { type: ""number"", editable: fal");
            WriteLiteral(@"se },
                            TrollyNo: { type: ""string"", editable: false },
                            AllocationDate: { type: ""date"",editable: true },
                            Remarks: { type: ""string"",editable: true },
                            CreatedDateTime: { type: ""date"",editable: true },
                            CreatedBy: { type: ""string"",editable: true },
                        },
                    }
                },
                batch: true,
                pageSize: 5,
            },
            scrollable: true,
            dataBound: OnGridDataBound,        
            sortable: true,
            filterable: true,
            pageable: true,
            pageable: {
                    pageSizes: true,
                    buttonCount: 10
                },
            columns:[
                        {title:""Travel BarCode"",field:""TravelBarCodeNo"",width:""180px""},
                        {title:""Status"",field:""Status"",width:""200px"", template: ""#if (St");
            WriteLiteral(@"atus == '1' ) {# <div class='mb-2 mr-2 badge badge-primary'>Production Pending"" + 
                        ""</div> #} else if (Status == '156'){ # <div class='mb-2 mr-2 badge badge-secondary'>Production Started"" +
                        ""</div> #} else if (Status == '157'){ # <div class='mb-2 mr-2 badge badge-success'>Production Finished"" +
                        ""</div> #}#"" },
                        {title:""Print"",field:""Status"",width:""200px"", filterable: false,encoded:true, template: ""#if (parseInt(Status) == 1) {# <div><button id='printGatePassRequestButton' class='k-button print-request-status' style='width: 92%; height: 40px;' onclick='setButtonStatus(1)'><span class='k-icon k-i-print' style='margin-right: 7px; text-align:left;'></span><span>Print</span></button>"" + 
                        ""</div> #} else { # <div style='text-align: center;''><button id='printGatePassRequestButton' class='k-button print-request-status' style='width: 92%; height: 40px;' onclick='setButtonStatus(1)'><span class='");
            WriteLiteral(@"k-icon k-i-print' style='margin-right: 7px; text-align:left;'></span><span>Print (Copy)</span></button>"" + 
                        ""</div> #}#"" },
                        {title:""Quantity"",field:""Qty01"",width:""120px"",encoded:true},
                        {title:""Job Quantity"",field:""JobQty"",width:""140px"",encoded:true},
                        {title:""Weight"",field:""Weight"",width:""130px"",encoded:true},
                        {title:""Trolly No"",field:""TrollyNo"",width:""130px"",encoded:true},
                        {title:""Allocation Date"",field:""AllocationDate"",width:""160px"",format:""{0:dd-MM-yyyy hh:mm:ss}"",filterable:{operators:{date:{gte:""From"",lte:""To""}}},encoded:true},
                        {title:""Remarks"",field:""Remarks"",encoded:true},
                        {title:""Created Date Time"",field:""CreatedDateTime"",encoded:true},
                        {title:""Created By"",field:""CreatedBy"",encoded:true},
                    ],
        });

        //Item Grid Initilize
        $(""#bag-barcode");
            WriteLiteral(@"-details-table"").kendoGrid({
            dataSource: {
                schema: {
                    model: {
                        id: ""Bag_Barcode"",
                        fields: {
                            Seq: { type: ""number"", editable: false },
                            Wfid: { type: ""number"", editable: false },
                            Depid: { type: ""number"", editable: false },
                            Barcode: { type: ""string"", editable: false },
                            Mode: { type: ""number"", editable: false },
                            Bag_Barcode: { type: ""string"", editable: false },
                            Style: { type: ""string"", editable: false },
                            L1: { type: ""number"", editable: false },
                            Shedule: { type: ""string"", editable: false },
                            PO: { type: ""string"", editable: false },
                            Z_Feature: { type: ""string"", editable: false },
                        ");
            WriteLiteral(@"    L2: { type: ""number"", editable: false },
                            L3: { type: ""number"", editable: false },
                            Color: { type: ""string"", editable: false },
                            L4: { type: ""number"", editable: false },
                            L5: { type: ""number"", editable: false },
                            Bag_Quantity: { type: ""number"", editable: false },
                            Allocate_Quantity: { type: ""number"", editable: true },
                            Remarks: { editable: true }
                        },
                    }
                },
                batch: true,
                aggregate: [{ field: ""Bag_Quantity"", aggregate: ""sum"" },{ field: ""Allocate_Quantity"", aggregate: ""sum"" }]
            },
            navigatable: true,
            scrollable: true,   
            sortable: true,
            filterable: true,
            columns: [
                { field: ""Seq"", title: ""Seq"", width: ""110px"", hidden:true },
      ");
            WriteLiteral(@"          { field: ""Wfid"", title: ""Wfid"", width: ""110px"", hidden:true },
                { field: ""Depid"", title: ""Depid"", width: ""110px"", hidden:true },
                { field: ""Barcode"", title: ""Barcode"", width: ""140px""},
                { field: ""Mode"", title: ""Mode"", width: ""90px"", template: ""#if (Mode == '0' ) {# <div>Garment"" + 
                                ""</div> #} else if (Mode == '1'){ # <div>Bag"" +
                                ""</div> #}#"" },
                { field: ""Bag_Barcode"", title: ""Ref. Bag Barcode"", width: ""140px"", hidden: true },
                { field: ""Style"", title: ""Style"", width: ""100px"" },
                { field: ""L1"", title: ""L1"", width: ""100px"", hidden:true },
                { field: ""Shedule"", title: ""Shedule"", width: ""115px"" },
                { field: ""PO"", title: ""PO"", width: ""100px"" },
                { field: ""Z_Feature"", title: ""Z-Feature"", width: ""125px"" },
                { field: ""L2"", title: ""L2"", width: ""100px"", hidden:true },
                { ");
            WriteLiteral(@"field: ""L3"", title: ""L3"", width: ""100px"", hidden:true },
                { field: ""Color"", title: ""Color"", width: ""110px"", footerTemplate: ""Total"" },
                { field: ""L4"", title: ""L4"", width: ""100px"", hidden:true },
                { field: ""L5"", title: ""L5"", width: ""100px"", hidden:true },
                { field: ""Bag_Quantity"", title: ""Quantity"", width: ""120px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                { field: ""Allocate_Quantity"", title: ""Allocated Qty"", width: ""120px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#"" },
                { field: ""Remarks"", title: ""Remarks"" },
                { command: [{ name: ""Delete"", imageClass: ""k-icon k-i-close"", click: function (e) {
                        e.preventDefault();
                        var dataItem = this.dataItem($(e.target).closest(""tr""));
                        if (confirm('Do you really want to delete this record?')) {
                           ");
            WriteLiteral(@" var dataSource = $(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource;
                            TotalQty = TotalQty - dataItem.Allocate_Quantity;
                            $(""#current-quantitiy-text"").html(TotalQty);
                            $(""#remaining-quantitiy-text"").html(parseInt($(""#job-quantity-text"").val()) - TotalQty);
                            console.log(TotalQty);
                            dataSource.remove(dataItem);
                            dataSource.sync();
                        }
                    }
                }], title: ""&nbsp;"", width: ""120px"" },

            ],
            editable: ""inline""
        });

        //Start of Expanded Window Item Grid
        $(""#expand-items-grid"").kendoGrid({
            dataSource: {
                schema: {
                    model: {
                        id: ""Key"",
                        fields: {
                            Key: { type: ""string"", editable: false },
                          ");
            WriteLiteral(@"  Seq: { type: ""number"", editable: false },
                            Wfid: { type: ""number"", editable: false },
                            Depid: { type: ""number"", editable: false },
                            Barcode: { type: ""string"", editable: false },
                            Mode: { type: ""number"", editable: false },
                            Bag_Barcode: { type: ""string"", editable: false },
                            Style: { type: ""string"", editable: false },
                            L1: { type: ""number"", editable: false },
                            Shedule: { type: ""string"", editable: false },
                            PO: { type: ""string"", editable: false },
                            Z_Feature: { type: ""string"", editable: false },
                            L2: { type: ""number"", editable: false },
                            L3: { type: ""number"", editable: false },
                            Color: { type: ""string"", editable: false },
                            L4");
            WriteLiteral(@": { type: ""number"", editable: false },
                            L5: { type: ""number"", editable: false },
                            Bag_Quantity: { type: ""number"", editable: false },
                            Allocate_Quantity: { type: ""number"", editable: true },
                            Remarks: { editable: true }
                        },
                    }
                },
                batch: true,
                group: {
                            field: ""Key"", aggregates: [
                                { field: ""Style"", aggregate: ""count"" },
                                { field: ""Bag_Quantity"", aggregate: ""sum""},
                                { field: ""Allocate_Quantity"", aggregate: ""sum""},
                                { field: ""Key"", aggregate: ""count"" }
                            ]
                        },
                aggregate: [ { field: ""Style"", aggregate: ""count"" },
                             { field: ""Bag_Quantity"", aggregate: ""sum"" },
   ");
            WriteLiteral(@"                          { field: ""Allocate_Quantity"", aggregate: ""sum"" },
                             { field: ""Key"", aggregate: ""min"" },
                             { field: ""Key"", aggregate: ""max"" }]
            },
            navigatable: true,
            scrollable: true,   
            sortable: true,
            filterable: true,
            columns: [
                { field:""Key"",width:""0px"", hidden: true , aggregates: [""count""], groupHeaderTemplate: ""#= value # (Count: #= count#)"" },
                { field: ""Seq"", title: ""Seq"", width: ""110px"", hidden:true },
                { field: ""Wfid"", title: ""Wfid"", width: ""110px"", hidden:true },
                { field: ""Depid"", title: ""Depid"", width: ""110px"", hidden:true },
                { field: ""Barcode"", title: ""Barcode"", width: ""140px"" },
                { field: ""Mode"", title: ""Mode"", width: ""90px"", template: ""#if (Mode == '0' ) {# <div>Garment"" + 
                                ""</div> #} else if (Mode == '1'){ # <div>Bag"" +
   ");
            WriteLiteral(@"                             ""</div> #}#"" },
                { field: ""Bag_Barcode"", title: ""Ref. Bag Barcode"", width: ""140px"", hidden:true  },
                { field: ""Style"", title: ""Style"", width: ""100px"" },
                { field: ""L1"", title: ""L1"", width: ""100px"", hidden:true },
                { field: ""Shedule"", title: ""Shedule"", width: ""115px"" },
                { field: ""PO"", title: ""PO"", width: ""100px"" },
                { field: ""Z_Feature"", title: ""Z-Feature"", width: ""125px"" },
                { field: ""L2"", title: ""L2"", width: ""100px"", hidden:true },
                { field: ""L3"", title: ""L3"", width: ""100px"", hidden:true },
                { field: ""Color"", title: ""Color"", width: ""110px"", footerTemplate: ""Total"", groupFooterTemplate: ""Sub Total"" },
                { field: ""L4"", title: ""L4"", width: ""100px"", hidden:true },
                { field: ""L5"", title: ""L5"", width: ""100px"", hidden:true },
                { field: ""Bag_Quantity"", title: ""Quantity"", width: ""120px"", aggregates: ");
            WriteLiteral(@"[""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                { field: ""Allocate_Quantity"", title: ""Allocated Qty"", width: ""120px"", aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#"" },
                { field: ""Remarks"", title: ""Remarks"" }

            ],
            editable: ""inline""
        });
        //End of Expanded Window Item Grid

        EnableInputs();
    }

    function setButtonStatus(n) {
        clickedbutton = n;
    }

    function OnGridDataBound(e) {
        var grid = $(""#traveltag-grid"").data().kendoGrid; 
        var gridData = grid.dataSource.view();

        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            if (gridData[i].success == true) {
                var currentRow = grid.table.find(""tr[data-uid='"" + currentUid + ""']"");
                currentRow.css('background-color', 'lightgreen');
            }
        }

        var grid = e.sender;
        var ");
            WriteLiteral(@"rows = grid.tbody.find(""[role='row']"");

        rows.unbind(""click"");
        rows.on(""click"", onClick)
    }

    function onClick(e) {
        if ($(e.target).hasClass(""k-checkbox-label"")) {
            return;
        }
        var row = $(e.target).closest(""tr"");

        var grid = $(""#traveltag-grid"").data().kendoGrid; 
        rowDataItem = grid.dataItem(row);

        if(clickedbutton == 1) {
            openPrintWindow();
        }

        var checkbox = $(row).find("".k-checkbox"");

        checkbox.click();

        clickedbutton = 0;
    };
    //end

    getSessionInfo();

    $(document).ready(function () {
        $('#sitebody').removeClass('body-login');
        $(""#sitebody"").append(
            '<div id=""ajaxBusy"" class=""ajaxBusy""></div>'
        );
        $(""#ajaxBusy"").hide();
        checkLoginStatus();
        $('#pageTitleBar').html('<i class=""fas fa-barcode pageMainIcon""></i><span class=""pageTitle"">DCap - Buddy Tag</span>');

        initializeCo");
            WriteLiteral(@"ntrols();

        checkIdle();

        if (isValidClient == Answer.Null) {
            window.location.href = ""Login"";
        }
        else if (isValidClient != null && clientconfig.dataCaptureMode != DataCaptureMode.Bulk) {
            if (clientconfig.dataCaptureMode == DataCaptureMode.Barcode) {
                msgBox.show('මෙම යන්ත්‍රයට බල්ක් අප්ඩේට් කිරීම සඳහා අවසර නැත.', 'This device is not authorized for Bulk update', 'අවවාදයයි / Warning', 'BU01', 'Warning', function () {
                    if (clientconfig.dataCaptureMode == DataCaptureMode.Washing) {
                        window.location.href = ""Menu"";
                    }
                });
            }
        }
    });

    function RefreshRequestGrid() {
        DisableInputs();
            $(""#traveltag-grid"").data('kendoGrid').dataSource.data([]);
            var gridData = [];
            var wfid = JSON.parse(sessionStorage.getItem(""Clientconfig"")).wfdepinstId;
            var status = $(""#status-filter"").data");
            WriteLiteral(@"(""kendoDropDownList"").value();
            var todate = $(""#date-created-filter"").val();
            
            if (todate != """") {
                todate + ""%2000:00:00"";
            } else {
                todate = ""0001-01-01%2000:00:00""
            }
            //console.log(todate);
            var status = $(""#status-filter"").data(""kendoDropDownList"").value();
            var travelbarcode = $(""#TravelBarcode"").val();

            $.ajax({
                url: '");
            EndContext();
            BeginContext(21002, 14, false);
#line 426 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(21016, 5902, true);
            WriteLiteral(@"/Lookup/GetTravelTagDetails?todate=' + todate + '&travelbarcodeno=' + travelbarcode + '&status=' + status + '&mode=3',
                type: 'GET',
                dataType: 'json',
                async: false,
                contentType: 'application/json',
                beforeSend: function () {
                    $(""#ajaxBusy"").show();
                },
                complete: function () {
                    $(""#ajaxBusy"").hide();
                },
                success: function (response) {
                    $.each(response, function (index, elements) {
                        var object = {
                            TravelBarCodeNo: elements.travelBarCodeNo,
                            Status: elements.travelStatus,
                            Qty01: elements.qty01,
                            JobQty: elements.jobQty,
                            Weight: elements.weight,
                            TrollyNo: elements.trollyNo,
                            AllocationDat");
            WriteLiteral(@"e: formatDate(elements.allocationDate),
                            Remarks: elements.remarks,
                            CreatedDateTime: elements.createdDateTime.replace(/T/g, "" ""),
                            CreatedBy: elements.createdBy,
                        }
                        gridData.push(object);
                    });

                    $(""#traveltag-grid"").data('kendoGrid').dataSource.data(gridData);
                    EnableInputs();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formatErrorMessage(jqXHR, errorThrown, ""GenerateTravelBarcode"");
                    EnableInputs();
                }
            });
    }

    function getSessionInfo() {
        isValidClient = sessionStorage.getItem(""IsValidClient"");
        clientconfig = JSON.parse(sessionStorage.getItem(""Clientconfig""));
        userPermissionList = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
        clientIP = sessionStora");
            WriteLiteral(@"ge.getItem(""ClientIP"");
    }

    //CREATE NEW REQUEST
    function opencreateNewTag() {
        TotalQty = 0;
        $(""#current-quantitiy-text"").html(TotalQty);
        $(""#remaining-quantitiy-text"").html(parseInt($(""#job-quantity-text"").val()) - TotalQty);
        $(""#color-code-dropdown"").kendoDropDownList({""dataSource"":[{""Text"":""Green"",""Value"":""0""},
                                                            {""Text"":""Red"",""Value"":""1""},
                                                            {""Text"":""Yellow"",""Value"":""2""},
                                                            {""Text"":""Blue"",""Value"":""3""},
                                                            {""Text"":""Pink"",""Value"":""3""}],
                                                            ""dataTextField"":""Text"",""dataValueField"":""Value"",""optionLabel"": ""Select a color code...""});
        $(""#group-mode-dropdown"").kendoDropDownList({""dataSource"":[{""Text"":""Rework"",""Value"":""3""},
                                           ");
            WriteLiteral(@"                 {""Text"":""Scrap"",""Value"":""4""}],
                                                            ""dataTextField"":""Text"",""dataValueField"":""Value""});

        createNewTag = $(""#createNewTag"").kendoWindow({
            width: ""95%"",
            title: ""Create new buddy tag"",
            visible: false,
            actions: [""Close""],
            close: function(e) {clickedbutton = 0;},
            modal: true,
            resizable: false,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        var arrows = [38, 40];
        
        resetControllers();
        createNewTag.open().center();
    }

    //Controllers
    function ValidateInputs() { //need to check
        var departmentTo = null;

        departmentTo = $(""#departmentTo"").data(""kendoDropDownList"").value();

        if(departmentTo != null) {
            $(""#open-request-item-window-button"").removeAttr(""disabled"");
        } else {
            $('#open-request-item-wi");
            WriteLiteral(@"ndow-button').attr(""disabled"", ""disabled"");
        }
    }

    function validateCreateRequest(){
        var jobQuantity = null;
        var weight = null;
        var TrollyNo = null;

        $(""#job-quantity-text"").removeClass(""invalid-input"");
        $(""#weight-text"").removeClass(""invalid-input"");
        $(""#trolly-number-text"").removeClass(""invalid-input"");
        var isValid = true;

        jobQuantity = $(""#job-quantity-text"").val();
        weight = $(""#weight-text"").val();
        TrollyNo = $(""#trolly-number-text"").val();
        
        //console.log(""validate inputs data"",jobQuantity,weight,TrollyNo);
        if(jobQuantity == """" || jobQuantity == 0) {
            $(""#job-quantity-text"").addClass(""invalid-input"");
            isValid = false;
        }
        if(weight == """" || weight == 0) {
            $(""#weight-text"").addClass(""invalid-input"");
            isValid = false;
        }
        if(TrollyNo == """") {
            $(""#trolly-number-text"").addClass(""");
            WriteLiteral(@"invalid-input"");
            isValid = false;
        }
        return isValid;
    }

    function loadBagBarcodeDetails() {
        DisableInputs();
        var isValid = validateCreateRequest();
        var bagbarcode = $(""#bag-barcode-text"").val();

        var searchduplicate = true;
        var grid = $(""#bag-barcode-details-table"").data(""kendoGrid"");
        data = grid.dataItems();
        data.forEach(d => { 
            if(d.Barcode == bagbarcode) {
                searchduplicate = false;
            }
        });

        if(searchduplicate) {
            if(isValid) {
                if($(""#last-barcode-txt"").html() != bagbarcode) {
                    isvalidbarcode = false;
                    $.ajax({
                        url: '");
            EndContext();
            BeginContext(26919, 14, false);
#line 566 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml"
                         Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(26933, 15751, true);
            WriteLiteral(@"/Lookup/GetStyleSheduleColorforRejectedfromBarcode?Barcode=' + bagbarcode + '&WfdepinstId=' + clientconfig.wfdepinstId + '&GroupMode=' + $(""#group-mode-dropdown"").val(),
                        type: 'GET',
                        dataType: 'json',
                        async: false,
                        contentType: 'application/json; charset=utf-8',
                        beforeSend: function () {
                            $(""#ajaxBusy"").show();
                        },
                        complete: function () {
                            $(""#ajaxBusy"").hide();
                        },
                        success: function (response) {
                            scannedBarcode = response;
                            if (response != null) {
                                var selectedgridData = $(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data();
                                //console.log(selectedgridData);
                                //checked wh");
            WriteLiteral(@"ether qunatity is avilable to allocate
                                if (scannedBarcode.retiriveSuccessfull) {
                                    if(selectedgridData.length > 0) {
                                            //Check whether barcode color is matched with the user input
                                            //console.log($(""#color-id"").html());
                                            if(scannedBarcode.scheduleId != $(""#shedule-id"").html()) {
                                                msgBox.show('මෙතෙක් ස්කෑන් කරගෙන ආ Shedule අංකය හා මෙම බාර් කොඩයේ Shedule අංකය වෙනස්ය..', 'Sdule no is differant from the one was scanning, continue with new shedule no..', 'අවවාදයයි / Warning', 'BS10', 'Warning', function () {});
                                            }

                                            if(scannedBarcode.colorId != $(""#color-id"").html()) {
                                                msgBox.show('මෙතෙක් ස්කෑන් කරගෙන ආ Color හා මෙම බාර් කොඩයේ Color අංකය");
            WriteLiteral(@" වෙනස්ය..', 'Color no is differant from the one was scanning, continue with new color no..', 'අවවාදයයි / Warning', 'BS10', 'Warning', function () {});
                                            }

                                            if(scannedBarcode.styleId != $(""#style-id"").html()) {
                                                msgBox.show('මෙතෙක් ස්කෑන් කරගෙන ආ Style හා මෙම බාර් කොඩයේ Style අංකය වෙනස්ය.', 'The selected style does not match with the bag barcode style code. Check again.', 'අවවාදයයි / Warning', 'BS10', 'Warning', function () {});
                                            }
                                            
                                            $(""#color-text"").html(scannedBarcode.colorDesc);
                                            $(""#color-id"").html(scannedBarcode.colorId);
                                            $(""#style-id"").html(scannedBarcode.styleId);
                                            $(""#style-text"").html(scannedBarcode.styleN");
            WriteLiteral(@"o);
                                            
                                            $(""#shedule-id"").html(scannedBarcode.scheduleId);
                                            $(""#shedule-text"").html(scannedBarcode.scheduleDesc);
                                            $(""#color-text"").html(scannedBarcode.colorDesc);
                                            $(""#z-feature-text"").html(scannedBarcode.zfeature);
                                            $(""#po-text"").html(scannedBarcode.poNo);

                                            $(""#size-id"").html(scannedBarcode.sizeId);
                                            $(""#seq-id"").html(1);
                                            $(""#dep-id"").html(1);
                                            $(""#wf-id"").html(clientconfig.wfdepinstId);
                                            $(""#l3-id"").html(0);

                                            $(""#bag-quantity-text"").html(1);
                                           ");
            WriteLiteral(@" $(""#unallocated-text"").html(1);

                                            $(""#deliverdate-text"").html("""");
                                            $(""#allocated-text"").html(1);
                                            $(""#last-barcode-txt"").html("""");
                                            $(""#color-text-i"").html(scannedBarcode.colorDesc);

                                            $(""#style-label"").html(scannedBarcode.styleNo);
                                            $(""#shedule-label"").html(scannedBarcode.scheduleDesc);
                                            $(""#zfeature-label"").html(scannedBarcode.zfeature);
                                            $(""#quantiity-label"").html(1);
                                            isvalidbarcode = true;
                                            EnableInputs();
                                    } else {
                                        $(""#style-id"").html(scannedBarcode.styleId);
                                ");
            WriteLiteral(@"        $(""#style-text"").html(scannedBarcode.styleNo);
                                        $(""#shedule-id"").html(scannedBarcode.scheduleId);
                                        $(""#shedule-text"").html(scannedBarcode.scheduleDesc);
                                        $(""#z-feature-text"").html(scannedBarcode.zfeature);
                                        $(""#po-text"").html(scannedBarcode.poNo);
                                        $(""#color-id"").html(scannedBarcode.colorId);

                                        $(""#size-id"").html(scannedBarcode.sizeId);
                                        $(""#seq-id"").html(1);
                                        $(""#dep-id"").html(1);
                                        $(""#wf-id"").html(clientconfig.wfdepinstId);
                                        $(""#l3-id"").html(0);

                                        $(""#color-text"").html(scannedBarcode.colorDesc);
                                        $(""#color-text-i"").html(scanne");
            WriteLiteral(@"dBarcode.colorDesc);
                                        $(""#bag-quantity-text"").html(1);
                                        $(""#unallocated-text"").html(1);
                                        $(""#allocated-text"").html(1);

                                        $(""#deliverdate-text"").html("""");
                                        $(""#last-barcode-txt"").html("""");

                                        $(""#style-label"").html(scannedBarcode.styleNo);
                                        $(""#shedule-label"").html(scannedBarcode.scheduleDesc);
                                        $(""#zfeature-label"").html(scannedBarcode.zfeature);
                                        $(""#quantiity-label"").html(1);

                                        isvalidbarcode = true;
                                        EnableInputs();
                                    }
                                            
                                } else {
                                ");
            WriteLiteral(@"    msgBox.show('', scannedBarcode.responce[1], 'අවවාදයයි / Warning', 'BS10', 'Warning', function () {
                                        scannedBarcode = null;
                                        $(""#bag-barcode-text"").val("""");
                                        $(""#bag-barcode-text"").focus();
                                        EnableInputs();
                                    });
                                    return;
                                }

                            }
                            else {
                                resetBagBarcodeFields();
                                EnableInputs();
                                msgBox.show('තීරු කේතය හඳුනාගත නොහැක. අවලංගු තීරු කේතයක් හෝ වෙන් කිරීමට සූදානම් නැත.', 'Cannot identfiy the barcode. can be a invalid barcode or not ready to alocate.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
                            }
                        },
                        error: function (jqXHR, textS");
            WriteLiteral(@"tatus, errorThrown) {
                            formatErrorMessage(jqXHR, errorThrown, ""Barcode"");
                            resetBagBarcodeFields();
                            EnableInputs();
                            msgBox.show('තීරු කේත දෝෂයකි.', 'Invalid barcode.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
                        }
                    });
                }
            } else {
                EnableInputs();
                msgBox.show('අයිතම එකතු කිරීමට පෙර කරුණාකර යෙදවුම් පුරවන්න.', 'Please fill the inputs before add items.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
            }
        } else {
            EnableInputs();
            msgBox.show('ඔබ එක් කිරීමට උත්සාහ කරන තීරු කේතය දැනටමත් භාවිතා කර ඇත. කරුණාකර දත්ත වගු වාර්තා දෙස බලන්න.', 'The barcode that you are trying to add is already used. Please look at the data table records.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
        }
    }

    function allocateFromBagBarcode(){
        DisableInputs();
");
            WriteLiteral(@"        var isValid = QuantityValidation();
        if (isValid) {
            if($(""#bag-barcode-text"").val() != """") {
                if(isvalidbarcode == true) {
                    var gridData = [];
                    if($(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data() != undefined) {
                        gridData = $(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data();
                    }
                    var object = {
                        Seq: $(""#seq-id"").html(),
                        Wfid: $(""#wf-id"").html(),
                        Depid: $(""#dep-id"").html(),
                        Barcode: $(""#bag-barcode-text"").val(),
                        Mode : 0,
                        Bag_Barcode: """",
                        Style: $(""#style-text"").html(),
                        L1: $(""#style-id"").html(),
                        Shedule: $(""#shedule-text"").html(),
                        PO: $(""#po-text"").html(),
                        Z_");
            WriteLiteral(@"Feature: $(""#z-feature-text"").html(),
                        L2: $(""#shedule-id"").html(),
                        L3: $(""#l3-id"").html(),
                        Color: $(""#color-text"").html(),
                        L4: $(""#color-id"").html(),
                        L5: $(""#size-id"").html(),
                        Bag_Quantity: 1,
                        Allocate_Quantity: 1,
                        Remarks: """",
                    }
                    gridData.push(object);
                    //console.log(gridData);
                    $(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data(gridData);
                    TotalQty = TotalQty + parseInt($(""#unallocated-text"").html());
                    console.log(TotalQty);
                    $(""#current-quantitiy-text"").html(TotalQty);
                    $(""#remaining-quantitiy-text"").html(parseInt($(""#job-quantity-text"").val()) - TotalQty);
                    isvalidbarcode = false;
                    resetBagBarcode");
            WriteLiteral(@"Fields();
                    EnableInputs();
                    $(""#bag-barcode-text"").focus();
                    $(""#bag-barcode-text"").select();
                
                } else {
                    msgBox.show('තීරු කේත දෝෂයකි.', 'Scan a valid barcode.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
                    EnableInputs();
                }
            } else {
                msgBox.show('තීරු කේත දෝෂයකි.', 'Barcode field is empty.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
                EnableInputs();
            }
        }
    }

    function resetBagBarcodeFields() {
        $(""#bag-barcode-text"").val('');
        $(""#shedule-text"").html('');
        $(""#style-text"").html('');
        $(""#color-text"").html('');

        $(""#z-feature-text"").html('');
        $(""#po-text"").html('');
        $(""#bag-quantity-text"").html('');
        $(""#unallocated-text"").html('');
        $(""#allocated-text"").html('');
        $(""#deliverdate-text"").html('');

      ");
            WriteLiteral(@"  EnableInputs();
    }

    function resetControllers() {
        $(""#color-text-i"").html('');
        $(""#job-quantity-text"").val('');
        $(""#weight-text"").val('');
        $(""#trolly-number-text"").val('');
        $(""#bag-barcode-text"").val('');
        $(""#receiver-epf-text"").val('');
        $(""#remarks-text"").val('');

        $(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data([]);

        TotalQty = 0;
        $(""#current-quantitiy-text"").html(TotalQty);
        $(""#remaining-quantitiy-text"").html(parseInt($(""#job-quantity-text"").val()) - TotalQty);

        $(""#job-quantity-text"").removeClass(""invalid-input"");
        $(""#weight-text"").removeClass(""invalid-input"");
        $(""#trolly-number-text"").removeClass(""invalid-input"");

        $(""#style-label"").html('');
        $(""#shedule-label"").html('');
        $(""#zfeature-label"").html('');
        $(""#quantiity-label"").html('');

        resetBagBarcodeFields();
        EnableInputs();
    }

    func");
            WriteLiteral(@"tion saveRequest() {
        DisableInputs();
        var isValid = validateCreateRequest();
        if(isValid) {
            var selectedgridData = $(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data();
            var tableData = [];
            
            $.each(selectedgridData, function (index, element) {
                var tableRowData = {
                    TravelBarCodeNo: """",
                    JobQty: $(""#job-quantity-text"").val(),
                    OperationCode: JSON.parse(sessionStorage.getItem(""Clientconfig"")).opCode1,
                    WFDEPInstId: JSON.parse(sessionStorage.getItem(""Clientconfig"")).wfdepinstId,
                    Weight: $(""#weight-text"").val(),
                    TrollyNo: $(""#trolly-number-text"").val(),
                    AllocationDate: $(""#allocation-date"").val(),
                    EPF: $(""#receiver-epf-text"").val(),
                    ColorCode: $(""#color-code-dropdown"").val(),
                    gpRemarks: $(""#remarks-text""");
            WriteLiteral(@").val(),
                    Color : $(""#color-text-i"").html(),
                    GroupMode: $(""#group-mode-dropdown"").val(),

                    Seq: element.Seq,
                    Wfid: element.Wfid,
                    Depid: element.Depid,
                    Barcode: element.Barcode,
                    TxnMode : element.Mode,
                    Bag_Barcode: element.Bag_Barcode,
                    L1id: element.L1,
                    L2id: element.L2,
                    L3id: element.L3,
                    L4id: element.L4,
                    L5id: element.L5,
                    Qty01NS: element.Bag_Quantity,
                    Qty01: element.Allocate_Quantity,
                    Remarks: element.Remarks,

                    ModifiedBy: sessionStorage.UserId,
                    ModifiedMachine: JSON.parse(sessionStorage.getItem(""Clientconfig"")).clientId,
                    CreatedBy: sessionStorage.UserId,
                    CreatedMachine: JSON.parse(sessionStorag");
            WriteLiteral(@"e.getItem(""Clientconfig"")).clientId,
                }
                tableData.push(tableRowData);
                EnableInputs();
            });

            //console.log(tableData);
            if (tableData != null && tableData.length > 0) {
                DisableInputs();
                    var gridData = [];
                    $.ajax({
                        url: '");
            EndContext();
            BeginContext(42685, 14, false);
#line 848 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml"
                         Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(42699, 9700, true);
            WriteLiteral(@"/BusinessLogics/UpdateBuddyTag',
                        type: 'POST',
                        dataType: 'json',
                        async: false,
                        data: JSON.stringify(tableData),
                        contentType: 'application/json; charset=utf-8',
                        beforeSend: function () {
                            $(""#ajaxBusy"").show();
                        },
                        complete: function () {
                            $(""#ajaxBusy"").hide();
                        },
                        success: function (response) {
                            //console.log(response);
                            createNewTag.close();
                            resetControllers();
                            EnableInputs();
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            formatErrorMessage(jqXHR, errorThrown, ""GenerateBuddyTag"");
                            En");
            WriteLiteral(@"ableInputs();
                        }
                    });
            } else {
                msgBox.show('', 'Error occcured', 'Warning', 'BU05', 'Warning', null);
                EnableInputs();
            }
        }
    }

    function cancelRequest() {
        DisableInputs();
        resetControllers();
        createNewTag.close();
        EnableInputs();
    }

    function resetRequest() {
        DisableInputs();
        resetControllers();
        EnableInputs();
    }

    //Add Item window Start
    function openAddItemWindow() {
        DisableInputs();
        if($(""#bag-barcode-text"").val() != """") {
            if(isvalidbarcode == true) {
                var qty = $(""#unallocated-text"").html()
                $(""#open-request-item-window-button"").removeAttr(""disabled"");
                $(""#allocation-quantity-text"").val('');
                $(""allocation-barcode-mode-text"").attr(""disabled"", ""disabled"");
                $(""#bag-quantity"").html(qty);
   ");
            WriteLiteral(@"             
                $(""#ModeSelect"").kendoDropDownList({""dataSource"":[{""Text"":""Add"",""Value"":""0""},//],
                                                                {""Text"":""Remove"",""Value"":""1""}],
                                                                ""dataTextField"":""Text"",""dataValueField"":""Value""});

                

                //Item Grid Initilize
                $(""#barcode-pool-table"").kendoGrid({
                    dataSource: {
                        schema: {
                            model: {
                                id: ""Barcode"",
                                fields: {
                                    Barcode: { type: ""string"", editable: false },
                                    Seq: { type: ""number"", editable: false },
                                    Wfid: { type: ""number"", editable: false },
                                    Depid: { type: ""number"", editable: false },
                                    L1: { type: ""number"", ed");
            WriteLiteral(@"itable: false },
                                    L2: { type: ""number"", editable: false },
                                    L3: { type: ""number"", editable: false },
                                    L4: { type: ""number"", editable: false },
                                    L5: { type: ""number"", editable: false },
                                },
                            }
                        },
                        batch: true,
                    },
                    navigatable: true,
                    scrollable: true,   
                    sortable: true,
                    filterable: true,
                    columns: [
                        { field: ""Barcode"", title: ""Bag Barcode"" },
                        { field: ""Seq"", title: ""Seq"", width: ""110px"", hidden:true },
                        { field: ""Wfid"", title: ""Wfid"", width: ""110px"", hidden:true },
                        { field: ""Depid"", title: ""Depid"", width: ""110px"", hidden:true },
              ");
            WriteLiteral(@"          { field: ""L1"", title: ""L1"", width: ""100px"", hidden:true },
                        { field: ""L2"", title: ""L2"", width: ""100px"", hidden:true },
                        { field: ""L3"", title: ""L3"", width: ""100px"", hidden:true },
                        { field: ""L4"", title: ""L4"", width: ""100px"", hidden:true },
                        { field: ""L5"", title: ""L5"", width: ""100px"", hidden:true },
                        { command: [{ name: ""Delete"", imageClass: ""k-icon k-i-close"", click: function (e) {
                            e.preventDefault();
                            var dataItem = this.dataItem($(e.target).closest(""tr""));
                            if (confirm('Do you really want to delete this record?')) {
                                var dataSource = $(""#barcode-pool-table"").data(""kendoGrid"").dataSource;
                                dataSource.remove(dataItem);
                                dataSource.sync();
                                $(""#allocation-barcode-count"").htm");
            WriteLiteral(@"l(parseInt($(""#allocation-barcode-count"").html()) - 1);
                            }
                        }
                        }], title: ""&nbsp;"", width: ""120px"" },
                    ],
                });
                //End of Item Grid


                addItemsGrid = $(""#split-and-allocate"").kendoWindow({
                    width: ""65%"",
                    height: ""60%"",
                    title: ""Add Items"",
                    visible: false,
                    actions: [""Close""],
                    close: function () {
                        $(""#bag-barcode-text"").focus();
                        $(""#bag-barcode-text"").select();},
                    modal: true,
                    resizable: true,
                    draggable: true,
                    pinned: true,
                }).data(""kendoWindow"");

                
                $(""#allocation-quantity-text"").removeAttr(""disabled"");
                var dropdownlist = $(""#ModeSelect"").data(""kend");
            WriteLiteral(@"oDropDownList"");
                dropdownlist.enable(true);
                $(""#allocation-barcode-text"").attr(""disabled"", ""disabled"");
                $(""#allocation-barcode-count"").html('0');
                $(""allocation-quantity-text"").val('');
                $(""#barcode-pool-table"").data(""kendoGrid"").dataSource.data([]);

                var arrows = [38, 40];
                addItemsGrid.open().center();
                 EnableInputs();
            } else {
                    msgBox.show('තීරු කේත දෝෂයකි.', 'Scan a valid barcode.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
                    EnableInputs();
                }
        } else {
            msgBox.show('තීරු කේත දෝෂයකි.', 'Barcode field is empty.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
            EnableInputs();
        }
    }

    function startScanBarcodes() {
        DisableInputs();
        $(""allocation-barcode-mode-text"").attr(""disabled"", ""disabled"");
        var qty = $(""#bag-quantity"").html();
      ");
            WriteLiteral(@"  //console.log(qty, $(""#allocation-quantity-text"").val());
        if($(""#allocation-quantity-text"").val() == """") {
            msgBox.show('වෙන් කළ ප්‍රමාණය හිස් ය.', 'allocated quantity is empty.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
        } else if(parseInt(qty) > parseInt($(""#allocation-quantity-text"").val())) {
            //console.log(""locked"");
            $(""#allocation-quantity-text"").attr(""disabled"", ""disabled"");
            var dropdownlist = $(""#ModeSelect"").data(""kendoDropDownList"");
            dropdownlist.enable(false);
            $(""#allocation-barcode-text"").removeAttr(""disabled"");
            $('#open-request-item-window-button').attr(""disabled"", ""disabled"");
        } else if (qty == $(""#allocation-quantity-text"").val()){
            msgBox.show('සියලුම තීරු කේත වෙන් කිරීමේ විකල්පය භාවිතා කරන්න.', 'use allocate all function.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
        } else if ($(""#allocation-quantity-text"").val() == '0'){
            msgBox.show('තීරු කේත ");
            WriteLiteral(@"0 ක් වෙන් කළ නොහැක.', 'can not allocate 0 barcodes.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
        } else {
           msgBox.show('වෙන් කළ ප්‍රමාණ දෝෂයකි. කරුණාකර පරීක්ෂා කර නැවත උත්සාහ කරන්න.', 'allocated quantity error. please check and try again.', 'අවවාදයයි / Warning', 'BS10', 'Warning'); 
        }


        EnableInputs();

        $(""#allocation-barcode-text"").focus();
        $(""#allocation-barcode-text"").select();
    }

    function proccedAllocation() {
        DisableInputs();
        $(""allocation-barcode-mode-text"").attr(""disabled"", ""disabled"");
        var allocated = $(""#allocation-quantity-text"").val();
        var qty = parseInt($(""#allocation-barcode-count"").html());
        //console.log($(""#bag-barcode-text"").val(),allocated,qty);

        var searchduplicate = true;
        var grid = $(""#barcode-pool-table"").data(""kendoGrid"");
        var scannedBarcode = $(""#allocation-barcode-text"").val();
        data = grid.dataItems();
        data.forEach(d => { 
    ");
            WriteLiteral(@"        if(d.Barcode == scannedBarcode) {
                searchduplicate = false;
            }
        });

        data.forEach(d => { 
            if(d.Bag_Barcode == scannedBarcode) {
                searchduplicate = false;
            }
        });

        if(searchduplicate) {
            if(qty < allocated) {
                var gridData = $(""#barcode-pool-table"").data('kendoGrid').dataSource.data();
                $.ajax({
                        url: '");
            EndContext();
            BeginContext(52400, 14, false);
#line 1052 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml"
                         Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(52414, 8903, true);
            WriteLiteral(@"/Lookup/GetBagBarcodeByBarcode?barcode=' + $(""#allocation-barcode-text"").val() + '&l1id=' + $(""#style-id"").html() + '&l2id=' + $(""#shedule-id"").html() + '&l3id=' + $(""#l3-id"").html() + '&l4id=' + $(""#color-id"").html(),
                        dataType: 'json',
                        async: false,
                        contentType: 'application/json',
                        beforeSend: function () {
                            $(""#ajaxBusy"").show();
                        },
                        complete: function () {
                            $(""#ajaxBusy"").hide();
                        },
                        success: function (response) {
                            if (response != null) {
                                if(response.bagBarCodeNo == $(""#bag-barcode-text"").val()) {
                                    var object = {
                                        Barcode: $(""#allocation-barcode-text"").val(),
                                        Seq: response.seq,
   ");
            WriteLiteral(@"                                     Wfid: response.wfid,
                                        Depid: response.depid,
                                        L1: response.l1id,
                                        L2: response.l2id,
                                        L3: response.l3id,
                                        L4: response.l4id,
                                        L5: response.l5id,
                                    }
                                    gridData.push(object);
                                    //console.log(gridData);
                                    $(""#barcode-pool-table"").data('kendoGrid').dataSource.data(gridData);
                                    $(""#allocation-barcode-count"").html(qty + 1);
                                    $(""#allocation-barcode-text"").val('');
                                    $(""#allocation-barcode-mode-text"").removeAttr(""disabled"");
                                    
                                    Enab");
            WriteLiteral(@"leInputs();

                                    $(""#allocation-barcode-text"").focus();
                                    $(""#allocation-barcode-text"").select();
                                } else {
                                    msgBox.show('තීරු කේතය තෝරාගත් බෑග් තීරු කේතයට අයත් නොවේ.', 'the barcode is not belongs to the selected bag barcode.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
                                    $(""#allocation-barcode-text"").val('');
                                    EnableInputs();
                                    $(""#allocation-barcode-text"").focus();
                                    $(""#allocation-barcode-text"").select();
                                }
                            } else {
                                msgBox.show('පරිලෝකනය කළ තීරු කේතය සඳහා ගැලපෙන බෑග් තීරු කේතයක් සොයාගත නොහැක හෝ මෙය දැනටමත් භාවිතා කර ඇත.', 'can not find a matched bag barcode for the scanned barcode or this is already used.', 'අවවාදයයි / Warning', 'BS10', 'War");
            WriteLiteral(@"ning');
                                $(""#allocation-barcode-text"").val('');
                                EnableInputs();
                                $(""#allocation-barcode-text"").focus();
                                    $(""#allocation-barcode-text"").select();
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            formatErrorMessage(jqXHR, errorThrown, ""GenerateBuddyTag"");
                            EnableInputs();
                            $(""#allocation-barcode-text"").focus();
                            $(""#allocation-barcode-text"").select();
                            EnableInputs();
                        }
                });
            } else {
                msgBox.show('වෙන් කළ තීරු කේත අර්ථ දැක්වීමට වඩා වැඩි ප්‍රමාණයක් වෙන් කළ නොහැක.', 'can not allocate more than allocated barcodes defines.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
                $(""#alloca");
            WriteLiteral(@"tion-barcode-text"").val('');
                EnableInputs();
                $(""#allocation-barcode-text"").focus();
                $(""#allocation-barcode-text"").select();
            }
        } else {
            msgBox.show('ඔබ එක් කිරීමට උත්සාහ කරන තීරු කේතය දැනටමත් භාවිතා කර ඇත. කරුණාකර දත්ත වගු වාර්තා දෙස බලන්න.', 'The barcode that you are trying to add is already used. Please look at the data table records.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
            $(""#allocation-barcode-text"").val('');
            EnableInputs();
            $(""#allocation-barcode-text"").focus();
            $(""#allocation-barcode-text"").select();
        }
    }

    //on dataBound event restore previous selected rows:
    function onDataBound(e) {
        var view = this.dataSource.view();
        for (var i = 0; i < view.length; i++) {
            if (checkedIds[view[i].id]) {
                this.tbody.find(""tr[data-uid='"" + view[i].uid + ""']"")
                    .addClass(""k-state-selected"")
  ");
            WriteLiteral(@"                  .find("".k-checkbox"")
                    .attr(""checked"", ""checked"");
            }
        }
    }

    function splitCancel() {
        $(""#allocation-barcode-text"").val('');
        $(""#barcode-pool-table"").data('kendoGrid').dataSource.data([]);
        addItemsGrid.close();
    }

    function splitandAdd() {
        DisableInputs();
            var selectedgridData = $(""#barcode-pool-table"").data(""kendoGrid"").dataSource.data();

                if($(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data() != undefined) {
                    gridData = $(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data();
                }

                var headdetails ={
                    Bag_Barcode: $(""#bag-barcode-text"").val(),
                    Style: $(""#style-text"").html(),
                    Shedule: $(""#shedule-text"").html(),
                    PO: $(""#po-text"").html(),
                    Z_Feature: $(""#z-feature-text"").html(),
        ");
            WriteLiteral(@"            Color: $(""#color-text"").html(),
                }

                var mode = $(""#ModeSelect"").data(""kendoDropDownList"").value();
                //console.log(""selected split mode:"", mode);

                if(mode == 0) {
                    $.each(selectedgridData, function (index, element) {
                        var object = {
                            Seq: element.Seq,
                            Wfid: element.Wfid,
                            Depid: element.Depid,
                            Barcode: element.Barcode,
                            Mode : 0,
                            Bag_Barcode: headdetails.Bag_Barcode,
                            Style: headdetails.Style,
                            L1: element.L1,
                            Shedule: headdetails.Shedule,
                            PO: headdetails.PO,
                            Z_Feature: headdetails.Z_Feature,
                            L2: element.L2,
                            L3: element.L3,");
            WriteLiteral(@"
                            Color: headdetails.Color,
                            L4: element.L4,
                            L5: element.L5,
                            Bag_Quantity: 1,
                            Allocate_Quantity: 1,
                            Remarks: """",
                        }
                        
                        TotalQty = TotalQty + 1;
                        $(""#current-quantitiy-text"").html(TotalQty);
                        $(""#remaining-quantitiy-text"").html(parseInt($(""#job-quantity-text"").val()) - TotalQty);
                        gridData.push(object);
                    });
                    console.log(TotalQty);
                    $(""#bag-barcode-text"").focus();
                    $(""#bag-barcode-text"").select();
                    
            } else {
                //console.log(""subtract selected"");
                var RemovedGridData = [];
                $.each(selectedgridData, function (index, element) {
                 ");
            WriteLiteral(@"       var object = {
                            Seq: element.Seq,
                            WFId: element.Wfid,
                            DEPId: element.Depid,
                            Barcode: element.Barcode,
                            BagBarcode: $(""#bag-barcode-text"").val(),
                            L1idBag: element.L1,
                            L2idBag: element.L2,
                            L3idBag: element.L3,
                            L4idBag: element.L4,
                            L5idBag: element.L5,
                        }
                        RemovedGridData.push(object);
                    });

                $.ajax({
                        url: '");
            EndContext();
            BeginContext(61318, 14, false);
#line 1218 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml"
                         Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(61332, 11384, true);
            WriteLiteral(@"/BusinessLogics/GetAddedBarcodesByRemoved',
                        type: 'POST',
                        dataType: 'json',
                        async: false,
                        data: JSON.stringify(RemovedGridData),
                        contentType: 'application/json; charset=utf-8',
                        beforeSend: function () {
                            $(""#ajaxBusy"").show();
                        },
                        complete: function () {
                            $(""#ajaxBusy"").hide();
                        },
                        success: function (response) {
                            //console.log(""added barcodes :"",response);

                            $.each(response, function (index, element) {
                                var object = {
                                    Seq: element.seq,
                                    Wfid: element.wfId,
                                    Depid: element.depId,
                                    B");
            WriteLiteral(@"arcode: element.barcode,
                                    Mode : 0,
                                    Bag_Barcode: element.bagBarcode,
                                    Style: headdetails.Style,
                                    L1: element.l1idBag,
                                    Shedule: headdetails.Shedule,
                                    PO: headdetails.PO,
                                    Z_Feature: headdetails.Z_Feature,
                                    L2: element.l2idBag,
                                    L3: element.l3idBag,
                                    Color: headdetails.Color,
                                    L4: element.l4idBag,
                                    L5: element.l5idBag,
                                    Bag_Quantity: 1,
                                    Allocate_Quantity: 1,
                                    Remarks: """",
                                }
                                
                                TotalQ");
            WriteLiteral(@"ty = TotalQty + 1;
                                $(""#current-quantitiy-text"").html(TotalQty);
                                $(""#remaining-quantitiy-text"").html(parseInt($(""#job-quantity-text"").val()) - TotalQty);
                                gridData.push(object);
                            });
                            console.log(TotalQty);
                            $(""#allocation-barcode-text"").focus();
                            $(""#allocation-barcode-text"").select();
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            formatErrorMessage(jqXHR, errorThrown, ""GenerateBuddyTag"");
                            EnableInputs();
                        }
                    });
            }

            //console.log(gridData);
                
            var isValid = QuantityValidation();
            if (isValid) {
                $(""#bag-barcode-details-table"").data(""kendoGrid"").dataSource.data(grid");
            WriteLiteral(@"Data);
                isvalidbarcode = false;
                resetBagBarcodeFields();
                addItemsGrid.close();
                EnableInputs();

                $(""#bag-barcode-text"").focus();
                $(""#bag-barcode-text"").select();
            }
        
    }

    function QuantityValidation() {
        var isValid = true;
        //console.log(""Total Quantity was job quantitiy check"",TotalQty,parseInt($('#job-quantity-text').val()));
        if(TotalQty >= parseInt($('#job-quantity-text').val())) {
            isValid = false;
            msgBox.show('ඔබ උත්සාහ කරන්නේ වෙන් කළ ප්‍රමාණයට වඩා වැඩි ප්‍රමාණයක් වෙන් කිරීමට ය. කරුණාකර ප්‍රමාණය පරීක්ෂා කරන්න.', 'you are trying to allocate more than allocated quantity. Please check the for the quantity.', 'අවවාදයයි / Warning', 'BS10', 'Warning');
        }
        return isValid;
    }

    //Open Expand Table Window
    function openExandTable() {
        
        var additemtabledatat = $(""#bag-barcode-details-table");
            WriteLiteral(@""").data('kendoGrid').dataSource.data();

        if(additemtabledatat != null) {
            var gridData = [];
            $.each(additemtabledatat, function (index, elements) {
                        var object = {
                            Key: elements.Style + "" | "" + elements.Shedule + "" | "" + elements.Color,
                            Seq: elements.Seq,
                            Wfid: elements.Wfid,
                            Depid: elements.Depid,
                            Barcode: elements.Barcode,
                            Mode: elements.Mode,
                            Bag_Barcode: elements.Bag_Barcode,
                            Style: elements.Style,
                            L1: elements.L1,
                            Shedule: elements.Shedule,
                            PO: elements.PO,
                            Z_Feature: elements.Z_Feature,
                            L2: elements.L2,
                            L3: elements.L3,
                          ");
            WriteLiteral(@"  Color: elements.Color,
                            L4: elements.L4,
                            L5: elements.L5,
                            Bag_Quantity: elements.Bag_Quantity,
                            Allocate_Quantity: elements.Allocate_Quantity,
                            Remarks: elements.Remarks
                        }
                        gridData.push(object);
                        //EnableInputs();
                    });
                console.log(gridData);
                $(""#expand-items-grid"").data('kendoGrid').dataSource.data(gridData);
        }


        expandedTableWindow = $(""#expandedWindow"").kendoWindow({
            width: ""90%"",
            height: ""80%"",
            title: ""Expand"",
            visible: false,
            actions: [""Close""],
            modal: true,
            resizable: true,
            draggable: true,
            pinned: true,
        }).data(""kendoWindow"");

        var arrows = [38, 40];
        expandedTableWindow.open");
            WriteLiteral(@"().center();
        EnableInputs();
    }
    //End of Add Item

    //Print Travel tag: START
    function PrintTravelTag() {
        $(""#paper"").kendoDropDownList({
            change: function () {
            $("".pdf-page"")
                .removeClass(""size-a4"")
                .removeClass(""size-letter"")
                .removeClass(""size-executive"")
                .addClass(this.value());
            }
        });
    }

    function openPrintWindow() {
        //console.log(rowDataItem);
        DisableInputs();
        //Print Page Contrrolers
        if(rowDataItem != null) {
            printpdfwindow = null;
            
            $(""#paper"").kendoDropDownList({
                change: function () {
                $("".pdf-page"")
                    .removeClass(""size-a4"")
                    .removeClass(""size-letter"")
                    .removeClass(""size-executive"")
                    .addClass(this.value());
                }
            });

          ");
            WriteLiteral(@"  if($(""#item-grid-print"").html() == '') {
                $(""#item-grid-print"").kendoGrid({
                    dataSource: {
                        schema: {
                            model: {
                                id: ""BagBarcode"",
                                fields: {
                                    Key: { type: ""string"", editable: false },
                                    Seq: { type: ""number"", editable: false },
                                    TxnMode: { type: ""number"", editable: false },
                                    Style: { type: ""string"", editable: false },
                                    Shedule: { type: ""string"", editable: false },
                                    PO: { type: ""string"", editable: false },
                                    ZFeature: { type: ""string"", editable: false },
                                    DeliveryDate: { type: ""date"", editable: false },
                                    Color: { type: ""string"", editable: fal");
            WriteLiteral(@"se },
                                    Quantity: { type: ""number"", editable: false },
                                },
                            }
                        },
                        batch: true,
                        group: {
                            field: ""Key"", aggregates: [
                                { field: ""Style"", aggregate: ""count"" },
                                { field: ""Quantity"", aggregate: ""sum""},
                                { field: ""Key"", aggregate: ""count"" }
                            ]
                        },
                        aggregate: [ { field: ""Style"", aggregate: ""count"" },
                                        { field: ""Quantity"", aggregate: ""sum"" },
                                        { field: ""Key"", aggregate: ""min"" },
                                        { field: ""Key"", aggregate: ""max"" }]
                    },
                    scrollable: false,      
                    sortable: false,
            ");
            WriteLiteral(@"        filterable: false,
                    columns:[
                                {title:""Key"",field:""Key"",width:""22px"",hidden:true, aggregates: [""count""], groupHeaderTemplate: ""#= value # (Count: #= count#)""},
                                {title:""Seq"",field:""Seq"",width:""25px""},
                                {title:""TxnMode"",field:""TxnMode"",width:""58px"",hidden:true},
                                {title:""Style"",field:""Style"",width:""58px"", aggregates: [""count""]},
                                {title:""Shedule"",field:""Shedule"",width:""58px""},
                                {title:""PO"",field:""PO"",width:""60px""},
                                {title:""Z-Feature"",field:""ZFeature"",width:""60px""},
                                {title:""Delivery Date"",field:""DeliveryDate"",width:""60px"",hidden:true},
                                {title:""Color"",field:""Color"",width:""100px"", footerTemplate: ""Total"", groupFooterTemplate: ""Sub Total""},
                                {title:""Quantity"",field:""Qua");
            WriteLiteral(@"ntity"",width:""66px"",encoded:true, aggregates: [""sum""], groupFooterTemplate: ""#=sum#"", footerTemplate: ""#=sum#""},
                                {title:""Remark"",width:""66px"",encoded:true},
                            ],
                });
            }

            GetPrintTravelTag(rowDataItem.TravelBarCodeNo);

            printpdfwindow = $(""#printpdf"").kendoWindow({
                        height: ""75%"",
                        title: ""Print Dispatch Note"",
                        visible: false,
                        actions: [""Close""],
                        scrollable: true,
                        modal: true,
                        resizable: true,
                        draggable: true,
                        pinned: true,
                    }).data(""kendoWindow"");

                var arrows = [38, 40];
                printpdfwindow.open().center(); 
        }
        EnableInputs();
    }
    
    function GetPrintTravelTag(travelcode) {
        var timenow = ev");
            WriteLiteral("ent.timeStamp;\r\n        var gridData = [];\r\n        if(travelcode != \"\") {\r\n            $.ajax({\r\n                url: \'");
            EndContext();
            BeginContext(72717, 14, false);
#line 1461 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml"
                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(72731, 1875, true);
            WriteLiteral(@"/Lookup/GetTravelTagHeaderDetailsForPrint?traveltagId=' + travelcode,
                type: 'GET',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    //console.log(result);
                    if(result != null && result != """") {
                        $(""#job-quantitiy"").html(result.jobQty);
                        $(""#epf"").html(result.epf);
                        $(""#weight"").html(result.weight);
                        $(""#trolly-no"").html(result.trollyNo);
                        $(""#remarks"").html(result.remarks);

                        //Print Page
                        $(""#travel-barcode"").html(""*"" + travelcode + ""*"");
                        $(""#time-stamp"").html((new Date()).toLocaleDateString(""en-US"", { month: '2-digit', day: '2-digit', year: 'numeric'}));
                        //header
                        $(""#job-quantity-p"").html(result.jobQty + "" Nos"");
      ");
            WriteLiteral(@"                  $(""#epf-p"").html(result.epf);
                        $(""#weight-p"").html(result.weight + "" Kg"");
                        $(""#printed-time-p"").html((new Date()).toLocaleTimeString(""en-US""));
                        $(""#printed-date-p"").html((new Date()).toLocaleDateString(""en-US"", { month: '2-digit', day: '2-digit', year: 'numeric'}));
                        $(""#trolly-no-p"").html(result.trollyNo);
                        $(""#remarks-p"").html(result.remarks);

                        $(""#factory-p"").html(result.facCode);

                        //Request Item Grid Data
                        $(""#item-grid-print"") != undefined ? $(""#item-grid-print"").data('kendoGrid').dataSource.data([]) : """";
                        var gridData1 = [];
                        $.ajax({
                                url: '");
            EndContext();
            BeginContext(74607, 14, false);
#line 1492 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - OutSource\Views\Home\GenerateBuddyTag.cshtml"
                                 Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(74621, 33334, true);
            WriteLiteral(@"/Lookup/GetTravelBarcodeDetails?travelcode=' + travelcode,
                                type: 'GET',
                                dataType: 'json',
                                async: false,
                                contentType: 'application/json',
                                beforeSend: function () {
                                    $(""#ajaxBusy"").show();
                                },
                                complete: function () {
                                    $(""#ajaxBusy"").hide();
                                },  
                                success: function (response) {
                                    //console.log(response);
                                    var usList = [];
                                    var Total = 0;
                                    $.each(response, function (index, elements) {
                                        var object = {
                                            Key: elements.styleDesc + "" |");
            WriteLiteral(@" "" + elements.scheduleDesc + "" | "" + elements.colorDesc,
                                            Seq: elements.seq,
                                            TxnMode: elements.txnMode,
                                            Style: elements.styleDesc,
                                            Shedule: elements.scheduleDesc,
                                            PO: elements.poNo,
                                            ZFeature: elements.zfeature,
                                            DeliveryDate: formatDate(elements.deliveryDate),
                                            Color: elements.colorDesc,
                                            Quantity: elements.qty01,
                                        }

                                        Total = parseInt(elements.qty01) + Total;

                                        usList[0] == undefined ? usList[0] = elements.scheduleDesc : (!usList[0].includes(elements.scheduleDesc) ? (usList[0] = (usList[0] + "" |");
            WriteLiteral(@" "" + elements.scheduleDesc)) : usList[0] = usList[0]);

                                        //PO
                                        usList[1] == undefined ? usList[1] = elements.poNo : (!usList[1].includes(elements.poNo) ? (usList[1] = (usList[1] + "" | "" + elements.poNo)) : usList[1] = usList[1]);
                                        //Z Feature
                                        usList[2] == undefined ? usList[2] = elements.zfeature : (!usList[2].includes(elements.zfeature) ? (usList[2] = (usList[2] + "" | "" + elements.zfeature)) : usList[2] = usList[2]);
                                        //Color
                                        usList[3] == undefined ? usList[3] = elements.colorDesc : (!usList[3].includes(elements.colorDesc) ? (usList[3] = (usList[3] + "" | "" + elements.colorDesc)) : usList[3] = usList[3]);
                                        //Style
                                        usList[4] == undefined ? usList[4] = elements.styleDesc : (!usList[4].includes");
            WriteLiteral(@"(elements.styleDesc) ? (usList[4] = (usList[4] + "" | "" + elements.styleDesc)) : usList[4] = usList[4]);
                                        //Delivery Date
                                        usList[5] == undefined ? usList[5] = formatDate(elements.deliveryDate) : (!usList[5].includes(formatDate(elements.deliveryDate)) ? (usList[5] = (usList[5] + "" | "" + formatDate(elements.deliveryDate))) : usList[5] = usList[5]);
                                        //Week
                                        usList[6] == undefined ? usList[6] = getNumberOfWeek(elements.deliveryDate).toString() : (!usList[6].includes(getNumberOfWeek(elements.deliveryDate).toString()) ? (usList[6] = (usList[6] + "" | "" + getNumberOfWeek(elements.deliveryDate).toString())) : usList[6] = usList[6]);

                                        gridData1.push(object);
                                    });
                                    //console.log(""Travel Barcode Details Data Outputs: "", gridData1, usList);
          ");
            WriteLiteral(@"                          $(""#item-grid-print"").data('kendoGrid').dataSource.data(gridData1);

                                    //Travel Tag Other Data for Header
                                    //Header Elements 
                                    $(""#quantity-p"").html(Total + "" Nos"");
                                    $(""#purchase-order"").html(usList[1]);
                                    $(""#shedule-no"").html(usList[0]);
                                    $(""#customer-name"").html();
                                    $(""#delivery-date"").html(usList[5]);

                                    //header
                                    $(""#purchase-order-p"").html(usList[1]);
                                    $(""#shedule-no-p"").html(usList[0]);
                                    $(""#customer-name"").html('');
                                    $(""#delivery-date-p"").html(usList[5]);
                                    $(""#customer-name-p"").html('');
                            ");
            WriteLiteral(@"        $(""#week-no-p"").html(usList[6]);

                                    $(""#style-p"").html(usList[4]);
                                    $(""#color-p"").html(usList[3]);
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    formatErrorMessage(jqXHR, errorThrown, ""GenerateTravelBarcode"");
                                    EnableInputs();
                                }
                        });
                        EnableInputs();
                    }
                },
                error: function () {
                    $(""#search-result-grid-gatepass"").html('No Results found !!!');
                    EnableInputs();
                    FocusRequestNoTextBox();
                }
            });

            //Request Status Grid
                                                                   
        } else {
            msgBox.show('කරුණාකර යැවීමේ සටහන් අංකයක් තෝ");
            WriteLiteral(@"රා නැවත උත්සාහ කරන්න.', 'please select a request id and try again.'
            , 'අවවාදයයි / Warning', 'BS01', 'Warning');
            EnableInputs();
        }
    }

    //Function to get week number
    function getNumberOfWeek(indate) {
        const date = new Date(Date.parse(indate));
        const firstDayOfYear = new Date(date.getFullYear(), 0, 1);
        const pastDaysOfYear = (date - firstDayOfYear) / 86400000;
        return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);
    }

    //Print Comtrollers
    function Print() {
        DisableInputs();
        if($(""#dispatch-number"").html() != """") {
            printpdfwindow = $(""#printpdf"").kendoWindow({
                    height: ""75%"",
                    title: ""Print Travel Tag"",
                    visible: false,
                    actions: [""Close""],
                    scrollable: true,
                    modal: true,
                    resizable: true,
                    draggable: true,
   ");
            WriteLiteral(@"                 pinned: true,
                }).data(""kendoWindow"");

            var arrows = [38, 40];
            printpdfwindow.open().center();
            EnableInputs();  
        } else {
            EnableInputs();
            msgBox.show('කරුණාකර යැවීමේ සටහනක් පටවා නැවත උත්සාහ කරන්න.', 'please load an dispatch note and try again.', 'අවවාදයයි / Warning', 'BS01', 'Warning');
        }
    }
    
    function getPDF(selector) {
      kendo.drawing.drawDOM($(selector), {
           //forcePageBreak: "".items-page-break"",
           paperSize: ""A4"",
           allPages: true,
           avoidLinks: true,
           paperSize: ""A4"",
           margin: { top: ""0cm"", left: ""0cm"", right: ""1cm"", bottom: ""0cm"" },
           repeatHeaders: true,
           scale: 0.9
      }).then(function (group) {
            kendo.drawing.pdf.saveAs(group, ""Travel Tag"" + $(""#travel-barcode"").html() + "".pdf"");
        });
    }

    //Print Travel tag: END

    //Checkers
    function isNumeric(");
            WriteLiteral(@"n) {
          return !isNaN(parseFloat(n)) && isFinite(n);
    }

    function getBoolean(str) {
        if(""true"".startsWith(str)){
            return true;
        } else if(""false"".startsWith(str)){
            return false;
        } else {
            return null;
        }          
    }
    //End of Checkers

    //Input Controllers: START
    function DisableInputs() {
        $(""#gate-pass-request-create-button"").attr('disabled', 'disabled');
        $(""#gate-pass-request-cancel-button"").attr('disabled', 'disabled');
        $(""#gate-pass-request-cancel-button"").attr('disabled', 'disabled');
        $(""#gate-pass-request-cancel-button"").attr('disabled', 'disabled');

        $(""#open-request-item-window-button"").attr('disabled', 'disabled');
        $(""#open-split-item-window-button"").attr('disabled', 'disabled');

        $(""#split-add-button"").attr('disabled', 'disabled');
        $(""#split-cancel-button"").attr('disabled', 'disabled');
    }

    function EnableInputs");
            WriteLiteral(@"() {
        $(""#gate-pass-request-create-button"").removeAttr('disabled');
        $(""#gate-pass-request-cancel-button"").removeAttr('disabled');
        $(""#gate-pass-request-cancel-button"").removeAttr('disabled');
        $(""#gate-pass-request-cancel-button"").removeAttr('disabled');

        $(""#open-request-item-window-button"").removeAttr('disabled');
        $(""#open-split-item-window-button"").removeAttr('disabled');

        $(""#split-add-button"").removeAttr('disabled');
        $(""#split-cancel-button"").removeAttr('disabled');
    }

    function formatDate(date) {
        return (new Date(Date.parse(date)).toLocaleDateString(""en-US"", { month: '2-digit', day: '2-digit', year: 'numeric'}));
        //return (date == null || date == undefined || date == """") ? date : date.replace(/T/g, "" "")
    }
    //Input Controllers: END
</script>


<div>
    <div style=""margin-top: 5px; margin-left: 5px;"">
        <!--CREATE REQUEST BUTTON: BEGIN -->
        <div id=""createNewTTag"">
           ");
            WriteLiteral(@" <div style=""float: left; margin-right: 30px;"">
                <button id=""new-request-button"" class=""k-button"" style=""background-color: #FFA000; border: none; font-size: 17px; font-weight: 600; color: #000000;"" onclick=""opencreateNewTag()"">
                    <span class=""k-icon k-i-plus"" style=""margin-right: 7px;""></span><span>Create New Buddy Tag</span>
                </button>
            </div>
            <div style=""float: left;"">
                <span id=""gate-pass-creation-status"" style=""color: #51a351; font-size: large; visibility: hidden"">
                    Sucessful
                </span>
            </div>
        </div>
    <div style=""clear:both;""></div>
    <!--CREATE REQUEST BUTTON: END -->

    <!--FILTER: BEGIN -->
    <div style=""margin: 5px;"">
        <div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <l");
            WriteLiteral(@"abel for=""date-created-filter"">
                        Date Created
                    </label>
                </div>
                <div style=""float: left;"">
                    <input id=""date-created-filter"" class=""bu-form-control"" style=""width:180px""/>
                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""status-filter"">
                        Status
                    </label>
                </div>
                <div style=""float: left;"">
                    <div id=""status-filter"" class=""bu-form-control"" style=""width:180px""></div>
                </div>
            </div>
            <div style=""float: left; height: 35px; margin-right: 10px;"">
                <div style=""float: left; width: 150px; margin-right: 10px; text-align: right; font-weight: bold;"">
             ");
            WriteLiteral(@"       <label for=""TravelBarcode"">
                        Buddy Barcode
                    </label>
                </div>
                <div style=""float: left;"">
                    <div style=""width:180px;""><input id=""TravelBarcode"" class=""bu-form-control"" style=""width:100%; height: 26px;""/></div>
                </div>
            </div>
        </div>
        <div style=""clear: both;"">
            <div style=""float: left; height: 35px; margin-right: 10px; margin-bottom: 15px;"">
                <div style=""float: left; width: 110px; margin-right: 10px; visibility: hidden;"">
                    Invisible text
                </div>
                <div style=""float: left;"">
                    <button id=""filterGatePassRequestButton"" class=""k-button"" style=""width: 180px; width: 180px; padding-left: 5px; background-color: green; border: none; font-size: 17px; font-weight: 600; color: #000000;"" onclick=""RefreshRequestGrid()"">
                        <span class=""k-icon k-i-search"" style=""");
            WriteLiteral(@"margin-right: 7px; text-align:left;""></span><span>Search</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!--FILTER: END -->

    <!--DETAILS PAGE GRID: BEGIN -->
    <div id=""traveltag-grid"" style=""clear: both; padding-top: 5px;"">
</div>

<!--CREATE NEW TRAVEL TAG PAGE: BEGIN -->
<div id=""createNewTag"" hidden=""hidden"">
    <div style=""height: 535px; max-height: 535px; overflow: auto; "">
        <div style=""float: left; width: 25%; margin-right: 10px;"">
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""group-mode-dropdown"">Tag Mode</label>
                </div>
                <div style=""float: left;"">
                    <input id=""group-mode-dropdown"" class=""bu-form-control"" style=""width:180px""/>
                </div>
                <div style=""float: left;"">
             ");
            WriteLiteral(@"       <span id=""job-quantity-requried-sign"" style=""margin-left: 5px; color: Red;"">*</span>
                </div>
            </div>
            <div style=""height: 35px; margin-top: 20px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""job-quantity-text"">Quantity</label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""job-quantity-text"" name=""jobQuantity"" style=""width:200px;"" type=""text"" value=""0"">
                </div>
                <div style=""float: left;"">
                    <span id=""job-quantity-requried-sign"" style=""margin-left: 5px; color: Red;"">*</span>
                </div>
            </div>
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""weight-text"">
        ");
            WriteLiteral(@"                Weight
                    </label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""weight-text"" name=""Weight"" style=""width:200px;"" type=""text"" value=""0"">
                </div>
                <div style=""float: left;"">
                    <span style=""margin-left: 5px; color: Red;"">*</span>
                </div>
            </div>
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""trolly-number-text"">
                        Trolly/Bag No.
                    </label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""trolly-number-text"" name=""Weight"" style=""width:200px;"" type=""text"" value="""">
                </div>
                <div style=""float: left;"">
                    <span style=""margi");
            WriteLiteral(@"n-left: 5px; color: Red;"">*</span>
                </div>
            </div>
            <div style=""clear: both; height: 35px;""></div>
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""color-text-i"">
                        Color :
                    </label>
                </div>
                <div style=""float: left;"">
                    <label id=""color-text-i"" style=""font-size: 20px; font-weight: 600; margin-top: -4px;""></label><label id=""color-id-i"" hidden=""hidden""></label>
                </div>
            </div>
        </div>
        <div style=""float: left; width: 25%; margin-right: 10px;"">
            <div style=""height: 35px; margin-top: 20px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""allocation-date"">Allocation Date</lab");
            WriteLiteral(@"el>
                </div>
                <div style=""float: left;"">
                    <input id=""allocation-date"" class=""bu-form-control"" style=""width:180px""/>
                </div>
            </div>
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""receiver-epf-text"">EPF</label>
                </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""receiver-epf-text"" name=""receiver-epf-text"" style=""width:200px;"" type=""text"" value="""">
                </div>
            </div>
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""color-code-dropdown"">Priority Color Code</label>
                </div>
                <div style=""float: left;"">
         ");
            WriteLiteral(@"           <input id=""color-code-dropdown"" class=""bu-form-control"" style=""width:180px""/>
                </div>
            </div>
            <div style=""height: 35px;"">
            </div>
            <div style=""height: 35px;"">
                <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""remarks-text"">
                        Remarks
                    </label>
                </div>
                <div style=""float: left; margin-right: 10px;"">
                    <textarea class=""k-textbox"" cols=""20"" id=""remarks-text"" name=""gpRemarks"" rows=""2"" style=""width:200px;resize: none;""></textarea>
                </div>
            </div>
        </div>
        <div style=""float: left; width: 20%; margin-right: 10px; margin-top: 10px;"">
            <div id=""current-quantitiy-text"" style=""height: 45%; margin-top: 20px; text-align: center; font-size: 100px; color: #D32F2F; height: 100px; font-weight: 600;"">
     ");
            WriteLiteral(@"           0
            </div>
            <div id=""remaining-quantitiy-text"" style=""height: 45%; margin-top: 20px; text-align: center; font-size: 45px; height: 100px; font-weight: 600;"">
                0
            </div>
        </div>
        <div style=""border: #ffffff63 solid 2px;"">
            <div style=""float: left; width: 25%; margin-right: 10px;"">
                <div style=""height: 35px; margin-top: 20px;"">
                    <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""style-label"" class=""travel-detail-text"">Style :</label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""style-label"" class=""travel-detail-label travel-detail-text"" style=""width:180px""></label>
                    </div>
                </div>
                <div style=""height: 35px; margin-top: 20px;"">
                    <div style=""float: left; width: 140px; ma");
            WriteLiteral(@"rgin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""shedule-label"" class=""travel-detail-text"">Shedule :</label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""shedule-label"" class=""travel-detail-label travel-detail-text"" style=""width:180px""></label>
                    </div>
                </div>
                <div style=""height: 35px; margin-top: 20px;"">
                    <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""zfeature-label"" class=""travel-detail-text"">Z-Feature :</label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""zfeature-label"" class=""travel-detail-label travel-detail-text"" style=""width:180px""></label>
                    </div>
                </div>
                <div style=""height: 35px; margin-top: 20px;"">
           ");
            WriteLiteral(@"         <div style=""float: left; width: 140px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""quantiity-label"" class=""travel-detail-text"">Quantitiy :</label>
                    </div>
                    <div style=""float: left;"">
                        <label id=""quantiity-label"" class=""travel-detail-label travel-detail-text"" style=""width:180px""></label>
                    </div>
                </div>
            </div>
        </div>
        <div style=""clear:both;""></div>
        <div style=""clear: both;"">
            <h2 style=""font-weight: bold;"">
                Items
            </h2>
        </div>
        <div>
            <div style=""clear: both; height: 35px;"">
                <div style=""float: left; width: 180px; margin-right: 10px; text-align: right; font-weight: bold;"">
                    <label for=""bag-barcode-text"" style=""margin-top: 3px;"">
                        Scan Garment Barcode
                    </label>
   ");
            WriteLiteral(@"             </div>
                <div style=""float: left;"">
                    <input class=""k-textbox"" id=""bag-barcode-text"" name=""bag-barcode-text"" style=""width:200px; margin-right: 5px;"" type=""text"" value="""">
                    <button id=""open-request-item-window-button"" class=""k-button button-add"" style=""margin-right: 5px;"" onclick=""allocateFromBagBarcode()"">
                        <span class=""k-icon k-i-plus"" style=""margin-right: 7px;""></span><span>Add (F5)</span>
                    </button>
                    <!--
                    <button id=""open-split-item-window-button"" class=""k-button button-split-add"" style=""margin-right: 5px;"" onclick=""openAddItemWindow()"">
                        <span class=""k-icon k-i-plus"" style=""margin-right: 7px;""></span><span>Split and Add (F6)</span>
                    </button>
                    -->
                    <button id=""open-request-expand-window-button"" class=""k-button other-buttons"" style=""margin-left: 2px; width: 32px;"" onclick=""o");
            WriteLiteral(@"penExandTable()"">
                        <span class=""k-icon k-i-full-screen"" style=""margin-right: 5px;""></span><span></span>
                    </button>
                </div>
                <div style=""float: left; margin-top: 6px; margin-right: 10px; text-align: right; font-weight: bold; width: 53%; font-size: 12px;"" hidden=""hidden"">
                    <div style=""float: left; width: 11%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""style-text""></label><label id=""style-id"" hidden=""hidden""></label>
                    </div>
                    <div style=""float: left; width: 11%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""shedule-text""></label><label id=""shedule-id"" hidden=""hidden""></label>
                    </div>
                    <div style=""float: left; width: 11%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""po-text""></label><label");
            WriteLiteral(@" id=""po-id"" hidden=""hidden""></label>
                    </div>
                    <div style=""float: left; width: 11%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""z-feature-text""></label>
                    </div>
                    <div style=""float: left; width: 20%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""color-text""></label><label id=""color-id"" hidden=""hidden""></label>
                    </div>
                    <div style=""float: left; width: 7%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""bag-quantity-text"" hidden=""hidden""></label><label id=""unallocated-text""></label><label id=""allocated-text"" hidden=""hidden""></label>
                    </div>
                    <div style=""float: left; margin-left: 20px; text-align: right; font-weight: bold;"">
                        <label id=""deliverdate-text""></label>
                    </");
            WriteLiteral(@"div>
                </div>
                <div style=""float: left; margin-top: 6px; margin-right: 10px; text-align: right; font-weight: bold; width: 53%;"" hidden=""hidden"">
                    <div style=""float: left; width: 15%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""size-id"" hidden=""hidden""></label>
                    </div>
                    <div style=""float: left; width: 15%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""seq-id"" hidden=""hidden""></label>
                    </div>
                    <div style=""float: left; width: 15%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""wf-id"" hidden=""hidden""></label>
                    </div>
                    <div style=""float: left; width: 15%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""dep-id"" hidden=""hidden""></label>
               ");
            WriteLiteral(@"     </div>
                    <div style=""float: left; width: 15%; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label id=""l3-id"" hidden=""hidden""></label>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- REQUEST ITEMS GRID: BEGIN -->
        <div id=""bag-barcode-details-table"" style=""margin-top: 5px; margin-bottom: 5px; width: 99%; height: 37%;"">   
            <!--END: Remove Request item window -->
            <!-- REQUEST ITEMS GRID: END -->
        </div>
        <div style=""height: 50px""></div>
    </div>
    <div style=""clear: both; height: 35px; margin-top: 20px; position: absolute; top: 10; bottom: 0; height: 7%;"">
        <div id=""createGPWaitingDiv"" style=""display: none;"">
            <span>
            </span> <span style=""margin-left: 5px;"">
                Saving...
            </span>
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""");
            WriteLiteral(@"gate-pass-request-create-button"" type=""button"" class=""k-button button-done"" value=""Create"" style=""width: 180px; margin-right: 20px !important"" onclick=""saveRequest()"">
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""gate-pass-request-cancel-button"" type=""button"" class=""k-button button-reset"" value=""Reset"" style=""width: 180px; margin-right: 20px !important"" onclick=""resetRequest()"">
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""gate-pass-request-cancel-button"" type=""button"" class=""k-button button-cancel"" value=""Cancel"" style=""width: 180px; margin-right: 20px !important"" onclick=""cancelRequest()"">
        </div>
    </div>
</div>
<!--CREATE NEW PASS PAGE: END -->

<!--ADD ITEMS PAGE: BEGIN -->
<div id=""split-and-allocate"" hidden=""hidden"">
    <div style=""overflow: auto; min-height: 90px;"">
        <!--FILTER: BEGIN -->
        <div style=""margin: 5px;"">
            <div>
                <div style=""floa");
            WriteLiteral(@"t: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left; width: 170px; margin-right: 10px; text-align: right; font-weight: bold;"">
                        <label for=""allocation-quantity-text"">
                            Allocate Quantity
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <input class=""k-textbox"" id=""allocation-quantity-text"" name=""bag-barcode-text"" style=""width:200px; margin-right: 5px;"" type=""text"" value="""">
                    </div>
                    <div style=""float: left;"">
                        <label id=""bag-quantity"" style=""margin-left: 5px; color: #f50000;font-size: 16px; margin-top: 3px;""></label>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left; width: 170px; margin-right: 10px; text-align: right; font-weight: bold;"">
           ");
            WriteLiteral(@"             <label for=""ModeSelect"">
                            Mode
                        </label>
                    </div>
                    <div style=""float: left;"">
                        <div id=""ModeSelect"" class=""bu-form-control"" style=""width:180px""></div>
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left; width: 170px; margin-right: 8px; text-align: right; font-weight: bold; padding-left: 3px;"">
                        <button id=""open-request-item-window-button"" class=""k-button"" style=""margin-right: 5px;"" onclick=""startScanBarcodes()"">
                            <span class=""k-icon k-i-plus"" style=""margin-right: 7px;""></span><span>Start Scan</span>
                        </button>
                    </div>
                    <div style=""float: left;"">
                        <input class=""k-textbox"" id=""allocation-barcode-text"" name=""bag-barcode-text"" s");
            WriteLiteral(@"tyle=""width:200px; margin-right: 5px;"" type=""text"" value="""">
                    </div>
                </div>
                <div style=""float: left; height: 35px; margin-right: 10px;"">
                    <div style=""float: left;"">
                        <label id=""allocation-barcode-count"" style=""margin-top: 5px; font-size: 15px; font-weight: bold;""></label>
                        <label id=""allocation-barcode-mode-text"" style=""margin-top: 5px; color: #4CAF50; font-size: 15px; font-weight: bold; margin-left: 6px;"" hidden=""hidden"">Success</label>
                    </div>
                </div>
            </div>
        </div>
        <div style=""margin-top: 5px;""></div>
    </div>
    <div id=""barcode-pool-table"" style=""margin-top: 5px; margin-bottom: 5px; width: 99%; height: 350px !important;"">   
            <!--END: Remove Request item window -->
            <!-- REQUEST ITEMS GRID: END -->
    </div>
    <div style=""margin-top: 5px;""></div>
    <div style=""clear: both; height: 35");
            WriteLiteral(@"px; position: absolute; top: 10; bottom: 0; height: 7%; margin-bottom: 25px !important;"">
        <div id=""createGPWaitingDiv"" style=""display: none;"">
            <span>
                <img src=""/Bcw/gps/Content/kendoui/Default/loading.gif"">
            </span> <span style=""margin-left: 5px;"">
                Saving...
            </span>
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""split-add-button"" type=""button"" class=""k-button"" value=""Add"" style=""width: 70px;"" onclick=""splitandAdd()"">
        </div>
        <div style=""float: left; margin-right: 10px;"">
            <input id=""split-cancel-button"" type=""button"" class=""k-button"" value=""Cancel"" style=""width: 70px;"" onclick=""splitCancel()"">
        </div>
    </div>
    <div style=""margin-top: 5px;""></div>
    
    <!-- BARCODE OOL TABLE: START -->
    <div id=""barcode-pool-table-data"" hidden=""hidden"">
    </div>
    <!-- BARCODE OOL TABLE: END -->
</div>
<!--ADD ITEMS PAGE: END -->

<!--");
            WriteLiteral(@"PRINT: START-->
<div id=""printpdf"" hidden=""hidden""> <!-- hidden=""hidden"" -->
    <div id=""example"">

        <div class=""box wide hidden-on-narrow"">
            <div style=""height: 35px; margin-top: 2px;"">
                <div style=""float: left; width: 120px; margin-right: 10px; margin-left: 4px; text-align: left; font-weight: bold;"">
                    <label for=""return"">Select Page Size</label>
                </div>
                <div style=""float: left;"">
                    <select id=""paper"" style=""width: 100px;"">
                        ");
            EndContext();
            BeginContext(107955, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a2b74e8ea564849ac722343b73abaf9", async() => {
                BeginContext(107988, 2, true);
                WriteLiteral("A4");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(107999, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(108025, 43, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ae73e03de19747cc8e4d66fb1c4ab025", async() => {
                BeginContext(108053, 6, true);
                WriteLiteral("Letter");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(108068, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(108094, 49, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "27a5c28c7ad44152b1b33ed57121f63b", async() => {
                BeginContext(108125, 9, true);
                WriteLiteral("Executive");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(108143, 7064, true);
            WriteLiteral(@"
                    </select>
                </div>
                <div style=""float: left;"">
                    <span id=""approvers-requried-sign"" style=""margin-left: 5px; color: Red;"">
                        *
                    </span>
                </div>
                <div style=""float: left;  margin-left: 20px; text-align: left; font-weight: bold;"">
                    <button class=""export-pdf k-button"" onclick=""getPDF('.pdf-page')"">Export</button>
                </div>
            </div>
        </div>

        <div class=""page-container hidden-on-narrow"">
            <div class=""pdf-page size-a4"">
                <div class=""inner-page"">
                    <div class=""pdf-header"">
                        <div class=""row"">
                        <span class=""company-logo"">
                            <img src=""../images/logo.png"" style=""width: 80px; margin-top: -14px;""/>
                        </span>
                        <span style=""margin-left: 127px; font-siz");
            WriteLiteral(@"e: 20px; font-weight: 600;"">BUDDY TAG</span>
                        <span class=""invoice-number barcode-text"" style=""margin-top: 13px; margin-top: -10px; margin-right: -7px;"" id=""travel-barcode""></span>
                        <div>
                    </div>
                    <div class=""pdf-footer"">
                        <p>
                            <label style=""font-size: 9px;"" id=""time-stamp""></label>
                        </p>
                    </div>
                    <div class=""row"" id=""barcodeDetails"" style=""margin-right: -7px;"">
                        <table class=""tg"" style=""width:100%"">
                            <thead>
                                <tr>
                                    <th class=""tg-o4nv"" colspan=""8"" style=""background-color: #a9aeaed9; !important""><span style=""background-color:rgba(255, 255, 255, 0)"">Job Order Buddy Tag Information</span></th>
                                </tr>
                                </thead>
                    ");
            WriteLiteral(@"            <tbody>
                                <tr>
                                    <td class=""tg-asgn"">Purchase Order</td>
                                    <td class=""tg-7zrl"" id=""purchase-order-p""></td>
                                    <td class=""tg-asgn"">Job Quantity</td>
                                    <td class=""tg-7zrl""id=""job-quantity-p""></td>
                                    <td class=""tg-asgn"">Shedule</td>
                                    <td class=""tg-7zrl"" id=""shedule-no-p""> </td>
                                    <td class=""tg-asgn"">EPF</td>
                                    <td class=""tg-7zrl"" id=""epf-p""> </td>
                                </tr>
                                <tr>
                                    <td class=""tg-asgn"">Weight</td>
                                    <td class=""tg-7zrl"" id=""weight-p""></td>
                                    <td class=""tg-asgn"">Quantity</td>
                                    <td class=""tg-7zrl"" id=");
            WriteLiteral(@"""quantity-p""></td>
                                    <td class=""tg-asgn"">Delivery Date</td>
                                    <td class=""tg-7zrl"" id=""delivery-date-p""></td>
                                    <td class=""tg-asgn"">Signature</td>
                                    <td class=""tg-7zrl"" id=""signature-p""></td>
                                </tr>
                                <tr>
                                    <td class=""tg-asgn"">Printed Time</td>
                                    <td class=""tg-7zrl"" id=""printed-time-p""> </td>
                                    <td class=""tg-asgn"">Printed Date</td>
                                    <td class=""tg-7zrl"" id=""printed-date-p""> </td>
                                    <td class=""tg-asgn"">Week No.</td>
                                    <td class=""tg-7zrl"" id=""week-no-p""> </td>
                                    <td class=""tg-asgn"">Trolley No</td>
                                    <td class=""tg-7zrl"" id=""trolly-no-p"" s");
            WriteLiteral(@"tyle=""min-width: 25px;""> </td>
                                </tr>
                                <tr>
                                    <td class=""tg-asgn"">Customer Name</td>
                                    <td class=""tg-8d8j"" colspan=""5"" id=""customer-name-p""> </td>
                                    <td class=""tg-asgn"">Supervisor Sign</td>
                                    <td class=""tg-7zrl""> </td>
                                </tr>
                                <tr>
                                    <td class=""tg-asgn"">Remarks</td>
                                    <td class=""tg-8d8j"" colspan=""7"" id=""remarks-p""> </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class=""row"" id=""afterwashGarmentDetails"" style=""margin-right: -7px;"">
                        <table class=""tg"" style=""width: 100%;"">
                            <thead>
                       ");
            WriteLiteral(@"         <tr>
                                    <th class=""tg-o4nv"" colspan=""5"" style=""background-color: #a9aeaed9; !important""><span style=""background-color:rgba(255, 255, 255, 0)"">AWG - After Wash Garment Details</span></th>
                                </tr>
                                </thead>
                                <tbody>
                                <tr>
                                    <td class=""tg-asgn"">Style</td>
                                    <td class=""tg-7zrl"" id=""style-p""> </td>
                                    <td class=""tg-asgn"">Factory</td>
                                    <td class=""tg-7zrl"" id=""factory-p""> </td>
                                    <td class=""tg-asgn"" id=""color-p"">Color Name</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class=""row"" id=""procestable"" style=""margin-right: 3px;"">
                        <div ");
            WriteLiteral(@"class=""pdf-body"" style=""margin-right: 3px"">
                            <h6>TRAVEL TAG ITEMS</h6>
                            <div style=""font-size: 9px; width: 604px;"" id=""item-grid-print""></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class=""responsive-message""></div>

        <!-- Load Pako ZLIB library to enable PDF compression -->
        <script src=""../content/shared/js/pako.min.js""></script>
    </div>
</div>
<!--PRINT: END-->

<!--Expanded Table Window: START-->
<div id=""expandedWindow"" hidden=""hiden"">
    <div style=""clear:both;"">
        <div>
            <h2>
                Items
            </h2>
        </div>
        <!-- REQUEST ITEMS GRID -->
        <div id=""expand-items-grid"" style=""margin-top: 5px;"">
        </div>
    </div>
</div>
<!--Expanded Table Window: END-->

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
